(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    341032,       6991]
NotebookOptionsPosition[    338374,       6906]
NotebookOutlinePosition[    338776,       6923]
CellTagsIndexPosition[    338733,       6920]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Parameters", "Section",
 CellChangeTimes->{{3.8339375666990633`*^9, 3.8339375777803793`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleSizeArray", "=", 
   RowBox[{"{", 
    RowBox[{
    "50000", ",", "50000", ",", "50000", ",", "50000", ",", "50000", ",", 
     "50000"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nArray", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaArray", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thetaArray", "=", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}]}],
    ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorArray", "=", 
     RowBox[{"RandomColor", "[", "length", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorArray", "=", 
     RowBox[{"{", 
      RowBox[{
      "Orange", ",", "Red", ",", "Blue", ",", "Purple", ",", "Brown", ",", 
       "Black"}], "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorArray", "=", 
   RowBox[{"{", 
    RowBox[{
    "Red", ",", "Blue", ",", "Black", ",", "Red", ",", "Blue", ",", "Brown", 
     ",", "Black"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "rootDir", "=", 
    "\"\<D:\\\\research\\\\eigenvectors\\\\simulations\\\\data\\\\finite\>\""}\
], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedDataFile", "=", "\"\<simulation_1.mx\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"analyticalDataFile", "=", "\"\<analytical_min_1.mx\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "sampleSizeArray", "]"}], ",", 
        RowBox[{"Length", "[", "nArray", "]"}], ",", 
        RowBox[{"Length", "[", "alphaArray", "]"}], ",", 
        RowBox[{"Length", "[", "thetaArray", "]"}]}], "}"}], "]"}], "<", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "sampleSizeArray", "]"}], ",", 
        RowBox[{"Length", "[", "nArray", "]"}], ",", 
        RowBox[{"Length", "[", "alphaArray", "]"}], ",", 
        RowBox[{"Length", "[", "thetaArray", "]"}]}], "}"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Missing parameters!!\>\"", "]"}], ";", 
     RowBox[{"length", "=", "0"}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"length", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "sampleSizeArray", "]"}], ",", 
         RowBox[{"Length", "[", "nArray", "]"}], ",", 
         RowBox[{"Length", "[", "alphaArray", "]"}], ",", 
         RowBox[{"Length", "[", "thetaArray", "]"}]}], "}"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedDataFile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"rootDir", ",", "simulatedDataFile"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analyticalDataFile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"rootDir", ",", "analyticalDataFile"}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7927166418073235`*^9, 3.79271669778209*^9}, {
   3.792716961044549*^9, 3.7927169612165937`*^9}, 3.792719767535927*^9, {
   3.7927199468206997`*^9, 3.7927199808400965`*^9}, {3.792720568981498*^9, 
   3.792720569387833*^9}, {3.792720699448744*^9, 3.792720719372717*^9}, {
   3.7927208890000043`*^9, 3.792720897501096*^9}, {3.792721997715086*^9, 
   3.792721998668316*^9}, 3.792723816544462*^9, {3.7927257000891337`*^9, 
   3.7927257004642825`*^9}, {3.7927258733733215`*^9, 
   3.7927259122055902`*^9}, {3.792726051314195*^9, 3.792726051657984*^9}, {
   3.792726102350894*^9, 3.7927261937981186`*^9}, 3.7927263429234*^9, 
   3.7927263740359964`*^9, 3.7927269821746883`*^9, 3.792727037211811*^9, {
   3.7927272275604053`*^9, 3.792727228419884*^9}, {3.79272744927137*^9, 
   3.7927274505529594`*^9}, 3.7927275357337246`*^9, 3.792727675201803*^9, {
   3.7927277645708284`*^9, 3.7927277992620306`*^9}, {3.792727958794668*^9, 
   3.7927279701552563`*^9}, 3.792728703639542*^9, 3.7927550479824653`*^9, {
   3.7927550804380302`*^9, 3.7927550913610954`*^9}, 3.792756020163459*^9, 
   3.7927561862749124`*^9, 3.7927596927288623`*^9, 3.792759895172324*^9, {
   3.792760153746978*^9, 3.7927601547626953`*^9}, {3.7927602234575224`*^9, 
   3.792760242037445*^9}, {3.7927951889009857`*^9, 3.7927951894479246`*^9}, {
   3.792795305069623*^9, 3.7927953058665953`*^9}, {3.7931442040325136`*^9, 
   3.7931442053607864`*^9}, {3.7931447343516445`*^9, 3.793144734820448*^9}, {
   3.793145186243561*^9, 3.7931451866813116`*^9}, {3.7931452434998693`*^9, 
   3.7931452441562057`*^9}, 3.79314576414919*^9, 3.7931651996750216`*^9, 
   3.79316524445498*^9, {3.7931654505984535`*^9, 3.79316545098392*^9}, {
   3.7931655104364457`*^9, 3.7931655391432495`*^9}, {3.7931660723868976`*^9, 
   3.7931660771587005`*^9}, {3.7931661925506516`*^9, 3.793166192904893*^9}, {
   3.7931674472206125`*^9, 3.793167447900176*^9}, {3.7931675314172697`*^9, 
   3.793167533304762*^9}, 3.7931677062758813`*^9, {3.793167988509886*^9, 
   3.7931679886945114`*^9}, 3.7931696897134995`*^9, 3.793169780409862*^9, {
   3.7931701759493*^9, 3.7931701761655493`*^9}, 3.793170252782732*^9, 
   3.793170427572447*^9, {3.793170671162902*^9, 3.7931707110186515`*^9}, {
   3.7931712523585796`*^9, 3.79317125275918*^9}, {3.793171285586815*^9, 
   3.7931713202072563`*^9}, {3.7931714568019137`*^9, 3.793171457535644*^9}, {
   3.793171512499815*^9, 3.793171513317505*^9}, {3.7931717023715677`*^9, 
   3.7931717140655828`*^9}, 3.793171808509059*^9, 3.79317184783235*^9, {
   3.7931826204717426`*^9, 3.7931826286178837`*^9}, {3.793182809447237*^9, 
   3.793182818747127*^9}, {3.793183338651309*^9, 3.793183340687931*^9}, {
   3.793183420473365*^9, 3.793183420888418*^9}, {3.793183537842511*^9, 
   3.7931835400438623`*^9}, {3.7931836233796034`*^9, 
   3.7931836237646303`*^9}, {3.7932406969566393`*^9, 3.793240701421771*^9}, {
   3.7933139182469287`*^9, 3.7933139186376057`*^9}, {3.7933141275813513`*^9, 
   3.7933141278781004`*^9}, 3.793317368086852*^9, {3.7933257178677225`*^9, 
   3.793325758387643*^9}, {3.7933258030016923`*^9, 3.793325829473228*^9}, {
   3.7933258643516893`*^9, 3.793325869320958*^9}, {3.793326010007606*^9, 
   3.793326010241965*^9}, {3.7933260438550367`*^9, 3.7933260856092253`*^9}, 
   3.7933263031476665`*^9, 3.7933264762909393`*^9, {3.7933279616228285`*^9, 
   3.7933279739676776`*^9}, 3.7933282070702686`*^9, {3.7933283878548117`*^9, 
   3.793328388511071*^9}, {3.7937867665302672`*^9, 3.793786767186581*^9}, 
   3.7937870615776625`*^9, {3.793787654812854*^9, 3.793787655109924*^9}, {
   3.7937879679245405`*^9, 3.7937879684091215`*^9}, {3.793788570692136*^9, 
   3.793788570864083*^9}, 3.793788646028378*^9, {3.7937886821884947`*^9, 
   3.793788695877613*^9}, 3.7937891032635183`*^9, {3.7937891908124833`*^9, 
   3.7937891915779934`*^9}, {3.7937892613354616`*^9, 
   3.7937892615699034`*^9}, {3.793789364815292*^9, 3.793789366346739*^9}, {
   3.793789456028363*^9, 3.7937894658104763`*^9}, 3.7937896426576996`*^9, {
   3.7937898052532597`*^9, 3.7937898060971055`*^9}, 3.7937899016229577`*^9, 
   3.7937901413203325`*^9, {3.7937908263780117`*^9, 3.7937908315192175`*^9}, 
   3.793790958954685*^9, {3.7937911129086685`*^9, 3.7937911136433253`*^9}, {
   3.7937912188733344`*^9, 3.7937912192169704`*^9}, {3.793791323603104*^9, 
   3.7937913238532143`*^9}, {3.7937914185195155`*^9, 
   3.7937914188791084`*^9}, {3.7937915038255653`*^9, 3.793791507013365*^9}, 
   3.7937916023518934`*^9, {3.7937924691986494`*^9, 3.793792469323635*^9}, {
   3.793795865816421*^9, 3.793795870035814*^9}, {3.7937964450772877`*^9, 
   3.793796456703481*^9}, {3.7938325472041197`*^9, 3.793832565559576*^9}, {
   3.7938347267960434`*^9, 3.793834752861532*^9}, {3.7938369716131353`*^9, 
   3.793836971941306*^9}, 3.793837003991618*^9, {3.7938381152982535`*^9, 
   3.7938381159387736`*^9}, 3.793838339329811*^9, {3.7938385347255507`*^9, 
   3.7938385350070143`*^9}, {3.793838858853998*^9, 3.793838859057343*^9}, {
   3.793838998962793*^9, 3.793839009448248*^9}, {3.7938390643603735`*^9, 
   3.793839064688609*^9}, 3.793839106364873*^9, {3.793839406881462*^9, 
   3.793839407428345*^9}, {3.7938399575655537`*^9, 3.7938399583156395`*^9}, {
   3.7938399903813796`*^9, 3.793839991756566*^9}, {3.793840235157576*^9, 
   3.793840267239135*^9}, {3.793840813535891*^9, 3.793840818083443*^9}, {
   3.793842138176005*^9, 3.7938421431920147`*^9}, 3.7938431482435246`*^9, {
   3.7938440611468563`*^9, 3.7938440657881584`*^9}, {3.7938449420153112`*^9, 
   3.7938449502660184`*^9}, {3.7938450521050887`*^9, 3.7938450597465067`*^9}, 
   3.793845368498294*^9, 3.7938456528257895`*^9, {3.7938460174057646`*^9, 
   3.793846033110586*^9}, {3.7938463923052287`*^9, 3.79384639291486*^9}, {
   3.7938468053861246`*^9, 3.793846825404084*^9}, {3.7938475900015593`*^9, 
   3.7938475902203298`*^9}, {3.7938482876856127`*^9, 
   3.7938482877166724`*^9}, {3.793849004855955*^9, 3.7938490135602016`*^9}, {
   3.7938498083171544`*^9, 3.793849809926515*^9}, {3.7938498476494837`*^9, 
   3.7938498533063493`*^9}, {3.793850573133377*^9, 3.793850573539699*^9}, 
   3.7938791879793158`*^9, {3.793879654701161*^9, 3.793879656060874*^9}, {
   3.7942809165039597`*^9, 3.794280919535534*^9}, {3.794281476235796*^9, 
   3.7942815174747524`*^9}, {3.7942816129068336`*^9, 
   3.7942816293927774`*^9}, {3.7942822276289015`*^9, 3.794282238442567*^9}, {
   3.794283829393915*^9, 3.7942838675855007`*^9}, {3.7942841998869057`*^9, 
   3.7942842018402386`*^9}, {3.7942842472669764`*^9, 
   3.7942842491264005`*^9}, {3.7942881808880177`*^9, 3.794288216970009*^9}, {
   3.7942891466632795`*^9, 3.794289150007221*^9}, {3.794289245001728*^9, 
   3.7942892707076063`*^9}, {3.794290496084821*^9, 3.794290499663167*^9}, {
   3.7942906184416656`*^9, 3.7942906213324027`*^9}, {3.794290853685605*^9, 
   3.7942909065191803`*^9}, {3.7942915227572184`*^9, 3.794291542243715*^9}, {
   3.7942916064536924`*^9, 3.7942917333108244`*^9}, {3.7942920545014915`*^9, 
   3.7942920574705625`*^9}, {3.7942944042943926`*^9, 3.794294407763505*^9}, {
   3.794294446158392*^9, 3.794294455768591*^9}, {3.7943018867517867`*^9, 
   3.7943018914241576`*^9}, {3.7943034606745324`*^9, 
   3.7943034633309126`*^9}, {3.794306973490382*^9, 3.794306973787486*^9}, {
   3.794307120037479*^9, 3.7943071244598637`*^9}, {3.7943073842999983`*^9, 
   3.794307400348772*^9}, {3.7943075515679364`*^9, 3.794307551802343*^9}, {
   3.7943076749563017`*^9, 3.7943076861762514`*^9}, {3.794307720992465*^9, 
   3.794307721164176*^9}, {3.7943082746930943`*^9, 3.7943082788810873`*^9}, 
   3.794308911375287*^9, {3.7943106026115775`*^9, 3.7943106094874516`*^9}, {
   3.79431233065594*^9, 3.7943123479391813`*^9}, {3.7943144431880627`*^9, 
   3.794314461408594*^9}, {3.794314569185921*^9, 3.7943145772961597`*^9}, {
   3.7943146188005967`*^9, 3.7943146684777966`*^9}, {3.79431472312428*^9, 
   3.794314733843967*^9}, 3.794314909456725*^9, {3.7943149857304974`*^9, 
   3.794314985918017*^9}, {3.794315653942541*^9, 3.794315731029045*^9}, {
   3.7943575423716035`*^9, 3.794357573015563*^9}, {3.7943586280036335`*^9, 
   3.7943586281755276`*^9}, {3.7943588748267965`*^9, 3.79435887518617*^9}, 
   3.7943622427163143`*^9, 3.7943623753399086`*^9, {3.7943624730066204`*^9, 
   3.7943624732253857`*^9}, {3.794362515167337*^9, 3.79436251535485*^9}, {
   3.7943625474833355`*^9, 3.7943625653291483`*^9}, {3.794362831232417*^9, 
   3.7943628354049215`*^9}, {3.794362914647641*^9, 3.7943629148196907`*^9}, {
   3.7944572239449806`*^9, 3.794457225554718*^9}, {3.7944572840295305`*^9, 
   3.7944572880926485`*^9}, {3.794457604628397*^9, 3.794457621833169*^9}, {
   3.794457780443898*^9, 3.7944578065248055`*^9}, 3.794457846466595*^9, 
   3.794457923178112*^9, 3.794458063255424*^9, {3.7944581268715997`*^9, 
   3.7944581270749483`*^9}, {3.794458268612809*^9, 3.79445832016502*^9}, {
   3.794459001269369*^9, 3.79445901222348*^9}, {3.7944592842684293`*^9, 
   3.7944592945038958`*^9}, 3.7944598427968054`*^9, {3.7944598766130786`*^9, 
   3.794459901443672*^9}, {3.794711650622012*^9, 3.79471175664898*^9}, {
   3.7947124817576704`*^9, 3.7947124820703363`*^9}, 3.7947125441707973`*^9, {
   3.794713270029746*^9, 3.794713270982769*^9}, 3.794713474192207*^9, {
   3.794713566155034*^9, 3.7947135730778084`*^9}, 3.794714549010217*^9, {
   3.794714582591936*^9, 3.7947147347646685`*^9}, 3.7947148270245447`*^9, {
   3.794714941193035*^9, 3.794714941396014*^9}, {3.794715058924177*^9, 
   3.7947150608150473`*^9}, {3.794715238443389*^9, 3.7947152549297285`*^9}, {
   3.794715492127002*^9, 3.794715533412668*^9}, {3.7947161606673107`*^9, 
   3.7947161738093452`*^9}, {3.794716234315628*^9, 3.7947162407694883`*^9}, {
   3.7947163138868465`*^9, 3.794716316387106*^9}, {3.7947187462635274`*^9, 
   3.7947187560770555`*^9}, {3.794718787330411*^9, 3.794718811536343*^9}, {
   3.7947235569584513`*^9, 3.7947235962752066`*^9}, {3.794733062122963*^9, 
   3.7947330688426456`*^9}, {3.794733294318068*^9, 3.794733311273156*^9}, {
   3.7947336783354197`*^9, 3.7947336835703397`*^9}, {3.7947358785089226`*^9, 
   3.79473587975887*^9}, {3.7947839132612095`*^9, 3.794783922981204*^9}, {
   3.7947849890208144`*^9, 3.7947849893960094`*^9}, {3.7947851401776514`*^9, 
   3.794785160554945*^9}, 3.794785376687262*^9, {3.79478544330396*^9, 
   3.79478544691372*^9}, 3.79478555001832*^9, {3.794786681099127*^9, 
   3.7947866827244473`*^9}, {3.7947867205566196`*^9, 
   3.7947867522631283`*^9}, {3.7947877591070223`*^9, 
   3.7947877624667606`*^9}, {3.794787828052108*^9, 3.794787828458198*^9}, {
   3.7947881287405467`*^9, 3.79478812919357*^9}, {3.794788272615324*^9, 
   3.7947882732714424`*^9}, {3.7947883129789915`*^9, 3.794788330793425*^9}, {
   3.794788507499693*^9, 3.7947885090936055`*^9}, {3.7947914674860163`*^9, 
   3.794791498098869*^9}, {3.794801944257491*^9, 3.7948019559774985`*^9}, {
   3.7948020653173246`*^9, 3.7948020748183117`*^9}, {3.7948021885334373`*^9, 
   3.79480219912832*^9}, {3.7948022683234034`*^9, 3.7948023344733477`*^9}, {
   3.7948028222985263`*^9, 3.7948028231578383`*^9}, {3.794802867459617*^9, 
   3.794802911651655*^9}, {3.7948071854797416`*^9, 3.7948071939179487`*^9}, {
   3.794807318587758*^9, 3.794807352446513*^9}, {3.7948074201100187`*^9, 
   3.7948074244540243`*^9}, {3.794807748379538*^9, 3.794807755067596*^9}, {
   3.7948080218195024`*^9, 3.7948080223038883`*^9}, {3.7948236430076632`*^9, 
   3.7948236497742133`*^9}, {3.7950526261245613`*^9, 
   3.7950526511741085`*^9}, {3.795052705101589*^9, 3.7950527710461693`*^9}, {
   3.795055301051541*^9, 3.7950553164748926`*^9}, {3.7950572095204997`*^9, 
   3.7950572138646965`*^9}, 3.7950572463211613`*^9, {3.7951357965296354`*^9, 
   3.7951358032491026`*^9}, {3.795140655405239*^9, 3.795140666125151*^9}, {
   3.7952989447953625`*^9, 3.795298956296749*^9}, {3.795299026491787*^9, 
   3.795299031882992*^9}, {3.7953013567577853`*^9, 3.7953013635085106`*^9}, {
   3.7953014542469244`*^9, 3.7953014647791567`*^9}, {3.7953019693252015`*^9, 
   3.7953019778574095`*^9}, {3.7953475513428593`*^9, 
   3.7953476437499433`*^9}, {3.795347868709776*^9, 3.7953478933380537`*^9}, {
   3.795347959404537*^9, 3.7953479629888716`*^9}, {3.797298688444705*^9, 
   3.7972986903977823`*^9}, {3.7979981572611666`*^9, 
   3.7979981775460453`*^9}, {3.812999752811386*^9, 3.8129997549834857`*^9}, {
   3.8130032659595547`*^9, 3.8130033028072824`*^9}, {3.813003879651862*^9, 
   3.813003906811182*^9}, {3.8130043213498507`*^9, 3.8130043331480117`*^9}, {
   3.8130053025816956`*^9, 3.813005307598011*^9}, {3.8130055929567604`*^9, 
   3.813005629601492*^9}, 3.813053853971745*^9, {3.8130539697967234`*^9, 
   3.8130539703905487`*^9}, {3.813054511820346*^9, 3.8130545168175764`*^9}, {
   3.813054634004527*^9, 3.8130546389970894`*^9}, {3.813055706500695*^9, 
   3.8130557350341153`*^9}, {3.813056062884313*^9, 3.8130560676909637`*^9}, {
   3.813056256245505*^9, 3.813056257776579*^9}, {3.81305654482572*^9, 
   3.8130565591473255`*^9}, {3.8130937221206656`*^9, 3.813093757030681*^9}, {
   3.81309996398129*^9, 3.813099966434679*^9}, {3.8131119796315527`*^9, 
   3.8131119860543165`*^9}, {3.8131147219847136`*^9, 3.813114743893482*^9}, {
   3.813115624144658*^9, 3.8131156435997276`*^9}, {3.81311820374244*^9, 
   3.813118222634939*^9}, {3.8131182565917463`*^9, 3.813118274656141*^9}, {
   3.8131267662723527`*^9, 3.8131267771955953`*^9}, {3.81312682374749*^9, 
   3.813126835748783*^9}, {3.813126908115814*^9, 3.813126908709778*^9}, {
   3.8131269508080587`*^9, 3.8131269558242316`*^9}, {3.8131272634667854`*^9, 
   3.81312727338972*^9}, {3.8131274736923804`*^9, 3.8131274818496995`*^9}, {
   3.813199092664771*^9, 3.8131991051699533`*^9}, {3.813199261970026*^9, 
   3.813199263667223*^9}, {3.8131993874934998`*^9, 3.813199394143332*^9}, {
   3.814078450460925*^9, 3.8140784541956854`*^9}, {3.8141147452667527`*^9, 
   3.814114753314471*^9}, {3.8321025632955675`*^9, 3.832102600535942*^9}, 
   3.832102742226442*^9, {3.8321040713297167`*^9, 3.832104071765482*^9}, {
   3.8321042108074217`*^9, 3.8321042398274884`*^9}, 3.8321043435325437`*^9, {
   3.8321045055974417`*^9, 3.8321045316106176`*^9}, {3.8321046099908495`*^9, 
   3.832104612597785*^9}, 3.8321047990258503`*^9, {3.8321081582451572`*^9, 
   3.8321081681952906`*^9}, {3.832108202895509*^9, 3.8321082095243187`*^9}, {
   3.8321146663934135`*^9, 3.832114669783328*^9}, {3.8321149252443542`*^9, 
   3.832114925594833*^9}, {3.8321150218406734`*^9, 3.8321150337316904`*^9}, {
   3.8321180337283187`*^9, 3.832118049256981*^9}, {3.832118342486386*^9, 
   3.832118365264599*^9}, {3.832142608206303*^9, 3.8321426108244534`*^9}, {
   3.8321431949529934`*^9, 3.832143195401187*^9}, {3.8321566517581625`*^9, 
   3.832156652238698*^9}, {3.832156741383711*^9, 3.8321567424296045`*^9}, {
   3.8321575073282204`*^9, 3.8321575077340574`*^9}, {3.8321596944050694`*^9, 
   3.8321596947188525`*^9}, {3.8321597374349213`*^9, 
   3.8321597460829134`*^9}, {3.832159781106851*^9, 3.832159792234915*^9}, {
   3.832159934494385*^9, 3.832159934942384*^9}, {3.8321599910517626`*^9, 
   3.832159997499833*^9}, {3.8321990844104376`*^9, 3.832199094052254*^9}, {
   3.832199128305629*^9, 3.8321991551054893`*^9}, {3.832199195618417*^9, 
   3.8321992031469507`*^9}, {3.832199262254833*^9, 3.8321992637259684`*^9}, {
   3.8321993434986196`*^9, 3.8321993736892414`*^9}, {3.832200780082291*^9, 
   3.832200803084885*^9}, {3.8322016057778296`*^9, 3.832201647360433*^9}, {
   3.832201680442008*^9, 3.8322017120703163`*^9}, {3.8322017580751123`*^9, 
   3.83220176238791*^9}, 3.8322020819746046`*^9, {3.832202117150141*^9, 
   3.8322021254480333`*^9}, {3.8322824974732246`*^9, 3.832282500853387*^9}, {
   3.832496341342374*^9, 3.8324963508747993`*^9}, {3.83249850458636*^9, 
   3.832498508758685*^9}, {3.832498561436067*^9, 3.832498568030681*^9}, {
   3.832498606316044*^9, 3.8324986128792467`*^9}, {3.8324994488282404`*^9, 
   3.8324994550945487`*^9}, {3.832499489301547*^9, 3.8324994928485956`*^9}, {
   3.832499529665256*^9, 3.8324995407443657`*^9}, {3.8325017704171987`*^9, 
   3.832501776761591*^9}, 3.832501818063091*^9, {3.8325480178860693`*^9, 
   3.8325480216950827`*^9}, 3.832548135438431*^9, {3.8325493230638*^9, 
   3.8325493264342327`*^9}, {3.832572350562205*^9, 3.8325723521040688`*^9}, {
   3.8325727098454037`*^9, 3.832572715020653*^9}, {3.832573235704981*^9, 
   3.8325732359133997`*^9}, {3.832573324701065*^9, 3.8325733352779074`*^9}, {
   3.832573745819086*^9, 3.832573765350751*^9}, {3.832573924339673*^9, 
   3.832573927469391*^9}, {3.832574065048169*^9, 3.832574085009177*^9}, {
   3.8325744462177334`*^9, 3.8325744854929667`*^9}, {3.8325748151993856`*^9, 
   3.8325748682233057`*^9}, {3.8325749018460703`*^9, 3.832574903473218*^9}, {
   3.8325756463715534`*^9, 3.832575649390253*^9}, {3.8338749861884265`*^9, 
   3.833875013330844*^9}, {3.8338750607969937`*^9, 3.8338751152228966`*^9}, {
   3.8338752682951145`*^9, 3.833875490054088*^9}, {3.833875586034213*^9, 
   3.8338756021538615`*^9}, {3.83387579041149*^9, 3.8338758679915285`*^9}, {
   3.8338759536038218`*^9, 3.833875956240565*^9}, {3.8339380260531845`*^9, 
   3.833938037992816*^9}, {3.8339380768129826`*^9, 3.8339381509721785`*^9}, {
   3.8339382139030323`*^9, 3.833938299525284*^9}, {3.833938345312997*^9, 
   3.8339384140511837`*^9}, {3.8339384499354734`*^9, 
   3.8339384557130823`*^9}, {3.8339384966494102`*^9, 3.833938511304098*^9}, {
   3.8339386877811074`*^9, 3.83393869766601*^9}, {3.833938786959593*^9, 
   3.833938796761405*^9}, {3.8339420687329392`*^9, 3.8339420732696185`*^9}, {
   3.8339422388563967`*^9, 3.833942241173514*^9}, {3.833942882599349*^9, 
   3.8339428843847575`*^9}, {3.8339462617194967`*^9, 3.833946263504059*^9}, {
   3.8339468230377398`*^9, 3.833946824570012*^9}, {3.833948315838616*^9, 
   3.833948318769046*^9}, {3.8339484392797585`*^9, 3.8339484411661267`*^9}, 
   3.83394857077455*^9, {3.8339488710065317`*^9, 3.833948873678048*^9}, {
   3.833949290124226*^9, 3.833949340182172*^9}, {3.8339649691224422`*^9, 
   3.8339650243939147`*^9}, {3.833965447794812*^9, 3.8339654513104043`*^9}, {
   3.8339656575425806`*^9, 3.8339656662141747`*^9}, {3.8339657854062977`*^9, 
   3.8339657888586335`*^9}, {3.833966079248127*^9, 3.833966117159259*^9}, {
   3.833966235642194*^9, 3.833966236679574*^9}, 3.833966298925937*^9, {
   3.833967444694915*^9, 3.8339675603499107`*^9}, {3.8339675940770483`*^9, 
   3.8339676063797255`*^9}, {3.8339711329950666`*^9, 3.833971208152872*^9}, {
   3.8366118247496014`*^9, 3.836611902020254*^9}, {3.836611944133953*^9, 
   3.836612055193244*^9}, {3.836612104103488*^9, 3.8366121688919263`*^9}, {
   3.836616370116099*^9, 3.836616373639974*^9}, {3.8366168207737074`*^9, 
   3.836616842004346*^9}, {3.836618009010187*^9, 3.836618028360404*^9}, {
   3.8366183131788816`*^9, 3.8366183139041853`*^9}, {3.8366183613513308`*^9, 
   3.8366183706887245`*^9}, {3.8366184100086627`*^9, 3.836618434172911*^9}, {
   3.836620207002533*^9, 3.8366202121632433`*^9}, {3.836622940702574*^9, 
   3.8366229645876303`*^9}, {3.8366890648604746`*^9, 
   3.8366891658444767`*^9}, {3.836689915689639*^9, 3.8366899180271325`*^9}, {
   3.836697249463973*^9, 3.8366972765504007`*^9}, {3.836725815504289*^9, 
   3.836725890036666*^9}, {3.836726705439973*^9, 3.8367267073260546`*^9}, {
   3.836727647142011*^9, 3.8367276725515084`*^9}, {3.8370697142668123`*^9, 
   3.837069787255786*^9}, {3.8370700162633104`*^9, 3.8370700762794647`*^9}, {
   3.8370708076622877`*^9, 3.837070827325013*^9}, {3.8370709463878403`*^9, 
   3.8370709651506233`*^9}, {3.837071514860397*^9, 3.8370715224355*^9}, {
   3.837212608648346*^9, 3.8372126091218967`*^9}, {3.837335833946082*^9, 
   3.8373358344931526`*^9}, {3.8373389112214937`*^9, 
   3.8373389117691517`*^9}, {3.8373449413308268`*^9, 
   3.8373449655953484`*^9}, {3.8373851442708983`*^9, 
   3.8373852009003625`*^9}, {3.8373852911849394`*^9, 3.837385291306712*^9}, {
   3.837507055184305*^9, 3.8375071041255674`*^9}, {3.8378523653860984`*^9, 
   3.837852500041132*^9}, {3.837898725139533*^9, 3.837898725756915*^9}, {
   3.8379055964850063`*^9, 3.8379056012788124`*^9}, {3.8379449554311385`*^9, 
   3.8379449807014713`*^9}, {3.8395798777598896`*^9, 3.839579943113138*^9}, {
   3.839581663384651*^9, 3.8395816781642694`*^9}, {3.839582985138075*^9, 
   3.839582986383933*^9}, {3.8395837655148683`*^9, 3.8395838017152605`*^9}, {
   3.8396452214637794`*^9, 3.839645325459756*^9}, {3.8396663460546856`*^9, 
   3.8396663603357725`*^9}, {3.8396663925816493`*^9, 
   3.8396663978703833`*^9}, {3.839666452236372*^9, 3.8396664712921457`*^9}, {
   3.8396667164203444`*^9, 3.839666721589839*^9}, {3.839666759837405*^9, 
   3.8396667642873907`*^9}, {3.840181441340049*^9, 3.8401814426563025`*^9}, 
   3.8401815671380653`*^9, 3.840181684592493*^9, {3.8401817260226207`*^9, 
   3.8401817605727205`*^9}, 3.8401824752991667`*^9, 3.8401825970478125`*^9, {
   3.840183534799467*^9, 3.840183535771397*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Samples generation", "Section",
 CellChangeTimes->{{3.833937491854286*^9, 3.833937495922968*^9}, {
  3.8339375876248446`*^9, 3.8339375909411464`*^9}, {3.8339465803883147`*^9, 
  3.8339465858130217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Time taken to generate samples: \>\"", ",", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"simDataArray", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n", "=", 
            RowBox[{"nArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"alpha", "=", 
            RowBox[{"alphaArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"theta", "=", 
            RowBox[{"thetaArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"sampleSize", "=", 
            RowBox[{"sampleSizeArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"m", "=", 
            RowBox[{"n", "+", "alpha"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"u", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"MultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ",", 
                    "n"}], "]"}], ".", 
                  RowBox[{"{", 
                   RowBox[{"1.", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"sigma", " ", "=", " ", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "n", "]"}], "+", 
              RowBox[{"theta", "*", 
               RowBox[{"Outer", "[", 
                RowBox[{"Times", ",", "u", ",", 
                 RowBox[{"Conjugate", "[", "u", "]"}]}], "]"}]}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"A", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"MultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", "n"}], "]"}], ",", 
                    RowBox[{"sigma", "/", "2"}]}], "]"}], ",", "1"}], "]"}], 
                   "+", 
                   RowBox[{"I", "*", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"MultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", "n"}], "]"}], ",", 
                    RowBox[{"sigma", "/", "2"}]}], "]"}], ",", "1"}], 
                    "]"}]}]}], "]"}], ",", "m"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"W", "=", 
               RowBox[{
                RowBox[{"ConjugateTranspose", "[", "A", "]"}], ".", "A"}]}], 
              ";", " ", "\[IndentingNewLine]", 
              RowBox[{"eigSys", "=", 
               RowBox[{"Eigensystem", "[", "W", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"eigSys", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"eigSys", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "u"}], "}"}]}], 
             "\[IndentingNewLine]", ",", "sampleSize"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< seconds\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"simDataArray", ",", 
    RowBox[{"{", 
     RowBox[{
     "sampleSizeArray", ",", "nArray", ",", "alphaArray", ",", "thetaArray"}],
      "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Exported to: \>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{"simulatedDataFile", ",", "simDataArray"}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7927166418073235`*^9, 3.79271669778209*^9}, {
   3.792716961044549*^9, 3.7927169612165937`*^9}, 3.792719767535927*^9, {
   3.7927199468206997`*^9, 3.7927199808400965`*^9}, {3.792720568981498*^9, 
   3.792720569387833*^9}, {3.792720699448744*^9, 3.792720719372717*^9}, {
   3.7927208890000043`*^9, 3.792720897501096*^9}, {3.792721997715086*^9, 
   3.792721998668316*^9}, 3.792723816544462*^9, {3.7927257000891337`*^9, 
   3.7927257004642825`*^9}, {3.7927258733733215`*^9, 
   3.7927259122055902`*^9}, {3.792726051314195*^9, 3.792726051657984*^9}, {
   3.792726102350894*^9, 3.7927261937981186`*^9}, 3.7927263429234*^9, 
   3.7927263740359964`*^9, 3.7927269821746883`*^9, 3.792727037211811*^9, {
   3.7927272275604053`*^9, 3.792727228419884*^9}, {3.79272744927137*^9, 
   3.7927274505529594`*^9}, 3.7927275357337246`*^9, 3.792727675201803*^9, {
   3.7927277645708284`*^9, 3.7927277992620306`*^9}, {3.792727958794668*^9, 
   3.7927279701552563`*^9}, 3.792728703639542*^9, 3.7927550479824653`*^9, {
   3.7927550804380302`*^9, 3.7927550913610954`*^9}, 3.792756020163459*^9, 
   3.7927561862749124`*^9, 3.7927596927288623`*^9, 3.792759895172324*^9, {
   3.792760153746978*^9, 3.7927601547626953`*^9}, {3.7927602234575224`*^9, 
   3.792760242037445*^9}, {3.7927951889009857`*^9, 3.7927951894479246`*^9}, {
   3.792795305069623*^9, 3.7927953058665953`*^9}, {3.7931442040325136`*^9, 
   3.7931442053607864`*^9}, {3.7931447343516445`*^9, 3.793144734820448*^9}, {
   3.793145186243561*^9, 3.7931451866813116`*^9}, {3.7931452434998693`*^9, 
   3.7931452441562057`*^9}, 3.79314576414919*^9, 3.7931651996750216`*^9, 
   3.79316524445498*^9, {3.7931654505984535`*^9, 3.79316545098392*^9}, {
   3.7931655104364457`*^9, 3.7931655391432495`*^9}, {3.7931660723868976`*^9, 
   3.7931660771587005`*^9}, {3.7931661925506516`*^9, 3.793166192904893*^9}, {
   3.7931674472206125`*^9, 3.793167447900176*^9}, {3.7931675314172697`*^9, 
   3.793167533304762*^9}, 3.7931677062758813`*^9, {3.793167988509886*^9, 
   3.7931679886945114`*^9}, 3.7931696897134995`*^9, 3.793169780409862*^9, {
   3.7931701759493*^9, 3.7931701761655493`*^9}, 3.793170252782732*^9, 
   3.793170427572447*^9, {3.793170671162902*^9, 3.793170706958985*^9}, {
   3.794281562448305*^9, 3.794281580778412*^9}, {3.7942818007236223`*^9, 
   3.794281955709173*^9}, {3.7942819946662607`*^9, 3.7942820286075892`*^9}, {
   3.7942820940520983`*^9, 3.7942821148511887`*^9}, 3.7942821451513066`*^9, {
   3.7942821804207125`*^9, 3.7942821811708*^9}, {3.7942822223002043`*^9, 
   3.794282245458931*^9}, {3.794302335456045*^9, 3.7943023431441903`*^9}, {
   3.794302455500003*^9, 3.794302541712348*^9}, {3.79431065705505*^9, 
   3.7943106611023564`*^9}, {3.79431319212331*^9, 3.794313203374344*^9}, {
   3.7947148043188496`*^9, 3.794714804912649*^9}, {3.794714899547778*^9, 
   3.7947149324732695`*^9}, {3.794714966429902*^9, 3.7947149790562534`*^9}, {
   3.794715039828378*^9, 3.794715045063321*^9}, {3.794715109492092*^9, 
   3.794715109867174*^9}, {3.8321030075840254`*^9, 3.832103019594943*^9}, {
   3.8321031072140675`*^9, 3.8321031487987647`*^9}, {3.8321032915203676`*^9, 
   3.8321033105801086`*^9}, {3.8321033414409647`*^9, 
   3.8321033438977137`*^9}, {3.832103388126809*^9, 3.8321034428468943`*^9}, {
   3.832106179015751*^9, 3.832106181143772*^9}, {3.832108254181673*^9, 
   3.8321082637757754`*^9}, {3.832108311196887*^9, 3.8321083189031024`*^9}, {
   3.8321436022262087`*^9, 3.832143610147993*^9}, {3.8322825115595546`*^9, 
   3.8322825130596285`*^9}, {3.833937671584134*^9, 3.83393767428566*^9}, {
   3.83393771486364*^9, 3.833937758013988*^9}, {3.833937938278578*^9, 
   3.8339379688273444`*^9}, {3.8339381764518924`*^9, 3.8339382019836893`*^9}, 
   3.833938312031491*^9, {3.833938524453573*^9, 3.8339385495819407`*^9}, {
   3.833939698455518*^9, 3.833939702771481*^9}, {3.8339397483327427`*^9, 
   3.8339397487499323`*^9}, {3.833939833765346*^9, 3.8339398364303255`*^9}, {
   3.8339422926738143`*^9, 3.8339423319938*^9}, {3.83394256080123*^9, 
   3.8339425641727157`*^9}, {3.8339427685447836`*^9, 3.83394287465924*^9}, {
   3.833942907753744*^9, 3.8339429303749285`*^9}, {3.8339429639269247`*^9, 
   3.833942968992301*^9}, {3.833943049599779*^9, 3.833943071743038*^9}, {
   3.833943121142901*^9, 3.8339431589948797`*^9}, {3.833943261008999*^9, 
   3.833943333466135*^9}, {3.833943487138183*^9, 3.8339435489190097`*^9}, {
   3.8339435795659757`*^9, 3.833943654817669*^9}, {3.833943767146801*^9, 
   3.8339438166950417`*^9}, {3.8339438877711535`*^9, 3.833943907137107*^9}, {
   3.8339439410753536`*^9, 3.8339440504183173`*^9}, {3.833944255427881*^9, 
   3.833944284387946*^9}, {3.833944325362117*^9, 3.8339443385131264`*^9}, {
   3.833944376019601*^9, 3.8339443871579456`*^9}, {3.8339448508955574`*^9, 
   3.8339448670408196`*^9}, {3.8339449978714933`*^9, 
   3.8339449990046597`*^9}, {3.8339453499785995`*^9, 
   3.8339454237767897`*^9}, {3.8366119033371515`*^9, 
   3.8366119078496995`*^9}, {3.836616755774045*^9, 3.836616815326002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time taken to generate samples: \"\>", "\[InvisibleSpace]", 
   "350.6167367570632`", "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm[
  "Time taken to generate samples: ", 350.6167367570632, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8339437960653963`*^9, 3.8339438547169533`*^9, {3.8339438942916617`*^9, 
   3.8339439083153934`*^9}, {3.833943945411304*^9, 3.83394397748409*^9}, {
   3.8339442643160686`*^9, 3.8339442851883507`*^9}, 3.833944339012992*^9, {
   3.8339443815926228`*^9, 3.8339443878795795`*^9}, {3.833944852931445*^9, 
   3.833944867872486*^9}, 3.8339449996360607`*^9, 3.833945350848197*^9, {
   3.833945396897395*^9, 3.8339454246239614`*^9}, 3.833946266569167*^9, 
   3.8339483332429624`*^9, 3.833948445929493*^9, 3.8339485772159996`*^9, 
   3.8339488775263834`*^9, 3.833949371981529*^9, 3.8339654764833145`*^9, 
   3.83396571868902*^9, 3.833965813622073*^9, 3.8339661589923754`*^9, 
   3.8339663378884115`*^9, 3.833967538699132*^9, 3.8339675706068172`*^9, 
   3.8339676758416753`*^9, 3.8339714147651725`*^9, 3.8366122716610327`*^9, 
   3.836616846351616*^9, 3.836618064959358*^9, 3.8366183778909783`*^9, 
   3.8366189911615458`*^9, 3.8366230781428213`*^9, 3.836689509564366*^9, 
   3.836689953855134*^9, 3.8366997106875715`*^9, 3.8370562894956846`*^9, {
   3.8370698099050474`*^9, 3.8370698229384384`*^9}, 3.8370700932646966`*^9, 
   3.8373450560076237`*^9, 3.8375071322478046`*^9, 3.8378525685409207`*^9, 
   3.83790569002862*^9, 3.83794503390423*^9, 3.839579987614807*^9, 
   3.839581694484164*^9, 3.8395838337241507`*^9, 3.839652250916421*^9, 
   3.839666541951832*^9, 3.839667122407767*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Exported to: \"\>", 
   "\[InvisibleSpace]", \
"\<\"D:\\\\research\\\\eigenvectors\\\\simulations\\\\data\\\\finite\\\\\
simulation_7.mx\"\>"}],
  SequenceForm[
  "Exported to: ", 
   "D:\\research\\eigenvectors\\simulations\\data\\finite\\simulation_7.mx"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8339437960653963`*^9, 3.8339438547169533`*^9, {3.8339438942916617`*^9, 
   3.8339439083153934`*^9}, {3.833943945411304*^9, 3.83394397748409*^9}, {
   3.8339442643160686`*^9, 3.8339442851883507`*^9}, 3.833944339012992*^9, {
   3.8339443815926228`*^9, 3.8339443878795795`*^9}, {3.833944852931445*^9, 
   3.833944867872486*^9}, 3.8339449996360607`*^9, 3.833945350848197*^9, {
   3.833945396897395*^9, 3.8339454246239614`*^9}, 3.833946266569167*^9, 
   3.8339483332429624`*^9, 3.833948445929493*^9, 3.8339485772159996`*^9, 
   3.8339488775263834`*^9, 3.833949371981529*^9, 3.8339654764833145`*^9, 
   3.83396571868902*^9, 3.833965813622073*^9, 3.8339661589923754`*^9, 
   3.8339663378884115`*^9, 3.833967538699132*^9, 3.8339675706068172`*^9, 
   3.8339676758416753`*^9, 3.8339714147651725`*^9, 3.8366122716610327`*^9, 
   3.836616846351616*^9, 3.836618064959358*^9, 3.8366183778909783`*^9, 
   3.8366189911615458`*^9, 3.8366230781428213`*^9, 3.836689509564366*^9, 
   3.836689953855134*^9, 3.8366997106875715`*^9, 3.8370562894956846`*^9, {
   3.8370698099050474`*^9, 3.8370698229384384`*^9}, 3.8370700932646966`*^9, 
   3.8373450560076237`*^9, 3.8375071322478046`*^9, 3.8378525685409207`*^9, 
   3.83790569002862*^9, 3.83794503390423*^9, 3.839579987614807*^9, 
   3.839581694484164*^9, 3.8395838337241507`*^9, 3.839652250916421*^9, 
   3.839666541951832*^9, 3.8396671272184057`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytical expression", "Section",
 CellChangeTimes->{{3.8339465526154547`*^9, 3.8339465590315742`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "pdf", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**"}], "*", " ", "min", " ", 
     RowBox[{
     "eigenvector", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**"}]}], "******)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "generic", " ", "pdf", " ", "min", " ", "eigvec", " ", "for", " ", "zero",
      " ", "alpha"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.005"}], ";", "\[IndentingNewLine]", 
     RowBox[{
     "description", "=", "\"\<generic pdf min eigvec for zero alpha\>\""}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox[
        RowBox[{"n", "*", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"theta", "+", "1"}], ")"}], "n"], "*", 
         RowBox[{"(", 
          RowBox[{"n", "-", 
           FractionBox["theta", 
            RowBox[{"theta", "+", "1"}]]}], ")"}]}]], "*", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "z"}], ")"}], 
         RowBox[{"n", "-", "2"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["theta", 
             RowBox[{"theta", "+", "1"}]], 
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
         RowBox[{"n", "+", "1"}]]]}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "min", " ", "eigvec", " ", "for", " ", "n"}],
      ">=", "2"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.001"}], ";", "\[IndentingNewLine]", 
     RowBox[{"description", "=", "\"\<generic pdf min eigvec for n>=2\>\""}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"n_", ",", "alpha_"}], "]"}], ":=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "alpha"}], ")"}], "!"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"theta", "+", "1"}], ")"}], 
        RowBox[{"n", "+", "alpha"}]]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"theta", ">", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "2"}], ",", 
          RowBox[{
           RowBox[{"A", "[", 
            RowBox[{"n", ",", "alpha"}], "]"}], "*", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"B", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"kjs", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "k1", ",", "k2", ",", "k3", ",", "k4", ",", "k5", ",", 
                    " ", "k6", ",", " ", "k7", ",", " ", "k8", ",", " ", "k9",
                     ",", " ", "k10"}], "}"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"sumk", "=", 
                    RowBox[{"Total", "[", "kjs", "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"mat", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"k", "\[Equal]", "i1"}], ",", 
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "i1", "-", "1"}], ")"}], "!"}]], ",", 
                    "0"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", "1", ",", 
                    RowBox[{"alpha", "+", "1"}]}], "}"}]}], "]"}], " ", "}"}],
                     ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "i", "-", "j", "-", 
                    RowBox[{"kjs", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "-", "1"}], "]"}], "]"}], "-", "1"}], ")"}], 
                    "!"}]], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "2", ",", 
                    RowBox[{"alpha", "+", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"alpha", "+", "1"}]}], "}"}]}], "]"}]}], "}"}], 
                    ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "k", ",", "\"\< \>\"", ",", "k1", ",", "\"\< \>\"", ",", 
                    "k2", ",", "\"\< \>\"", ",", 
                    RowBox[{"MatrixForm", "[", "mat", "]"}]}], "]"}], ";"}], 
                    "*)"}], "\[IndentingNewLine]", "   ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"j", "=", "1"}], "alpha"], 
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "alpha", "-", "j", "-", "1"}], ")"}], 
                    "!"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"kjs", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "!"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"kjs", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ")"}], "!"}]}]], ")"}]}], 
                    ")"}], "*", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"alpha", "+", "sumk"}], ")"}], "!"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"n", "-", 
                    FractionBox["theta", 
                    RowBox[{"theta", "+", "1"}]]}], ")"}], 
                    RowBox[{"alpha", "+", "sumk", "+", "1"}]]], "*", 
                    RowBox[{"Det", "[", "mat", "]"}]}]}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"k1", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "2"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "2"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k2", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "3"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "3"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k3", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "4"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "4"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k4", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "5"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "5"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k5", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "6"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "6"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k6", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "7"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "7"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k7", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "8"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "8"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k8", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "9"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "9"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k9", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "10"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "10"}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k10", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "+", "alpha", "-", "11"}], ">", 
                    RowBox[{"n", "-", "2"}]}], ",", 
                    RowBox[{"n", "+", "alpha", "-", "11"}], ",", "0"}], 
                    "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "+", "k", "-", "1"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"n", "+", "k", "-", "2"}], ")"}], "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"-", "theta"}], 
                    RowBox[{"theta", "+", "1"}]], ")"}], 
                  RowBox[{"k", "-", "1"}]], "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "-", "z"}], ")"}], 
                  RowBox[{"n", "+", "k", "-", "3"}]]}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{
                    FractionBox["theta", 
                    RowBox[{"theta", "+", "1"}]], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
                 RowBox[{"n", "+", "k"}]]], "*", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"B", "[", 
                  RowBox[{"[", "h", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"h", ",", "1", ",", 
                   RowBox[{"Length", "[", "B", "]"}]}], "}"}]}], "]"}]}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", 
               RowBox[{"alpha", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "beta"}], ")"}], 
             RowBox[{"2", "+", "alpha"}]], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"alpha", "+", "1"}], ")"}], "!"}]], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"k", "+", "2"}], ")"}], "!"}], "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", "*", "alpha"}], "-", "k"}], ")"}], "!"}]}], 
                ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k", "!"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"alpha", "-", "k"}], ")"}], "!"}], "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"2", "-", "beta"}], ")"}], 
                  RowBox[{
                   RowBox[{"2", "*", "alpha"}], "-", "k", "+", "1"}]], "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"beta", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
                  RowBox[{"k", "+", "3"}]]}], ")"}]}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "0", ",", "alpha"}], "}"}]}], "]"}]}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}], 
          RowBox[{"n", "-", "2"}]]}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "min", " ", "eigvec", " ", "for", " ", "n"}],
      "=", "2"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.005"}], ";", "\[IndentingNewLine]", 
     RowBox[{"description", "=", 
      RowBox[{
       RowBox[{
       "generic", " ", "pdf", " ", "min", " ", "eigvec", " ", "for", " ", 
        "n"}], "=", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "beta"}], ")"}], 
         RowBox[{"2", "+", "alpha"}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"alpha", "+", "1"}], ")"}], "!"}]], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "2"}], ")"}], "!"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "alpha"}], "-", "k"}], ")"}], "!"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", "!"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"alpha", "-", "k"}], ")"}], "!"}], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"2", "-", "beta"}], ")"}], 
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "-", "k", "+", "1"}]], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"beta", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
              RowBox[{"k", "+", "3"}]]}], ")"}]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "alpha"}], "}"}]}], "]"}]}]}], ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**"}], "*", " ", "max", " ", 
     RowBox[{
     "eigenvector", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**"}]}], "******)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "max", " ", "eigvec", " ", "for", " ", "n"}],
      "=", 
     RowBox[{"2", " ", "simplified"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.001"}], ";", "\[IndentingNewLine]", 
     RowBox[{
     "description", "=", 
      "\"\<generic pdf max eigvec for n=2 simplified\>\""}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "1"}], "n"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
       FractionBox[
        RowBox[{
         RowBox[{"Beta", "[", 
          RowBox[{"3", ",", 
           RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "alpha"}], "+", "3"}], ")"}], "!"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"theta", "+", "1"}], ")"}], 
          RowBox[{"2", "+", "alpha"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "-", "beta"}], ")"}], 
          RowBox[{
           RowBox[{"2", "*", "alpha"}], "+", "4"}]]}]], "*", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{"3", ",", 
         RowBox[{
          RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
         RowBox[{"alpha", "+", "4"}], ",", 
         FractionBox[
          RowBox[{"1", "-", 
           RowBox[{"beta", 
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}]}]}], 
          RowBox[{"2", "-", "beta"}]]}], "]"}]}]}], ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"max", " ", "eigvec", " ", "n"}], "<=", "3"}], ",", " ", 
     RowBox[{"any", " ", "alpha"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.001"}], ";", "\[IndentingNewLine]", 
     RowBox[{"description", "=", "\"\<max eigvec n<=3, any alpha\>\""}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"delta", "[", 
       RowBox[{"z_", ",", "beta_"}], "]"}], ":=", 
      FractionBox[
       RowBox[{"1", "-", 
        RowBox[{"beta", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "z"}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"beta", "*", "z"}]}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"theta", ">", "0"}], ",", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"i", "=", "1"}], "n"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
           FractionBox["2", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"theta", "+", "1"}], ")"}], 
              RowBox[{"n", "+", "alpha"}]], "*", "beta"}]], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "*", "alpha"}], "+", "7"}], ")"}], "!"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Beta", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "1"}], ",", "3"}], "]"}], "*", 
             RowBox[{"Beta", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "2"}], ",", "3"}], "]"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"beta", "*", "z"}]}], ")"}], 
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "+", "6"}]], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"beta", "*", "z"}]}], ")"}], 
              RowBox[{"alpha", "+", "1"}]]}]], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"Pochhammer", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "alpha"}], "-", "4"}], ",", 
                    "k"}], "]"}], "*", 
                  RowBox[{"Pochhammer", "[", 
                   RowBox[{
                    RowBox[{"alpha", "+", "1"}], ",", "k"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"Pochhammer", "[", 
                   RowBox[{
                    RowBox[{"alpha", "+", "4"}], ",", "k"}], "]"}], "*", 
                  RowBox[{"k", "!"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"beta", "*", "z"}]}], ")"}], "*", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"beta", "*", "z"}]}], ")"}], "k"]}]], "*", 
                RowBox[{"AppellF1", "[", 
                 RowBox[{
                  RowBox[{"alpha", "+", "2"}], ",", 
                  RowBox[{
                   RowBox[{"2", "*", "alpha"}], "+", "7"}], ",", 
                  RowBox[{"alpha", "+", "k", "+", "1"}], ",", 
                  RowBox[{"alpha", "+", "5"}], ",", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"beta", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}], "-", "1"}], 
                   RowBox[{"1", "-", 
                    RowBox[{"beta", "*", "z"}]}]], ",", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"beta", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}], "-", "1"}], 
                   RowBox[{"2", "-", 
                    RowBox[{"beta", "*", "z"}]}]]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"2", "*", "alpha"}], "+", "4"}]}], "}"}]}], "]"}], 
             "-", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"Pochhammer", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "alpha"}], "-", "3"}], ",", 
                    "k"}], "]"}], "*", 
                  RowBox[{"Pochhammer", "[", 
                   RowBox[{
                    RowBox[{"alpha", "+", "2"}], ",", "k"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"Pochhammer", "[", 
                   RowBox[{
                    RowBox[{"alpha", "+", "5"}], ",", "k"}], "]"}], "*", 
                  RowBox[{"k", "!"}], "*", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"beta", "*", "z"}]}], ")"}], 
                   RowBox[{"k", "+", "1"}]]}]], "*", 
                RowBox[{"AppellF1", "[", 
                 RowBox[{
                  RowBox[{"alpha", "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"2", "*", "alpha"}], "+", "6"}], ",", 
                  RowBox[{"alpha", "+", "k", "+", "2"}], ",", 
                  RowBox[{"alpha", "+", "4"}], ",", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"beta", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}], "-", "1"}], 
                   RowBox[{"1", "-", 
                    RowBox[{"beta", "*", "z"}]}]], ",", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"beta", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}], "-", "1"}], 
                   RowBox[{"2", "-", 
                    RowBox[{"beta", "*", "z"}]}]]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"2", "*", "alpha"}], "+", "3"}]}], "}"}]}], "]"}]}],
             ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}], 
            RowBox[{"n", "-", "2"}]]}]}], "]"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "alpha"}], "+", "3"}], ")"}], "!"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"alpha", "+", "1"}], ")"}], "!"}], "*", 
           RowBox[{"alpha", "!"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"theta", "+", "1"}], ")"}], 
            RowBox[{"n", "+", "alpha"}]]}]], "*", 
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"beta", "*", "z"}]}], ")"}], 
           RowBox[{
            RowBox[{"2", "*", "alpha"}], "+", "4"}]]], "*", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
              RowBox[{"alpha", "+", "1"}], ",", 
              RowBox[{"2", "+", "alpha"}], ",", 
              RowBox[{"-", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}]}], "]"}], 
            RowBox[{"alpha", "+", "1"}]], "-", 
           RowBox[{"2", "*", 
            FractionBox[
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
               RowBox[{"alpha", "+", "2"}], ",", 
               RowBox[{"alpha", "+", "3"}], ",", 
               RowBox[{"-", 
                RowBox[{"delta", "[", 
                 RowBox[{"z", ",", "beta"}], "]"}]}]}], "]"}], 
             RowBox[{"alpha", "+", "2"}]]}], "+", 
           FractionBox[
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
              RowBox[{"alpha", "+", "3"}], ",", 
              RowBox[{"alpha", "+", "4"}], ",", 
              RowBox[{"-", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}]}], "]"}], 
            RowBox[{"alpha", "+", "3"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"max", " ", "eigvec", " ", "n"}], "<=", "3"}], ",", " ", 
     RowBox[{"any", " ", "alpha"}], ",", " ", 
     RowBox[{"simplified", " ", "version"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{
     "description", "=", 
      "\"\<max eigvec n<=3, any alpha, simplified version\>\""}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"delta", "[", 
       RowBox[{"z_", ",", "beta_"}], "]"}], ":=", 
      FractionBox[
       RowBox[{"1", "-", 
        RowBox[{"beta", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "z"}], ")"}]}]}], 
       RowBox[{"3", "-", "beta"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"appellF2", "[", 
       RowBox[{
       "a_", ",", "b1_", ",", "b2_", ",", "c1_", ",", "c2_", ",", "x_", ",", 
        "y_"}], "]"}], ":=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"Pochhammer", "[", 
            RowBox[{"a", ",", 
             RowBox[{"m", "+", "n"}]}], "]"}], "*", 
           RowBox[{"Pochhammer", "[", 
            RowBox[{"b1", ",", "m"}], "]"}], "*", 
           RowBox[{"Pochhammer", "[", 
            RowBox[{"b2", ",", "n"}], "]"}]}], 
          RowBox[{
           RowBox[{"Pochhammer", "[", 
            RowBox[{"c1", ",", "m"}], "]"}], "*", 
           RowBox[{"Pochhammer", "[", 
            RowBox[{"c2", ",", "n"}], "]"}], "*", 
           RowBox[{"m", "!"}], "*", 
           RowBox[{"n", "!"}]}]], "*", 
         SuperscriptBox["x", "m"], "*", 
         SuperscriptBox["y", "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "50"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"theta", ">", "0"}], ",", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"i", "=", "1"}], "n"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
           FractionBox["2", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"theta", "+", "1"}], ")"}], 
              RowBox[{"n", "+", "alpha"}]], "*", "beta"}]], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "*", "alpha"}], "+", "7"}], ")"}], "!"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Beta", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "1"}], ",", "3"}], "]"}], "*", 
             RowBox[{"Beta", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "2"}], ",", "3"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", "-", "beta"}], ")"}], 
             RowBox[{
              SuperscriptBox["n", "2"], "+", 
              RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}]]], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"appellF2", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["n", "2"], "+", 
                RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", 
               ",", "3", ",", 
               RowBox[{"alpha", "+", "4"}], ",", 
               RowBox[{"alpha", "+", "5"}], ",", 
               FractionBox["1", 
                RowBox[{"3", "-", "beta"}]], ",", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}], "]"}], "-", 
             RowBox[{"appellF2", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["n", "2"], "+", 
                RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", 
               ",", "3", ",", 
               RowBox[{"alpha", "+", "5"}], ",", 
               RowBox[{"alpha", "+", "4"}], ",", 
               FractionBox["1", 
                RowBox[{"3", "-", "beta"}]], ",", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}], "]"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}], 
            RowBox[{"n", "-", "2"}]]}]}], "]"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "alpha"}], "+", "3"}], ")"}], "!"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"alpha", "+", "1"}], ")"}], "!"}], "*", 
           RowBox[{"alpha", "!"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"theta", "+", "1"}], ")"}], 
            RowBox[{"n", "+", "alpha"}]]}]], "*", 
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"beta", "*", "z"}]}], ")"}], 
           RowBox[{
            RowBox[{"2", "*", "alpha"}], "+", "4"}]]], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"alpha", "+", "1"}]], 
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
              RowBox[{"alpha", "+", "1"}], ",", 
              RowBox[{"2", "+", "alpha"}], ",", 
              RowBox[{"-", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}]}], "]"}]}], "-", 
           RowBox[{"2", "*", 
            FractionBox["1", 
             RowBox[{"alpha", "+", "2"}]], 
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
              RowBox[{"alpha", "+", "2"}], ",", 
              RowBox[{"alpha", "+", "3"}], ",", 
              RowBox[{"-", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}]}], "]"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"alpha", "+", "3"}]], 
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
              RowBox[{"alpha", "+", "3"}], ",", 
              RowBox[{"alpha", "+", "4"}], ",", 
              RowBox[{"-", 
               RowBox[{"delta", "[", 
                RowBox[{"z", ",", "beta"}], "]"}]}]}], "]"}]}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "max", " ", "eigvec", " ", "for", " ", "n"}],
      "=", "4"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dz", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"description", "=", "\"\<generic pdf max eigvec for n=4\>\""}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"appellFA", "[", 
       RowBox[{
       "a_", ",", "b1_", ",", "b2_", ",", "b3_", ",", "c1_", ",", "c2_", ",", 
        "c3_", ",", "u_", ",", "v_", ",", "w_"}], "]"}], ":=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Pochhammer", "[", 
              RowBox[{"a", ",", 
               RowBox[{"p", "+", "q", "+", "r"}]}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"b1", ",", "p"}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"b2", ",", "q"}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"b3", ",", "r"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Pochhammer", "[", 
              RowBox[{"c1", ",", "p"}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"c2", ",", "q"}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"c3", ",", "r"}], "]"}], "*", 
             RowBox[{"p", "!"}], "*", 
             RowBox[{"q", "!"}], "*", 
             RowBox[{"r", "!"}]}], ")"}]}], ")"}], "*", 
         SuperscriptBox["u", "p"], "*", 
         SuperscriptBox["v", "q"], "*", 
         SuperscriptBox["w", "r"]}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"appellFAMod", "[", 
       RowBox[{
       "n_", ",", "alpha_", ",", "c1_", ",", "c2_", ",", "c3_", ",", "beta_", 
        ",", "z_"}], "]"}], ":=", 
      RowBox[{"appellFA", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["n", "2"], "+", 
         RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", ",", 
        "3", ",", "3", ",", "c1", ",", "c2", ",", "c3", ",", 
        FractionBox["1", 
         RowBox[{"4", "-", "beta"}]], ",", 
        FractionBox["1", 
         RowBox[{"4", "-", "beta"}]], ",", 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"beta", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}]}], 
         RowBox[{"4", "-", "beta"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "1"}], "n"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["n", "2"], "+", 
            RowBox[{"n", "*", "alpha"}], "-", "n", "+", "1"}], ")"}], "!"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"theta", "+", "1"}], ")"}], 
          RowBox[{"n", "+", "alpha"}]], "*", 
         SuperscriptBox["beta", 
          RowBox[{"n", "-", "2"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"4", "-", "beta"}], ")"}], 
          RowBox[{
           SuperscriptBox["n", "2"], "+", 
           RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}]]}]], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Beta", "[", 
             RowBox[{"3", ",", 
              RowBox[{"alpha", "+", "3"}]}], "]"}], ")"}], "2"], "*", 
          RowBox[{"appellFAMod", "[", 
           RowBox[{"n", ",", "alpha", ",", 
            RowBox[{"alpha", "+", "4"}], ",", 
            RowBox[{"alpha", "+", "6"}], ",", 
            RowBox[{"alpha", "+", "6"}], ",", "beta", ",", "z"}], "]"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Beta", "[", 
             RowBox[{"3", ",", 
              RowBox[{"alpha", "+", "3"}]}], "]"}], ")"}], "2"], "*", 
          RowBox[{"appellFAMod", "[", 
           RowBox[{"n", ",", "alpha", ",", 
            RowBox[{"alpha", "+", "6"}], ",", 
            RowBox[{"alpha", "+", "6"}], ",", 
            RowBox[{"alpha", "+", "4"}], ",", "beta", ",", "z"}], "]"}]}], 
         "+", 
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"2", ",", 
            RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
          RowBox[{"Beta", "[", 
           RowBox[{"2", ",", 
            RowBox[{"alpha", "+", "2"}]}], "]"}], "*", 
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "4"}]}], "]"}], "*", 
          RowBox[{"appellFAMod", "[", 
           RowBox[{"n", ",", "alpha", ",", 
            RowBox[{"alpha", "+", "5"}], ",", 
            RowBox[{"alpha", "+", "7"}], ",", 
            RowBox[{"alpha", "+", "4"}], ",", "beta", ",", "z"}], "]"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "2"}]}], "]"}], "*", 
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "4"}]}], "]"}], "*", 
          RowBox[{"appellFAMod", "[", 
           RowBox[{"n", ",", "alpha", ",", 
            RowBox[{"alpha", "+", "4"}], ",", 
            RowBox[{"alpha", "+", "7"}], ",", 
            RowBox[{"alpha", "+", "5"}], ",", "beta", ",", "z"}], "]"}]}], 
         "+", 
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "3"}]}], "]"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Beta", "[", 
             RowBox[{"3", ",", 
              RowBox[{"alpha", "+", "2"}]}], "]"}], ")"}], "2"], "*", 
          RowBox[{"appellFAMod", "[", 
           RowBox[{"n", ",", "alpha", ",", 
            RowBox[{"alpha", "+", "5"}], ",", 
            RowBox[{"alpha", "+", "6"}], ",", 
            RowBox[{"alpha", "+", "5"}], ",", "beta", ",", "z"}], "]"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "3"}]}], "]"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Beta", "[", 
             RowBox[{"3", ",", 
              RowBox[{"alpha", "+", "2"}]}], "]"}], ")"}], "2"], "*", 
          RowBox[{"appellFAMod", "[", 
           RowBox[{"n", ",", "alpha", ",", 
            RowBox[{"alpha", "+", "5"}], ",", 
            RowBox[{"alpha", "+", "5"}], ",", 
            RowBox[{"alpha", "+", "6"}], ",", "beta", ",", "z"}], "]"}]}]}], 
        ")"}]}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "max", " ", "eigvec", " ", "for", " ", "n"}],
      "=", 
     RowBox[{"4", " ", "with", " ", "F2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0.0"}], ";", " ", 
     RowBox[{"anaMax", "=", "0.9"}], ";", 
     RowBox[{"dz", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{
     "description", "=", 
      "\"\<generic pdf max eigvec for n=4 with F2 explicit\>\""}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"appellF2", "[", 
         RowBox[{
         "a_", ",", "b1_", ",", "b2_", ",", "c1_", ",", "c2_", ",", "x_", ",",
           "y_"}], "]"}], ":=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"Pochhammer", "[", 
              RowBox[{"a", ",", 
               RowBox[{"p", "+", "q"}]}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"b1", ",", "p"}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"b2", ",", "q"}], "]"}]}], 
            RowBox[{
             RowBox[{"Pochhammer", "[", 
              RowBox[{"c1", ",", "p"}], "]"}], "*", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"c2", ",", "q"}], "]"}], "*", 
             RowBox[{"p", "!"}], "*", 
             RowBox[{"q", "!"}]}]], "*", 
           SuperscriptBox["x", "p"], "*", 
           SuperscriptBox["y", "q"]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "0", ",", "100"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"appellF2", "[", 
       RowBox[{"phi_", ",", "beta_", ",", "gamma_", ",", "w_"}], "]"}], ":=", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Gamma", "[", "beta", "]"}], "*", 
         RowBox[{"Gamma", "[", "gamma", "]"}]}], 
        RowBox[{
         RowBox[{"Gamma", "[", "3", "]"}], "*", 
         RowBox[{"Gamma", "[", "3", "]"}], "*", 
         RowBox[{"Gamma", "[", 
          RowBox[{"beta", "-", "3"}], "]"}], "*", 
         RowBox[{"Gamma", "[", 
          RowBox[{"gamma", "-", "3"}], "]"}]}]], "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["u", "2"], "*", 
          SuperscriptBox["v", "2"], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "u"}], ")"}], 
           RowBox[{"beta", "-", "4"}]], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "v"}], ")"}], 
           RowBox[{"gamma", "-", "4"}]], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"u", "*", "w"}], "-", 
             RowBox[{"v", "*", "w"}]}], ")"}], 
           RowBox[{"-", "phi"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"i1", "[", 
         RowBox[{"w_", ",", "mu_", ",", "phi_", ",", "a_", ",", "b_"}], "]"}],
         ":=", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["w", "3"]], "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Binomial", "[", 
             RowBox[{"b", ",", "j"}], "]"}], "*", 
            RowBox[{"Binomial", "[", 
             RowBox[{"a", ",", "k"}], "]"}], "*", 
            RowBox[{"Binomial", "[", 
             RowBox[{
              RowBox[{"j", "+", "k", "+", "2"}], ",", "l"}], "]"}], "*", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"j", "+", "k", "+", "l"}]], 
             SuperscriptBox["w", "k"]], "*", 
            FractionBox[
             SuperscriptBox["mu", 
              RowBox[{"j", "+", "k", "+", "2", "-", "l"}]], 
             RowBox[{"phi", "-", "l", "-", "1"}]], "*", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"mu", "-", "w"}], ")"}], 
                RowBox[{"phi", "-", "l", "-", "1"}]]], "-", 
              FractionBox["1", 
               SuperscriptBox["mu", 
                RowBox[{"phi", "-", "l", "-", "1"}]]]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "b"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "a"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "0", ",", 
             RowBox[{"j", "+", "k", "+", "2"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"appellF2", "[", 
         RowBox[{"phi_", ",", "beta_", ",", "gamma_", ",", "w_"}], "]"}], ":=", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"Gamma", "[", "beta", "]"}], "*", 
           RowBox[{"Gamma", "[", "gamma", "]"}]}], 
          RowBox[{
           RowBox[{"Gamma", "[", "3", "]"}], "*", 
           RowBox[{"Gamma", "[", "3", "]"}], "*", 
           RowBox[{"Gamma", "[", 
            RowBox[{"beta", "-", "3"}], "]"}], "*", 
           RowBox[{"Gamma", "[", 
            RowBox[{"gamma", "-", "3"}], "]"}]}]], "*", 
         FractionBox["1", 
          SuperscriptBox["w", "3"]], "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Binomial", "[", 
             RowBox[{
              RowBox[{"beta", "-", "4"}], ",", "k"}], "]"}], "*", 
            RowBox[{"Binomial", "[", 
             RowBox[{
              RowBox[{"k", "+", "2"}], ",", "l"}], "]"}], "*", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"k", "+", "l"}]], 
             RowBox[{
              SuperscriptBox["w", "k"], "*", 
              RowBox[{"(", 
               RowBox[{"phi", "-", "l", "-", "1"}], ")"}]}]], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i1", "[", 
               RowBox[{"w", ",", 
                RowBox[{"1", "-", "w"}], ",", 
                RowBox[{"phi", "-", "l", "-", "1"}], ",", 
                RowBox[{"gamma", "-", "4"}], ",", 
                RowBox[{"k", "+", "2", "-", "l"}]}], "]"}], "-", 
              RowBox[{"i1", "[", 
               RowBox[{"w", ",", "1", ",", 
                RowBox[{"phi", "-", "l", "-", "1"}], ",", 
                RowBox[{"gamma", "-", "4"}], ",", 
                RowBox[{"k", "+", "2", "-", "l"}]}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"beta", "-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "0", ",", 
             RowBox[{"k", "+", "2"}]}], "}"}]}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{
       "NN_", ",", "b_", ",", "c_", ",", "alpha_", ",", "beta_", ",", "z_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "1"}], "4"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
       FractionBox["6", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["beta", 
             RowBox[{"1", "-", "beta"}]], "+", "1"}], ")"}], 
          RowBox[{"4", "+", "alpha"}]], "*", 
         SuperscriptBox["beta", "2"]}]], "*", 
       RowBox[{"Beta", "[", 
        RowBox[{"3", ",", 
         RowBox[{"b", "+", "alpha", "-", "3"}]}], "]"}], "*", 
       RowBox[{"Beta", "[", 
        RowBox[{"3", ",", 
         RowBox[{"c", "+", "alpha", "-", "3"}]}], "]"}], "*", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"NN", "+", "alpha"}], ")"}], "!"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"beta", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
         RowBox[{"NN", "+", "alpha", "+", "1"}]]], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12", "+", 
              RowBox[{"3", "*", "alpha"}], "-", "NN"}], ")"}], "!"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"beta", "*", "z"}]}], ")"}], 
            RowBox[{"13", "+", 
             RowBox[{"3", "*", "alpha"}], "-", "NN"}]]], "*", 
          RowBox[{"appellF2", "[", 
           RowBox[{
            RowBox[{"13", "+", 
             RowBox[{"3", "*", "alpha"}], "-", "NN"}], ",", 
            RowBox[{"b", "+", "alpha"}], ",", 
            RowBox[{"c", "+", "alpha"}], ",", 
            FractionBox["1", 
             RowBox[{"3", "-", 
              RowBox[{"beta", "*", "z"}]}]]}], "]"}]}], "-", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{"3", "*", "alpha"}], "+", "k", "-", "NN"}], ")"}], 
               "!"}], "*", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"beta", "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], "k"]}], 
             RowBox[{
              RowBox[{"k", "!"}], "*", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", "-", "beta"}], ")"}], 
               RowBox[{"13", "+", 
                RowBox[{"3", "*", "alpha"}], "-", "NN", "+", "k"}]]}]], "*", 
            RowBox[{"appellF2", "[", 
             RowBox[{
              RowBox[{"13", "+", 
               RowBox[{"3", "*", "alpha"}], "-", "NN", "+", "k"}], ",", 
              RowBox[{"b", "+", "alpha"}], ",", 
              RowBox[{"c", "+", "alpha"}], ",", 
              FractionBox["1", 
               RowBox[{"4", "-", "beta"}]]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"NN", "+", "alpha"}]}], "}"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "3", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "3", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "4", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "4", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "1", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "1", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "3", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "3", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "0", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "0", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "1", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "1", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "max", " ", "eigvec", " ", "for", " ", "n"}],
      "<=", "4"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dzArray", "=", 
      RowBox[{"{", 
       RowBox[{
       "0.005", ",", "0.005", ",", "0.005", ",", "0.0005", ",", "0.0005", ",",
         "0.0005", ",", "0.0005"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"description", "=", "\"\<max eigvec n<=4, any alpha\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"delta", "[", 
       RowBox[{"n_", ",", "z_", ",", "beta_"}], "]"}], ":=", 
      FractionBox[
       RowBox[{"1", "-", 
        RowBox[{"beta", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "z"}], ")"}]}]}], 
       RowBox[{"n", "-", "beta"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"appellF2", "[", 
       RowBox[{
       "a_", ",", "b1_", ",", "b2_", ",", "c1_", ",", "c2_", ",", "x_", ",", 
        "y_"}], "]"}], ":=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"Pochhammer", "[", 
            RowBox[{"a", ",", 
             RowBox[{"m", "+", "n"}]}], "]"}], "*", 
           RowBox[{"Pochhammer", "[", 
            RowBox[{"b1", ",", "m"}], "]"}], "*", 
           RowBox[{"Pochhammer", "[", 
            RowBox[{"b2", ",", "n"}], "]"}]}], 
          RowBox[{
           RowBox[{"Pochhammer", "[", 
            RowBox[{"c1", ",", "m"}], "]"}], "*", 
           RowBox[{"Pochhammer", "[", 
            RowBox[{"c2", ",", "n"}], "]"}], "*", 
           RowBox[{"m", "!"}], "*", 
           RowBox[{"n", "!"}]}]], "*", 
         SuperscriptBox["x", "m"], "*", 
         SuperscriptBox["y", "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "160"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "160"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"appellF2Int", "[", 
       RowBox[{"phi_", ",", "beta_", ",", "gamma_", ",", "w_"}], "]"}], ":=", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Gamma", "[", "beta", "]"}], "*", 
         RowBox[{"Gamma", "[", "gamma", "]"}]}], 
        RowBox[{
         RowBox[{"Gamma", "[", "3", "]"}], "*", 
         RowBox[{"Gamma", "[", "3", "]"}], "*", 
         RowBox[{"Gamma", "[", 
          RowBox[{"beta", "-", "3"}], "]"}], "*", 
         RowBox[{"Gamma", "[", 
          RowBox[{"gamma", "-", "3"}], "]"}]}]], "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["u", "2"], "*", 
          SuperscriptBox["v", "2"], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "u"}], ")"}], 
           RowBox[{"beta", "-", "4"}]], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "v"}], ")"}], 
           RowBox[{"gamma", "-", "4"}]], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"u", "*", "w"}], "-", 
             RowBox[{"v", "*", "w"}]}], ")"}], 
           RowBox[{"-", "phi"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{
       "NN_", ",", "b_", ",", "c_", ",", "alpha_", ",", "beta_", ",", "z_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "1"}], "4"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
       FractionBox["6", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["beta", 
             RowBox[{"1", "-", "beta"}]], "+", "1"}], ")"}], 
          RowBox[{"4", "+", "alpha"}]], "*", 
         SuperscriptBox["beta", "2"]}]], "*", 
       RowBox[{"Beta", "[", 
        RowBox[{"3", ",", 
         RowBox[{"b", "+", "alpha", "-", "3"}]}], "]"}], "*", 
       RowBox[{"Beta", "[", 
        RowBox[{"3", ",", 
         RowBox[{"c", "+", "alpha", "-", "3"}]}], "]"}], "*", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"NN", "+", "alpha"}], ")"}], "!"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"beta", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
         RowBox[{"NN", "+", "alpha", "+", "1"}]]], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12", "+", 
              RowBox[{"3", "*", "alpha"}], "-", "NN"}], ")"}], "!"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"beta", "*", "z"}]}], ")"}], 
            RowBox[{"13", "+", 
             RowBox[{"3", "*", "alpha"}], "-", "NN"}]]], "*", 
          RowBox[{"appellF2Int", "[", 
           RowBox[{
            RowBox[{"13", "+", 
             RowBox[{"3", "*", "alpha"}], "-", "NN"}], ",", 
            RowBox[{"b", "+", "alpha"}], ",", 
            RowBox[{"c", "+", "alpha"}], ",", 
            FractionBox["1", 
             RowBox[{"3", "-", 
              RowBox[{"beta", "*", "z"}]}]]}], "]"}]}], "-", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{"3", "*", "alpha"}], "+", "k", "-", "NN"}], ")"}], 
               "!"}], "*", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"beta", "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], "k"]}], 
             RowBox[{
              RowBox[{"k", "!"}], "*", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", "-", "beta"}], ")"}], 
               RowBox[{"13", "+", 
                RowBox[{"3", "*", "alpha"}], "-", "NN", "+", "k"}]]}]], "*", 
            RowBox[{"appellF2Int", "[", 
             RowBox[{
              RowBox[{"13", "+", 
               RowBox[{"3", "*", "alpha"}], "-", "NN", "+", "k"}], ",", 
              RowBox[{"b", "+", "alpha"}], ",", 
              RowBox[{"c", "+", "alpha"}], ",", 
              FractionBox["1", 
               RowBox[{"4", "-", "beta"}]]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"NN", "+", "alpha"}]}], "}"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{"Switch", "[", 
       RowBox[{"n", ",", "\[IndentingNewLine]", "2", ",", 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           UnderoverscriptBox["\[Product]", 
            RowBox[{"i", "=", "1"}], "n"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
         FractionBox[
          RowBox[{
           RowBox[{"Beta", "[", 
            RowBox[{"3", ",", 
             RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "alpha"}], "+", "3"}], ")"}], "!"}]}], 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"theta", "+", "1"}], ")"}], 
            RowBox[{"n", "+", "alpha"}]], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "-", "beta"}], ")"}], 
            RowBox[{
             RowBox[{"2", "*", "alpha"}], "+", "4"}]]}]], "*", 
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"3", ",", 
           RowBox[{
            RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
           RowBox[{"alpha", "+", "4"}], ",", 
           RowBox[{"delta", "[", 
            RowBox[{"n", ",", "z", ",", "beta"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "3", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"theta", ">", "0"}], ",", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"i", "=", "1"}], "n"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
           FractionBox["2", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"theta", "+", "1"}], ")"}], 
              RowBox[{"n", "+", "alpha"}]], "*", "beta"}]], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "*", "alpha"}], "+", "7"}], ")"}], "!"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Beta", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "1"}], ",", "3"}], "]"}], "*", 
             RowBox[{"Beta", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "2"}], ",", "3"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", "-", "beta"}], ")"}], 
             RowBox[{
              SuperscriptBox["n", "2"], "+", 
              RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}]]], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"appellF2", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["n", "2"], "+", 
                RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", 
               ",", "3", ",", 
               RowBox[{"alpha", "+", "4"}], ",", 
               RowBox[{"alpha", "+", "5"}], ",", 
               FractionBox["1", 
                RowBox[{"3", "-", "beta"}]], ",", 
               RowBox[{"delta", "[", 
                RowBox[{"n", ",", "z", ",", "beta"}], "]"}]}], "]"}], "-", 
             RowBox[{"appellF2", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["n", "2"], "+", 
                RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", 
               ",", "3", ",", 
               RowBox[{"alpha", "+", "5"}], ",", 
               RowBox[{"alpha", "+", "4"}], ",", 
               FractionBox["1", 
                RowBox[{"3", "-", "beta"}]], ",", 
               RowBox[{"delta", "[", 
                RowBox[{"n", ",", "z", ",", "beta"}], "]"}]}], "]"}]}], 
            ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}], 
            RowBox[{"n", "-", "2"}]]}]}], "]"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "4", ",", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"2", "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "3", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
           "]"}]}], "+", 
         RowBox[{"2", "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "3", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
           "]"}]}], "+", 
         RowBox[{"g", "[", 
          RowBox[{
          "4", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"g", "[", 
          RowBox[{
          "4", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{
          "1", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"g", "[", 
          RowBox[{
          "1", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"2", "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "2", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
           "]"}]}], "+", 
         RowBox[{"2", "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "2", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
           "]"}]}], "+", 
         RowBox[{"g", "[", 
          RowBox[{
          "3", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"g", "[", 
          RowBox[{
          "3", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "+", 
         RowBox[{"g", "[", 
          RowBox[{
          "0", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"g", "[", 
          RowBox[{
          "0", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"2", "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "1", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
           "]"}]}], "+", 
         RowBox[{"2", "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "1", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
           "]"}]}], "+", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}], "-", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "max", " ", "eigvec", " ", "for", " ", "n"}],
      "=", "5"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anaMin", "=", "0"}], ";", " ", 
     RowBox[{"anaMax", "=", "1"}], ";", 
     RowBox[{"dzArray", "=", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.05", ",", "0.05"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"description", "=", "\"\<max eigvec n=5, any alpha\>\""}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ff", "[", 
       RowBox[{"alpha_", ",", "j_", ",", "i_", ",", "x_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Beta", "[", 
        RowBox[{"3", ",", 
         RowBox[{"i", "+", "j", "+", "alpha", "-", "1"}]}], "]"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"alpha", "+", "i", "+", "j", "-", "1"}], ",", 
         RowBox[{"alpha", "+", "i", "+", "j", "+", "2"}], ",", 
         RowBox[{"-", "x"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{
       "z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_", ",", 
        "x_"}], "]"}], ":=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "z"}], ")"}], "*", "beta"}]}], ")"}]}], "*",
            "x", "*", "t"}], "]"}], "*", 
         SuperscriptBox["t", "alpha"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}], "2"], "*", 
         RowBox[{"Det", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"t", "*", 
              RowBox[{"ff", "[", 
               RowBox[{"alpha", ",", "j", ",", "i", ",", "x"}], "]"}]}], "-", 
             RowBox[{"ff", "[", 
              RowBox[{
               RowBox[{"alpha", "+", "1"}], ",", "j", ",", "i", ",", "x"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"n", "-", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
       "]"}], ":=", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "!"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "beta"}], ")"}], 
          RowBox[{"n", "+", "alpha"}]]}], 
        SuperscriptBox["beta", 
         RowBox[{"n", "-", "2"}]]], "*", 
       FractionBox["1", 
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "j"}], ")"}], "!"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "+", "alpha", "-", "j"}], ")"}], "!"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]], "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            SuperscriptBox["n", "2"], "+", 
            RowBox[{"n", "*", "alpha"}], "-", "n", "+", "1"}]], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"beta", "*", "z"}]}], ")"}]}], "*", "x"}], "]"}], "*", 
          RowBox[{"g", "[", 
           RowBox[{
           "z", ",", "n", ",", "alpha", ",", "theta", ",", "beta", ",", "x"}],
            "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], ";"}],
     "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "generic", " ", "pdf", " ", "max", " ", "eigvec", " ", "for", " ", "n"}],
      "\[LessEqual]", "5"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"anaMin", "=", "0"}], ";", " ", 
    RowBox[{"anaMax", "=", "1"}], ";", 
    RowBox[{"dzArray", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.005", ",", "0.005", ",", "0.005", ",", "0.005", ",", "0.005", ",", 
       "0.005"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"description", "=", "\"\<max eigvec n<=5, any alpha\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"delta", "[", 
      RowBox[{"n_", ",", "z_", ",", "beta_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{"beta", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}]}]}], 
      RowBox[{"n", "-", "beta"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"appellF2", "[", 
      RowBox[{
      "a_", ",", "b1_", ",", "b2_", ",", "c1_", ",", "c2_", ",", "x_", ",", 
       "y_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Pochhammer", "[", 
           RowBox[{"a", ",", 
            RowBox[{"m", "+", "n"}]}], "]"}], "*", 
          RowBox[{"Pochhammer", "[", 
           RowBox[{"b1", ",", "m"}], "]"}], "*", 
          RowBox[{"Pochhammer", "[", 
           RowBox[{"b2", ",", "n"}], "]"}]}], 
         RowBox[{
          RowBox[{"Pochhammer", "[", 
           RowBox[{"c1", ",", "m"}], "]"}], "*", 
          RowBox[{"Pochhammer", "[", 
           RowBox[{"c2", ",", "n"}], "]"}], "*", 
          RowBox[{"m", "!"}], "*", 
          RowBox[{"n", "!"}]}]], "*", 
        SuperscriptBox["x", "m"], "*", 
        SuperscriptBox["y", "n"]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "160"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "160"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"appellF2Int", "[", 
      RowBox[{"phi_", ",", "beta_", ",", "gamma_", ",", "w_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Gamma", "[", "beta", "]"}], "*", 
        RowBox[{"Gamma", "[", "gamma", "]"}]}], 
       RowBox[{
        RowBox[{"Gamma", "[", "3", "]"}], "*", 
        RowBox[{"Gamma", "[", "3", "]"}], "*", 
        RowBox[{"Gamma", "[", 
         RowBox[{"beta", "-", "3"}], "]"}], "*", 
        RowBox[{"Gamma", "[", 
         RowBox[{"gamma", "-", "3"}], "]"}]}]], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", "2"], "*", 
         SuperscriptBox["v", "2"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "u"}], ")"}], 
          RowBox[{"beta", "-", "4"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "v"}], ")"}], 
          RowBox[{"gamma", "-", "4"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"u", "*", "w"}], "-", 
            RowBox[{"v", "*", "w"}]}], ")"}], 
          RowBox[{"-", "phi"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{
      "NN_", ",", "b_", ",", "c_", ",", "alpha_", ",", "beta_", ",", "z_"}], 
      "]"}], ":=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        UnderoverscriptBox["\[Product]", 
         RowBox[{"i", "=", "1"}], "4"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
      FractionBox["6", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["beta", 
            RowBox[{"1", "-", "beta"}]], "+", "1"}], ")"}], 
         RowBox[{"4", "+", "alpha"}]], "*", 
        SuperscriptBox["beta", "2"]}]], "*", 
      RowBox[{"Beta", "[", 
       RowBox[{"3", ",", 
        RowBox[{"b", "+", "alpha", "-", "3"}]}], "]"}], "*", 
      RowBox[{"Beta", "[", 
       RowBox[{"3", ",", 
        RowBox[{"c", "+", "alpha", "-", "3"}]}], "]"}], "*", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NN", "+", "alpha"}], ")"}], "!"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"beta", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], 
        RowBox[{"NN", "+", "alpha", "+", "1"}]]], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "+", 
             RowBox[{"3", "*", "alpha"}], "-", "NN"}], ")"}], "!"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"beta", "*", "z"}]}], ")"}], 
           RowBox[{"13", "+", 
            RowBox[{"3", "*", "alpha"}], "-", "NN"}]]], "*", 
         RowBox[{"appellF2Int", "[", 
          RowBox[{
           RowBox[{"13", "+", 
            RowBox[{"3", "*", "alpha"}], "-", "NN"}], ",", 
           RowBox[{"b", "+", "alpha"}], ",", 
           RowBox[{"c", "+", "alpha"}], ",", 
           FractionBox["1", 
            RowBox[{"3", "-", 
             RowBox[{"beta", "*", "z"}]}]]}], "]"}]}], "-", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"12", "+", 
                RowBox[{"3", "*", "alpha"}], "+", "k", "-", "NN"}], ")"}], 
              "!"}], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"beta", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "z"}], ")"}]}]}], ")"}], "k"]}], 
            RowBox[{
             RowBox[{"k", "!"}], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"4", "-", "beta"}], ")"}], 
              RowBox[{"13", "+", 
               RowBox[{"3", "*", "alpha"}], "-", "NN", "+", "k"}]]}]], "*", 
           RowBox[{"appellF2Int", "[", 
            RowBox[{
             RowBox[{"13", "+", 
              RowBox[{"3", "*", "alpha"}], "-", "NN", "+", "k"}], ",", 
             RowBox[{"b", "+", "alpha"}], ",", 
             RowBox[{"c", "+", "alpha"}], ",", 
             FractionBox["1", 
              RowBox[{"4", "-", "beta"}]]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"NN", "+", "alpha"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ff", "[", 
      RowBox[{"alpha_", ",", "j_", ",", "i_", ",", "x_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Beta", "[", 
       RowBox[{"3", ",", 
        RowBox[{"i", "+", "j", "+", "alpha", "-", "1"}]}], "]"}], "*", 
      RowBox[{"Hypergeometric1F1", "[", 
       RowBox[{
        RowBox[{"alpha", "+", "i", "+", "j", "-", "1"}], ",", 
        RowBox[{"alpha", "+", "i", "+", "j", "+", "2"}], ",", 
        RowBox[{"-", "x"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gg", "[", 
      RowBox[{
      "z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_", ",", 
       "x_"}], "]"}], ":=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "z"}], ")"}], "*", "beta"}]}], ")"}]}], "*", 
          "x", "*", "t"}], "]"}], "*", 
        SuperscriptBox["t", "alpha"], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "t"}], ")"}], "2"], "*", 
        RowBox[{"Det", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"t", "*", 
             RowBox[{"ff", "[", 
              RowBox[{"alpha", ",", "j", ",", "i", ",", "x"}], "]"}]}], "-", 
            RowBox[{"ff", "[", 
             RowBox[{
              RowBox[{"alpha", "+", "1"}], ",", "j", ",", "i", ",", "x"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"n", "-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "[", 
      RowBox[{"z_", ",", "n_", ",", "alpha_", ",", "theta_", ",", "beta_"}], 
      "]"}], ":=", 
     RowBox[{"Switch", "[", 
      RowBox[{"n", ",", "\[IndentingNewLine]", "2", ",", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          UnderoverscriptBox["\[Product]", 
           RowBox[{"i", "=", "1"}], "n"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Beta", "[", 
           RowBox[{"3", ",", 
            RowBox[{"alpha", "+", "1"}]}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "alpha"}], "+", "3"}], ")"}], "!"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"theta", "+", "1"}], ")"}], 
           RowBox[{"n", "+", "alpha"}]], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "-", "beta"}], ")"}], 
           RowBox[{
            RowBox[{"2", "*", "alpha"}], "+", "4"}]]}]], "*", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"3", ",", 
          RowBox[{
           RowBox[{"2", "*", "alpha"}], "+", "4"}], ",", 
          RowBox[{"alpha", "+", "4"}], ",", 
          RowBox[{"delta", "[", 
           RowBox[{"n", ",", "z", ",", "beta"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "3", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"theta", ">", "0"}], ",", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"i", "=", "1"}], "n"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "+", "alpha", "-", "i"}], ")"}], "!"}], "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]], "*", 
          FractionBox["2", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"theta", "+", "1"}], ")"}], 
             RowBox[{"n", "+", "alpha"}]], "*", "beta"}]], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", "*", "alpha"}], "+", "7"}], ")"}], "!"}], "*", 
          FractionBox[
           RowBox[{
            RowBox[{"Beta", "[", 
             RowBox[{
              RowBox[{"alpha", "+", "1"}], ",", "3"}], "]"}], "*", 
            RowBox[{"Beta", "[", 
             RowBox[{
              RowBox[{"alpha", "+", "2"}], ",", "3"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"3", "-", "beta"}], ")"}], 
            RowBox[{
             SuperscriptBox["n", "2"], "+", 
             RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}]]], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"appellF2", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox["n", "2"], "+", 
               RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", 
              ",", "3", ",", 
              RowBox[{"alpha", "+", "4"}], ",", 
              RowBox[{"alpha", "+", "5"}], ",", 
              FractionBox["1", 
               RowBox[{"3", "-", "beta"}]], ",", 
              RowBox[{"delta", "[", 
               RowBox[{"n", ",", "z", ",", "beta"}], "]"}]}], "]"}], "-", 
            RowBox[{"appellF2", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox["n", "2"], "+", 
               RowBox[{"n", "*", "alpha"}], "-", "n", "+", "2"}], ",", "3", 
              ",", "3", ",", 
              RowBox[{"alpha", "+", "5"}], ",", 
              RowBox[{"alpha", "+", "4"}], ",", 
              FractionBox["1", 
               RowBox[{"3", "-", "beta"}]], ",", 
              RowBox[{"delta", "[", 
               RowBox[{"n", ",", "z", ",", "beta"}], "]"}]}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}], 
           RowBox[{"n", "-", "2"}]]}]}], "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "4", ",", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "3", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "3", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "4", ",", "4", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "4", ",", "5", ",", "5", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "1", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "1", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "2", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "3", ",", "5", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "3", ",", "4", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "0", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "0", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "1", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"g", "[", 
          RowBox[{
          "1", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
          "]"}]}], "+", 
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "5", ",", "7", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}], "-", 
        RowBox[{"g", "[", 
         RowBox[{
         "2", ",", "6", ",", "6", ",", "alpha", ",", "beta", ",", "z"}], 
         "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", ">", "4"}], "&"}], ")"}]}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], "!"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "beta"}], ")"}], 
           RowBox[{"n", "+", "alpha"}]]}], 
         SuperscriptBox["beta", 
          RowBox[{"n", "-", "2"}]]], "*", 
        FractionBox["1", 
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "-", "j"}], ")"}], "!"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "+", "alpha", "-", "j"}], ")"}], "!"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]], "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", 
            RowBox[{
             SuperscriptBox["n", "2"], "+", 
             RowBox[{"n", "*", "alpha"}], "-", "n", "+", "1"}]], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"beta", "*", "z"}]}], ")"}]}], "*", "x"}], "]"}], "*", 
           RowBox[{"gg", "[", 
            RowBox[{
            "z", ",", "n", ",", "alpha", ",", "theta", ",", "beta", ",", 
             "x"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\n", "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "dzArray", "]"}], "\[Equal]", "length"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time taken to generate curves: \>\"", ",", 
         RowBox[{"AbsoluteTiming", "[", 
          RowBox[{
           RowBox[{"anaDataArray", "=", 
            RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"n", "=", 
                RowBox[{"nArray", "[", 
                 RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"alpha", "=", 
                RowBox[{"alphaArray", "[", 
                 RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"theta", "=", 
                RowBox[{"thetaArray", "[", 
                 RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"m", "=", 
                RowBox[{"n", "+", "alpha"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"beta", "=", 
                FractionBox["theta", 
                 RowBox[{"theta", "+", "1"}]]}], ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"z", ",", 
                 RowBox[{"pdf", "[", 
                  RowBox[{
                  "z", ",", "n", ",", "alpha", ",", "theta", ",", "beta"}], 
                  "]"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", "length"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", "anaMin", ",", "anaMax", ",", 
                RowBox[{"dzArray", "[", 
                 RowBox[{"[", "t", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"anaDataArray", ",", 
         RowBox[{"{", 
          RowBox[{
          "description", ",", "nArray", ",", "alphaArray", ",", 
           "thetaArray"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Exported to: \>\"", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"analyticalDataFile", ",", "anaDataArray"}], "]"}]}], 
        "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<dz length mismatch!\>\"", "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8339490039865713`*^9, 3.8339490072059717`*^9}, 
   3.836727062292527*^9, {3.8367276039638176`*^9, 3.8367276276790648`*^9}, {
   3.8367366628819523`*^9, 3.8367366631671233`*^9}, {3.836736756741275*^9, 
   3.8367367591319113`*^9}, {3.8367367915150957`*^9, 3.836736801467327*^9}, {
   3.836736884659171*^9, 3.8367369195916786`*^9}, 3.8367369510376735`*^9, {
   3.836737018785912*^9, 3.8367370197723246`*^9}, {3.8369081940420785`*^9, 
   3.8369082208551598`*^9}, {3.836910127928302*^9, 3.8369103012466145`*^9}, {
   3.8369103712826796`*^9, 3.8369104017232428`*^9}, {3.8369104346704907`*^9, 
   3.836910720984671*^9}, {3.836910996545817*^9, 3.8369113654786563`*^9}, 
   3.836912683398974*^9, {3.836940038467626*^9, 3.8369400454291945`*^9}, 
   3.836940715798777*^9, {3.836960783688402*^9, 3.8369607878469143`*^9}, {
   3.8369784272759924`*^9, 3.836978455256169*^9}, {3.83703009286964*^9, 
   3.837030095921362*^9}, {3.8370317458560543`*^9, 3.8370317503306246`*^9}, {
   3.837036745452447*^9, 3.837036753050692*^9}, {3.837037179544255*^9, 
   3.8370372536853676`*^9}, {3.837037630085514*^9, 3.8370376369053497`*^9}, {
   3.837040412484664*^9, 3.8370404132496557`*^9}, {3.837040477006983*^9, 
   3.8370404823317537`*^9}, {3.8370405861582212`*^9, 3.837040590000147*^9}, 
   3.837041074450871*^9, {3.837045813743306*^9, 3.8370458618496075`*^9}, {
   3.837047870425625*^9, 3.837047875950006*^9}, {3.837048058782028*^9, 
   3.837048062102254*^9}, {3.837049108642887*^9, 3.837049112565462*^9}, {
   3.8370500415182037`*^9, 3.8370500551052685`*^9}, {3.8370501981288495`*^9, 
   3.837050402046682*^9}, 3.837055187874077*^9, {3.837056049558172*^9, 
   3.837056051475061*^9}, {3.8370696265655212`*^9, 3.837069696236622*^9}, {
   3.837070408501109*^9, 3.8370704412342234`*^9}, 3.83707086150126*^9, {
   3.837070978188897*^9, 3.83707104050819*^9}, 3.837071725250946*^9, {
   3.837072602789989*^9, 3.837072603823697*^9}, {3.8370726620896006`*^9, 
   3.8370726968090973`*^9}, {3.837074666197426*^9, 3.8370746664771986`*^9}, 
   3.837074698709894*^9, {3.8370773841515403`*^9, 3.8370774304149694`*^9}, {
   3.837212621103733*^9, 3.837212730348562*^9}, {3.8372127703106613`*^9, 
   3.8372128029142637`*^9}, 3.83721512918113*^9, {3.837329364751363*^9, 
   3.8373293651920877`*^9}, {3.8373306789434385`*^9, 
   3.8373308128998737`*^9}, {3.837330973789908*^9, 3.83733097445885*^9}, {
   3.837331240868393*^9, 3.8373313171204977`*^9}, {3.837331476328513*^9, 
   3.837331476733412*^9}, {3.837331648396429*^9, 3.837331649155079*^9}, {
   3.837334384604051*^9, 3.837334385353522*^9}, {3.8373358444154787`*^9, 
   3.8373358455187273`*^9}, {3.8373389232147427`*^9, 
   3.8373389744366217`*^9}, {3.837343669206689*^9, 3.8373436693441563`*^9}, {
   3.8373446010530505`*^9, 3.837344628383596*^9}, 3.837344678960475*^9, {
   3.837344999504673*^9, 3.8373450308988514`*^9}, {3.837646885213983*^9, 
   3.8376468861628923`*^9}, {3.837852584688956*^9, 3.8378526013889837`*^9}, {
   3.837852713588848*^9, 3.837852717950344*^9}, {3.8378528868964553`*^9, 
   3.8378531060860057`*^9}, {3.837853148716747*^9, 3.8378531573003197`*^9}, {
   3.8378531929706526`*^9, 3.837853202621146*^9}, {3.837853234352753*^9, 
   3.837853255809997*^9}, {3.837853290010173*^9, 3.8378532956042275`*^9}, {
   3.8378533402157354`*^9, 3.8378533435220084`*^9}, {3.83785343580177*^9, 
   3.8378534377205973`*^9}, {3.8378534879330025`*^9, 3.8378534884021125`*^9}, 
   3.8378538790971603`*^9, {3.837854053146901*^9, 3.8378540706643867`*^9}, {
   3.837854173813301*^9, 3.837854212754966*^9}, {3.8378542560259323`*^9, 
   3.8378542668551807`*^9}, {3.837854415277203*^9, 3.837854433951062*^9}, {
   3.837854478190138*^9, 3.837854590467697*^9}, 3.837854633769174*^9, {
   3.8378553836342287`*^9, 3.8378554132913265`*^9}, {3.8378560876971235`*^9, 
   3.837856090089177*^9}, {3.837857012318833*^9, 3.837857016114666*^9}, {
   3.837857217419388*^9, 3.8378572225726566`*^9}, {3.837858850491003*^9, 
   3.837859064306755*^9}, {3.837859104952303*^9, 3.8378591386088114`*^9}, {
   3.8378592173873234`*^9, 3.837859249519578*^9}, {3.8378987374642735`*^9, 
   3.837898740384821*^9}, {3.8379055829320183`*^9, 3.837905586320157*^9}, {
   3.839579975200369*^9, 3.8395799812780347`*^9}, {3.8395800194984045`*^9, 
   3.8395800404048195`*^9}, {3.8395800905192223`*^9, 
   3.8395803432416353`*^9}, {3.8395803856190553`*^9, 3.839580742479065*^9}, {
   3.8395808141618*^9, 3.839580849481659*^9}, {3.839580887775875*^9, 
   3.8395809505049553`*^9}, {3.839581089919873*^9, 3.8395810912882214`*^9}, {
   3.839581712463524*^9, 3.8395817494685946`*^9}, {3.839581795879133*^9, 
   3.8395817964202957`*^9}, 3.8395821582546005`*^9, {3.8395830055187826`*^9, 
   3.8395830177909594`*^9}, {3.8395838589124155`*^9, 3.839583876686578*^9}, {
   3.8395886338319683`*^9, 3.8395886359046144`*^9}, {3.839589912375924*^9, 
   3.8395899168062663`*^9}, {3.8396450515474977`*^9, 
   3.8396450826518793`*^9}, {3.8396451204200115`*^9, 3.83964512087601*^9}, {
   3.8396451517026033`*^9, 3.839645198815993*^9}, {3.8396453813618746`*^9, 
   3.839645407823842*^9}, {3.8396533290403757`*^9, 3.839653368893753*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"1814400\\\"], \\\"+\\\", FractionBox[RowBox[{RowBox[{\\\"9\
\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"9\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"17\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"19958400\\\
\"]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"(\\\", RowBox[{FractionBox[RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"21\\\", \\\"\[RightSkeleton]\\\"}], \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"181440\\\"], \\\"+\\\", FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], RowBox[{\\\"\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"\\\"}]]}], \\\
\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"-\\\", \
RowBox[{RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"2520\\\"], \\\"+\\\", \
FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"20160\\\"]}], \\\")\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\")\\\"}]}]}], \\\")\\\"}]}], \
SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \\\"9\\\"]]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396533943317037`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \
\\!\\(\\*RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.25`\\\"}], \\\" \\\", \
\\\"Notebook$$25$645022`t\\\", \\\" \\\", \\\"Notebook$$25$645022`x\\\"}]], \
\\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \\\
\"Notebook$$25$645022`t\\\"}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", \
SuperscriptBox[\\\"Notebook$$25$645022`t\\\", \\\"2\\\"], \\\" \\\", RowBox[{\
\\\"(\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"20160\\\"], \\\"+\\\", \
FractionBox[RowBox[{RowBox[{\\\"7\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"181440\\\"]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}]}], \
\\\")\\\"}]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\
\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396533977763577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"1814400\\\"], \\\"+\\\", FractionBox[RowBox[{RowBox[{\\\"9\
\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"9\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"17\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"19958400\\\
\"]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"(\\\", RowBox[{FractionBox[RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"21\\\", \\\"\[RightSkeleton]\\\"}], \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"181440\\\"], \\\"+\\\", FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], RowBox[{\\\"\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"\\\"}]]}], \\\
\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"-\\\", \
RowBox[{RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"2520\\\"], \\\"+\\\", \
FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"20160\\\"]}], \\\")\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\")\\\"}]}]}], \\\")\\\"}]}], \
SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \\\"9\\\"]]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396533989153852`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \
\\!\\(\\*RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
\\\"Notebook$$25$645022`x\\\"}]], \\\" \\\", \
SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \\\"43\\\"], \\\" \\\", \
RowBox[{\\\"NIntegrate\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"Exp\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \
\\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \\\" \
\\\", \\\"Notebook$$25$645022`x\\\", \\\" \\\", \
\\\"Notebook$$25$645022`t\\\"}], \\\"]\\\"}], \\\" \\\", \
SuperscriptBox[\\\"Notebook$$25$645022`t\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \
\\\"Notebook$$25$645022`t\\\"}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", RowBox[{\
\\\"Det\\\", \\\"[\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"Notebook$$25$645022`ff\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"-\\\", RowBox[{\\\"Notebook$$25$645022`ff\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"Notebook$$25$645022`j\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
RowBox[{\\\"6\\\", \\\"-\\\", \\\"2\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"Notebook$$25$645022`i\\\", \\\",\\\", \\\"1\\\", \\\",\
\\\", RowBox[{\\\"6\\\", \\\"-\\\", \\\"2\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"Notebook$$25$645022`t\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\
\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[Infinity]\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396533998588953`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839653399892482*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \
\\!\\(\\*RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
\\\"Notebook$$25$645022`x\\\"}]], \\\" \\\", \
SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \\\"57\\\"], \\\" \\\", \
RowBox[{\\\"NIntegrate\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"Exp\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \
\\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \\\" \
\\\", \\\"Notebook$$25$645022`x\\\", \\\" \\\", \
\\\"Notebook$$25$645022`t\\\"}], \\\"]\\\"}], \\\" \\\", \
SuperscriptBox[\\\"Notebook$$25$645022`t\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \
\\\"Notebook$$25$645022`t\\\"}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", RowBox[{\
\\\"Det\\\", \\\"[\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"Notebook$$25$645022`ff\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"-\\\", RowBox[{\\\"Notebook$$25$645022`ff\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"Notebook$$25$645022`j\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
RowBox[{\\\"7\\\", \\\"-\\\", \\\"2\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"Notebook$$25$645022`i\\\", \\\",\\\", \\\"1\\\", \\\",\
\\\", RowBox[{\\\"7\\\", \\\"-\\\", \\\"2\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"Notebook$$25$645022`t\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\
\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[Infinity]\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396534036038446`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \
\\!\\(\\*RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.25`\\\"}], \\\" \\\", \
\\\"Notebook$$25$645022`t\\\", \\\" \\\", \\\"Notebook$$25$645022`x\\\"}]], \
\\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \\\
\"Notebook$$25$645022`t\\\"}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", \
SuperscriptBox[\\\"Notebook$$25$645022`t\\\", \\\"2\\\"], \\\" \\\", RowBox[{\
\\\"(\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\"20160\\\"], \\\"+\\\", \
FractionBox[RowBox[{RowBox[{\\\"7\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"181440\\\"]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}]}], \
\\\")\\\"}]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\
\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839653411075059*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839653411162792*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"8\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", SuperscriptBox[\\\
\"Notebook$$25$645022`x\\\", \\\"2\\\"]}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2520\\\"}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"20\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"-\
\\\", SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"5\\\"], \\\"+\\\", \
RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", SuperscriptBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"21\\\", \\\"\[RightSkeleton]\\\"}], \\\"5\\\"]}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"907200\\\", \\\
\" \\\", \\\"Notebook$$25$645022`x\\\"}], \\\"-\\\", RowBox[{\\\"1814400\\\", \
\\\" \\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
\\\"Notebook$$25$645022`x\\\"], \\\" \\\", \\\"Notebook$$25$645022`x\\\"}], \
\\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"70\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"14\\\", \\\"\[RightSkeleton]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\
\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \
\\\"27\\\"]]\\) has evaluated to non-numerical values for all sampling points \
in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \
\\\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839654615242405*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"8\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", SuperscriptBox[\\\
\"Notebook$$25$645022`x\\\", \\\"2\\\"]}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2520\\\"}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"20\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"-\
\\\", SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"5\\\"], \\\"+\\\", \
RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", SuperscriptBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"21\\\", \\\"\[RightSkeleton]\\\"}], \\\"5\\\"]}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"907200\\\", \\\
\" \\\", \\\"Notebook$$25$645022`x\\\"}], \\\"-\\\", RowBox[{\\\"1814400\\\", \
\\\" \\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
\\\"Notebook$$25$645022`x\\\"], \\\" \\\", \\\"Notebook$$25$645022`x\\\"}], \
\\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"70\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"14\\\", \\\"\[RightSkeleton]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\
\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \
\\\"27\\\"]]\\) has evaluated to non-numerical values for all sampling points \
in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \
\\\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396546158300047`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"8\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", SuperscriptBox[\\\
\"Notebook$$25$645022`x\\\", \\\"2\\\"]}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2520\\\"}], \\\"+\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"20\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"-\
\\\", SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"5\\\"], \\\"+\\\", \
RowBox[{\\\"Notebook$$25$645022`t\\\", \\\" \\\", SuperscriptBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"21\\\", \\\"\[RightSkeleton]\\\"}], \\\"5\\\"]}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"907200\\\", \\\
\" \\\", \\\"Notebook$$25$645022`x\\\"}], \\\"-\\\", RowBox[{\\\"1814400\\\", \
\\\" \\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
\\\"Notebook$$25$645022`x\\\"], \\\" \\\", \\\"Notebook$$25$645022`x\\\"}], \
\\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"70\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"14\\\", \\\"\[RightSkeleton]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\
\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], SuperscriptBox[\\\"Notebook$$25$645022`x\\\", \
\\\"27\\\"]]\\) has evaluated to non-numerical values for all sampling points \
in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \
\\\"}\\\"}]\\).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396546164286375`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396546164582157`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"48.70994531532634`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"256.0283173744704`\\\"}]\\) and \\!\\(\\*RowBox[{\\\"470.6627866683598`\\\
\"}]\\) for the integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839660716144062*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"42.57920264139995`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"1.8892199665928652`*^16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.322271951341843`*^11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839662255429065*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"48.75218409140399`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"4.498194591220292`*^15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.957149774030385`*^11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839662285505617*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"68.1055342540523`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"3.398739376588755`*^14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.721890162941377`*^11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839662313156101*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839662313202228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396623329807887`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"42.66624215568894`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"2.826882954684508`*^25\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.393525683593743`*^20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839665308168191*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"42.66624215568894`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"2.628075488500816`*^25\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.570447519376757`*^20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396653695112457`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"Notebook$$25$645022`x\\\"}]\\) near \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Notebook$$25$645022`x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"42.66624215568894`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"2.4177552127713236`*^25\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1929443467461235`*^21\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839665425606866*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839665425650981*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396660072625055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396660364944425`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.839666068708647*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.8396660687627907`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time taken to generate curves: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"12757.08001840984`", ",", "Null"}], "}"}]}],
  SequenceForm["Time taken to generate curves: ", {12757.08001840984, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8395894034381404`*^9, 3.8395913574043074`*^9, 
  3.8396521902835474`*^9, 3.8396661467630568`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Exported to: \"\>", 
   "\[InvisibleSpace]", \
"\<\"D:\\\\research\\\\eigenvectors\\\\simulations\\\\data\\\\finite\\\\\
analytical_max_7.mx\"\>"}],
  SequenceForm[
  "Exported to: ", 
   "D:\\research\\eigenvectors\\simulations\\data\\finite\\analytical_max_7.\
mx"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8395894034381404`*^9, 3.8395913574043074`*^9, 
  3.8396521902835474`*^9, 3.8396661468082523`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import data", "Section",
 CellChangeTimes->{{3.8366170602930517`*^9, 3.836617063886428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simDataArray", "=", 
   RowBox[{"Import", "[", "simulatedDataFile", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"anaDataArray", "=", 
   RowBox[{"Import", "[", "analyticalDataFile", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulationInfo", "=", 
   RowBox[{"Last", "[", "simDataArray", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Simulation parameters: \\nsample size=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\nn=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Alpha]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Theta]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analyticalInfo", "=", 
   RowBox[{"Last", "[", "anaDataArray", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Analytical expression paranmeters:\\nDescription:\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\nn=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Alpha]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Theta]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], "\[NotEqual]", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ",", 
    RowBox[{
    "Print", "[", "\"\<Warning! Different parameter sets!!\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nArray", "=", 
   RowBox[{"analyticalInfo", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaArray", "=", 
   RowBox[{"analyticalInfo", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaArray", "=", 
   RowBox[{"analyticalInfo", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", "=", 
   RowBox[{"Length", "[", "nArray", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836617068109292*^9, 3.836617161092099*^9}, {
  3.836617222882207*^9, 3.8366176730692186`*^9}, {3.836618228110056*^9, 
  3.8366182937761364`*^9}, {3.836618387757041*^9, 3.8366184003479567`*^9}, {
  3.8366184439263053`*^9, 3.83661849062029*^9}, {3.8366189009575605`*^9, 
  3.836618942204876*^9}, {3.8366191067441397`*^9, 3.836619118813418*^9}, {
  3.8367268659731336`*^9, 3.836726877816696*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation parameters: \\nsample size={5000, 5000, 5000, \
5000, 5000, 5000, 5000}\\nn={2, 5, 10, 3, 3, 3, 3}\\n\[Alpha]={2, 2, 2, 2, 2, \
2, 2}\\n\[Theta]={3, 3, 3, 0, 5, 10, 20}\"\>"], "Print",
 CellChangeTimes->{
  3.836622640417426*^9, 3.8366231437873855`*^9, 3.836689510320694*^9, 
   3.836689954524046*^9, 3.836703228192075*^9, 3.8367036255063467`*^9, 
   3.8367037386570387`*^9, 3.8367038998060193`*^9, 3.8367042561613684`*^9, 
   3.8367043010408287`*^9, 3.836708351825542*^9, 3.8367086587935357`*^9, 
   3.8367086942714415`*^9, 3.836708808367268*^9, 3.836708870853346*^9, {
   3.8367258593844967`*^9, 3.8367258977780094`*^9}, 3.8367267581105895`*^9, 
   3.8367268791481633`*^9, 3.8367275375817337`*^9, 3.836727685524091*^9, 
   3.8367277651176877`*^9, 3.83673668182417*^9, 3.836736764952653*^9, 
   3.83673680924356*^9, {3.8367369281670413`*^9, 3.836736958075663*^9}, 
   3.836737029140093*^9, 3.8369125981713133`*^9, 3.8369401699296412`*^9, 
   3.8369408117785406`*^9, 3.8369621750900545`*^9, {3.8369708303883367`*^9, 
   3.8369708427553234`*^9}, 3.8369785033276854`*^9, 3.8370292368301563`*^9, 
   3.8370305132255316`*^9, 3.8370381029092655`*^9, 3.837040534575132*^9, 
   3.8370407697394466`*^9, 3.837041810310833*^9, 3.8370475481517954`*^9, 
   3.8370483999899116`*^9, 3.837055879454466*^9, 3.8370575647720833`*^9, 
   3.8370698340397577`*^9, 3.837070422082658*^9, 3.8370705632421885`*^9, 
   3.837071466760825*^9, 3.837071499986936*^9, 3.8370715306508694`*^9, 
   3.837074472295977*^9, 3.837074644551633*^9, 3.837234471319126*^9, 
   3.8373309544737935`*^9, 3.8373314113110547`*^9, 3.8373316271323614`*^9, 
   3.837333086083683*^9, 3.837335790252041*^9, 3.8373386600262804`*^9, 
   3.837345119130829*^9, 3.8373451781365366`*^9, 3.8373851559614916`*^9, 
   3.8373852308010273`*^9, 3.8373852985636635`*^9, {3.837507269510637*^9, 
   3.837507284407897*^9}, 3.8376471120974197`*^9, 3.83785330599161*^9, 
   3.8378533487854958`*^9, 3.8378534711349373`*^9, 3.8378537047505355`*^9, 
   3.8378546059380875`*^9, 3.837854687790561*^9, 3.8378553956775036`*^9, 
   3.8378558532874393`*^9, 3.8378566071459274`*^9, 3.837858704086816*^9, 
   3.8378630984050865`*^9, 3.837863182320258*^9, 3.8378636311960735`*^9, 
   3.837944888261009*^9, 3.8379482009523516`*^9, 3.8395829124169817`*^9, 
   3.839583747829176*^9, 3.8395894109759607`*^9, 3.839591689233014*^9, 
   3.839652266504069*^9, 3.8396661978869267`*^9, 3.8396665695444703`*^9, 
   3.839667141922847*^9, 3.840180507624278*^9, 3.840181457950091*^9, 
   3.84018157524242*^9, 3.840181701028037*^9, 3.840181770726638*^9, 
   3.8401824828251276`*^9, 3.840182604573962*^9, 3.840183661366188*^9}],

Cell[BoxData["\<\"Analytical expression paranmeters:\\nDescription:generic \
pdf min eigvec for n>=2\\nn={2, 5, 10, 3, 3, 3, 3}\\n\[Alpha]={2, 2, 2, 2, 2, \
2, 2}\\n\[Theta]={3, 3, 3, 0, 5, 10, 20}\"\>"], "Print",
 CellChangeTimes->{
  3.836622640417426*^9, 3.8366231437873855`*^9, 3.836689510320694*^9, 
   3.836689954524046*^9, 3.836703228192075*^9, 3.8367036255063467`*^9, 
   3.8367037386570387`*^9, 3.8367038998060193`*^9, 3.8367042561613684`*^9, 
   3.8367043010408287`*^9, 3.836708351825542*^9, 3.8367086587935357`*^9, 
   3.8367086942714415`*^9, 3.836708808367268*^9, 3.836708870853346*^9, {
   3.8367258593844967`*^9, 3.8367258977780094`*^9}, 3.8367267581105895`*^9, 
   3.8367268791481633`*^9, 3.8367275375817337`*^9, 3.836727685524091*^9, 
   3.8367277651176877`*^9, 3.83673668182417*^9, 3.836736764952653*^9, 
   3.83673680924356*^9, {3.8367369281670413`*^9, 3.836736958075663*^9}, 
   3.836737029140093*^9, 3.8369125981713133`*^9, 3.8369401699296412`*^9, 
   3.8369408117785406`*^9, 3.8369621750900545`*^9, {3.8369708303883367`*^9, 
   3.8369708427553234`*^9}, 3.8369785033276854`*^9, 3.8370292368301563`*^9, 
   3.8370305132255316`*^9, 3.8370381029092655`*^9, 3.837040534575132*^9, 
   3.8370407697394466`*^9, 3.837041810310833*^9, 3.8370475481517954`*^9, 
   3.8370483999899116`*^9, 3.837055879454466*^9, 3.8370575647720833`*^9, 
   3.8370698340397577`*^9, 3.837070422082658*^9, 3.8370705632421885`*^9, 
   3.837071466760825*^9, 3.837071499986936*^9, 3.8370715306508694`*^9, 
   3.837074472295977*^9, 3.837074644551633*^9, 3.837234471319126*^9, 
   3.8373309544737935`*^9, 3.8373314113110547`*^9, 3.8373316271323614`*^9, 
   3.837333086083683*^9, 3.837335790252041*^9, 3.8373386600262804`*^9, 
   3.837345119130829*^9, 3.8373451781365366`*^9, 3.8373851559614916`*^9, 
   3.8373852308010273`*^9, 3.8373852985636635`*^9, {3.837507269510637*^9, 
   3.837507284407897*^9}, 3.8376471120974197`*^9, 3.83785330599161*^9, 
   3.8378533487854958`*^9, 3.8378534711349373`*^9, 3.8378537047505355`*^9, 
   3.8378546059380875`*^9, 3.837854687790561*^9, 3.8378553956775036`*^9, 
   3.8378558532874393`*^9, 3.8378566071459274`*^9, 3.837858704086816*^9, 
   3.8378630984050865`*^9, 3.837863182320258*^9, 3.8378636311960735`*^9, 
   3.837944888261009*^9, 3.8379482009523516`*^9, 3.8395829124169817`*^9, 
   3.839583747829176*^9, 3.8395894109759607`*^9, 3.839591689233014*^9, 
   3.839652266504069*^9, 3.8396661978869267`*^9, 3.8396665695444703`*^9, 
   3.839667141922847*^9, 3.840180507624278*^9, 3.840181457950091*^9, 
   3.84018157524242*^9, 3.840181701028037*^9, 3.840181770726638*^9, 
   3.8401824828251276`*^9, 3.840182604573962*^9, 3.840183661369197*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Histogram", "Section"]], "Section",
 CellChangeTimes->{{3.833939149224225*^9, 3.8339391544066596`*^9}, 
   3.833942334295156*^9, 3.8339465717534995`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"binsArray", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.03", ",", "0.03", ",", "0.03", ",", "0.01", ",", "0.01", ",", 
        "0.01", ",", "0.01"}], "}"}], ",", "False"}], "}"}]}], ";", " ", 
   RowBox[{"(*", 
    StyleBox[
     RowBox[{
      RowBox[{"True", "\[Rule]", 
       RowBox[{"use", " ", "as", " ", 
        RowBox[{"no", ".", " ", "of"}], " ", "bins"}]}], ",", " ", 
      RowBox[{"False", "\[Rule]", 
       RowBox[{"use", " ", "as", " ", "dx"}]}]}], "Text"], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"simVectorArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"simData", "=", 
        RowBox[{"simDataArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simVector", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"eigVals", "=", 
            RowBox[{"simData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"eigVecs", "=", 
            RowBox[{"simData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"u", "=", 
            RowBox[{"simData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "squared", " ", "absolute", " ", "value", " ", "of", " ", 
             "minimum", " ", "eigenvector", " ", "inner", " ", "product", " ",
              "with", " ", "u"}], "*)"}], "\[IndentingNewLine]", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"Last", "[", "eigVecs", "]"}], ".", "u"}], "]"}], 
             ")"}], "2"]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "squared", " ", "absolute", " ", "value", " ", "of", " ", 
            "maximum", " ", "eigenvector", " ", "inner", " ", "product", " ", 
            "with", " ", "u"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"First", "[", "eigVecs", "]"}], ".", "u"}], "]"}], 
             ")"}], "2"], "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "simData", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"histArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"simVector", "=", 
        RowBox[{"simVectorArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hist", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"simVector", ",", "Automatic", ",", "PDF", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"colorArray", "[", 
            RowBox[{"[", "t", "]"}], "]"}]}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simDistArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"hist", "=", 
        RowBox[{"histArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bins", "=", 
        RowBox[{"binsArray", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"useBins", "=", 
        RowBox[{"binsArray", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simVector", "=", 
        RowBox[{"simVectorArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"min", "=", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Options", "[", 
            RowBox[{"hist", ",", "PlotRange"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Options", "[", 
            RowBox[{"hist", ",", "PlotRange"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{"If", "[", 
         RowBox[{"useBins", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"max", "-", "min"}], ")"}], "/", "bins"}], ",", "bins"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simDist", "=", 
        RowBox[{"HistogramDistribution", "[", 
         RowBox[{"simVector", ",", 
          RowBox[{"{", "dx", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max", ",", "dx", ",", "simDist"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.792716921993657*^9, 3.7927169258689137`*^9}, {
   3.79271964846093*^9, 3.7927196492421103`*^9}, {3.792720140278805*^9, 
   3.7927201448261633`*^9}, {3.7927202650396404`*^9, 
   3.7927203171547546`*^9}, {3.792723011209526*^9, 3.79272301138142*^9}, {
   3.7927254902229185`*^9, 3.792725507928113*^9}, {3.7927267230108337`*^9, 
   3.7927267244953785`*^9}, {3.7927267558579426`*^9, 
   3.7927267626867957`*^9}, {3.7927267941901045`*^9, 3.792726834694456*^9}, {
   3.7927276110387917`*^9, 3.792727638057331*^9}, {3.792727730145089*^9, 
   3.792727730926611*^9}, {3.7927278372033825`*^9, 3.792727904194947*^9}, {
   3.7927279405583463`*^9, 3.792727941933345*^9}, {3.7927283463358107`*^9, 
   3.792728434720228*^9}, {3.7927284748497047`*^9, 3.7927284756935477`*^9}, {
   3.79272852826145*^9, 3.792728568109459*^9}, {3.7927285987846365`*^9, 
   3.792728600784999*^9}, 3.792728689216117*^9, {3.7927553583583007`*^9, 
   3.792755447289663*^9}, {3.7927558326903462`*^9, 3.7927558414256554`*^9}, {
   3.7927558717880573`*^9, 3.792755896228352*^9}, {3.792755934841838*^9, 
   3.792755995363763*^9}, {3.792756066230689*^9, 3.7927560932336063`*^9}, {
   3.792756154771411*^9, 3.792756165788169*^9}, {3.7927561967914743`*^9, 
   3.7927562158872614`*^9}, {3.7927562634705114`*^9, 3.792756263782989*^9}, {
   3.7927569869694953`*^9, 3.792757009347055*^9}, {3.7927591001188655`*^9, 
   3.7927591004627595`*^9}, 3.7927598356349134`*^9, {3.792760201767528*^9, 
   3.792760212425111*^9}, {3.792760264415036*^9, 3.792760310623086*^9}, {
   3.7927603998826065`*^9, 3.7927604180251675`*^9}, {3.7927605430227227`*^9, 
   3.7927605451012278`*^9}, {3.7927605799955654`*^9, 3.792760616936859*^9}, {
   3.7931443755821257`*^9, 3.793144395115435*^9}, {3.7931448252363367`*^9, 
   3.7931448382219396`*^9}, {3.7931448765385914`*^9, 3.793144878820221*^9}, {
   3.7931457216448317`*^9, 3.7931457236919274`*^9}, {3.793159940323795*^9, 
   3.7931599777028217`*^9}, 3.7931601440017214`*^9, {3.7931603716038933`*^9, 
   3.7931603725414567`*^9}, {3.793160907001582*^9, 3.793160925175233*^9}, {
   3.7931609577879086`*^9, 3.7931609831187487`*^9}, {3.7931610558290277`*^9, 
   3.793161122414057*^9}, {3.793161166590192*^9, 3.793161177888384*^9}, {
   3.7931612461294518`*^9, 3.793161246410915*^9}, {3.7931654802841215`*^9, 
   3.7931655060442085`*^9}, {3.79316558583147*^9, 3.793165586094903*^9}, {
   3.793167504941453*^9, 3.793167512844742*^9}, {3.793167615642462*^9, 
   3.7931676192345734`*^9}, {3.793167653233672*^9, 3.7931676884493704`*^9}, {
   3.7931677593186607`*^9, 3.7931677606215796`*^9}, {3.793167889452487*^9, 
   3.7931679666359425`*^9}, {3.793170180991927*^9, 3.7931701814460936`*^9}, 
   3.7931706510510387`*^9, {3.793182637416662*^9, 3.793182645919332*^9}, {
   3.793841019854845*^9, 3.7938410206363697`*^9}, {3.7942821917344227`*^9, 
   3.7942822012354493`*^9}, {3.794282271414836*^9, 3.7942823342651415`*^9}, {
   3.7942823762854247`*^9, 3.794282377129279*^9}, {3.794292012122114*^9, 
   3.7942920346712513`*^9}, {3.7947130357857647`*^9, 
   3.7947130775089426`*^9}, {3.794713138437331*^9, 3.794713148047737*^9}, {
   3.794713210945096*^9, 3.794713214867587*^9}, {3.794714775862669*^9, 
   3.794714789848494*^9}, {3.7948072131543894`*^9, 3.7948072203426647`*^9}, {
   3.795052590276772*^9, 3.795052604450192*^9}, {3.7953476257491293`*^9, 
   3.7953476346493893`*^9}, {3.8130053525245466`*^9, 
   3.8130053604941807`*^9}, {3.813055047420185*^9, 3.813055057195303*^9}, {
   3.8131991159025235`*^9, 3.8131991228296804`*^9}, {3.814113070382267*^9, 
   3.8141130822106094`*^9}, {3.832102778950861*^9, 3.8321028188349676`*^9}, {
   3.832103455839182*^9, 3.83210347081199*^9}, {3.832103503104595*^9, 
   3.832103531436801*^9}, {3.8321036766623816`*^9, 3.8321037240542045`*^9}, {
   3.8321043552311153`*^9, 3.8321043558112907`*^9}, 3.8321048280672626`*^9, 
   3.8339392140337486`*^9, {3.833939292120079*^9, 3.833939398099626*^9}, {
   3.8339394491782417`*^9, 3.8339394618811812`*^9}, {3.833939509697234*^9, 
   3.8339395928767247`*^9}, {3.833939851560525*^9, 3.8339398736679535`*^9}, 
   3.833942104599371*^9, 3.833942144682706*^9, {3.8339422558721447`*^9, 
   3.833942282168523*^9}, {3.833942328168377*^9, 3.8339423644808626`*^9}, {
   3.8339425796000924`*^9, 3.833942700634673*^9}, {3.8339454382532387`*^9, 
   3.8339455113687735`*^9}, {3.833945551445715*^9, 3.8339455581146917`*^9}, {
   3.8339456235187635`*^9, 3.833945644183926*^9}, {3.833945678845346*^9, 
   3.833945804480352*^9}, {3.8339458360550065`*^9, 3.833945859929469*^9}, {
   3.8339459365396786`*^9, 3.83394607980399*^9}, {3.8339461256656885`*^9, 
   3.833946180585399*^9}, {3.8339462842436705`*^9, 3.8339464241354823`*^9}, {
   3.8339464676206007`*^9, 3.833946472207058*^9}, 3.833947846627905*^9, {
   3.833948266012673*^9, 3.8339482663971567`*^9}, {3.833948751930589*^9, 
   3.833948783757655*^9}, {3.8339488357549934`*^9, 3.8339488497797384`*^9}, {
   3.8339662486453557`*^9, 3.833966268619525*^9}, {3.8339663042272425`*^9, 
   3.8339663097777476`*^9}, {3.8339676154570503`*^9, 
   3.8339676172098317`*^9}, {3.8339712165571613`*^9, 
   3.8339712192214017`*^9}, {3.836612601618452*^9, 3.836612684245711*^9}, 
   3.836617079618828*^9, {3.8366192524414296`*^9, 3.8366192735661635`*^9}, {
   3.836619392190565*^9, 3.8366193933722935`*^9}, {3.8366195598224277`*^9, 
   3.836619560034345*^9}, 3.836619779568311*^9, {3.8366214932522335`*^9, 
   3.836621508767906*^9}, {3.8366215527416415`*^9, 3.8366215555835743`*^9}, 
   3.836622696319513*^9, {3.836622778939989*^9, 3.8366227795095615`*^9}, {
   3.8366230186673183`*^9, 3.83662302803759*^9}, {3.8366232406954746`*^9, 
   3.8366232422312536`*^9}, {3.8366233417371035`*^9, 
   3.8366233423922806`*^9}, {3.8366895708285694`*^9, 3.836689578758815*^9}, {
   3.8367259603327856`*^9, 3.836725969302227*^9}, 3.8367269054579487`*^9, {
   3.836727592511097*^9, 3.8367275949759564`*^9}, {3.8367276954124804`*^9, 
   3.8367276977297487`*^9}, {3.8367277858021154`*^9, 3.836727787178132*^9}, {
   3.837047657403286*^9, 3.837047675460292*^9}, 3.8373358163483343`*^9, {
   3.8373853211041527`*^9, 3.8373853502608647`*^9}, {3.837507569873106*^9, 
   3.837507571377693*^9}, {3.8378558664901943`*^9, 3.8378559043575296`*^9}, {
   3.8378559545072613`*^9, 3.8378559580144567`*^9}, 3.8378567113984575`*^9, {
   3.8378587233263617`*^9, 3.837858724863809*^9}, 3.837858796184114*^9, 
   3.83786386579918*^9, {3.8378639220707884`*^9, 3.8378639234929533`*^9}, {
   3.8378976376192408`*^9, 3.837897713986183*^9}, {3.837948335094241*^9, 
   3.837948376992136*^9}, {3.8379484101834354`*^9, 3.8379484400445547`*^9}, {
   3.8379485115297403`*^9, 3.837948515524747*^9}, {3.83794861785151*^9, 
   3.8379486228945103`*^9}, 3.83794866259871*^9, {3.8395829267168937`*^9, 
   3.8395829271212606`*^9}, {3.8395894238126135`*^9, 
   3.8395894272760053`*^9}, {3.839652277227261*^9, 3.8396522788325677`*^9}, {
   3.839666613882493*^9, 3.839666642561573*^9}, {3.8396667002148743`*^9, 
   3.8396667007995353`*^9}, {3.8396671968320837`*^9, 3.839667197253274*^9}, {
   3.839667445723237*^9, 3.8396674473304515`*^9}, {3.840181790684128*^9, 
   3.8401817939149623`*^9}, {3.8401818555017433`*^9, 3.840181885877063*^9}, {
   3.840182678333886*^9, 3.840182687708765*^9}, {3.840183395356683*^9, 
   3.8401834025118527`*^9}, {3.840183577432124*^9, 3.8401835782266893`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.83394770273746*^9, 3.8339477064530706`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gStart", "=", "1"}], ";", " ", 
  RowBox[{"gEnd", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newMin", "=", "0"}], ";", " ", 
  RowBox[{"newMax", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"legendCoord", "=", 
    RowBox[{"{", 
     RowBox[{"0.75", ",", "0.75"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stringArray", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<n=\>\"", "<>", 
       RowBox[{"ToString", " ", "[", 
        RowBox[{"nArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"\"\<\[Theta]=\>\"", "<>", 
        RowBox[{"ToString", " ", "[", 
         RowBox[{"thetaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"\"\<n=\>\"", "<>", 
        RowBox[{"ToString", " ", "[", 
         RowBox[{"nArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}], "<>", "\"\<, \[Theta]=\>\"", 
        "<>", 
        RowBox[{"ToString", " ", "[", 
         RowBox[{"thetaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}], "<>", "\"\<, \[Alpha]=\>\"", 
        "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"alphaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "gStart", ",", "gEnd"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gStart", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"gStart", ",", "1"}], "]"}]}], ";", " ", 
  RowBox[{"gEnd", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"gEnd", ",", "length"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legendPlotted", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oldMin", "=", 
   RowBox[{"simDistArray", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"oldMax", "=", 
   RowBox[{"simDistArray", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"newMin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"newMin", ",", "length"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newMax", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"newMax", ",", "length"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"min", "=", 
        RowBox[{"newMin", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{"newMax", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{"simDistArray", "[", 
         RowBox[{"[", 
          RowBox[{"t", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simDist", "=", 
        RowBox[{"simDistArray", "[", 
         RowBox[{"[", 
          RowBox[{"t", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hist", "=", 
        RowBox[{"histArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"color", "=", 
        RowBox[{"colorArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"thePlot", "=", 
        RowBox[{"If", "[", 
         RowBox[{"legendPlotted", ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"anaDataArray", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"1", ";;", 
                  RowBox[{
                   RowBox[{"Length", "[", "anaDataArray", "]"}], "-", "1"}]}],
                  ",", "t"}], "]"}], "]"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], ","}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"anaDataArray", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", 
                RowBox[{
                 RowBox[{"Length", "[", "anaDataArray", "]"}], "-", "1"}]}], 
               ",", "t"}], "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"anaDataArray", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", 
                RowBox[{
                 RowBox[{"Length", "[", "anaDataArray", "]"}], "-", "1"}]}], 
               ",", "t"}], "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"colorArray", "[", 
                  RowBox[{"[", 
                   RowBox[{"gStart", ";;", "gEnd"}], "]"}], "]"}], ",", 
                 "stringArray"}], "]"}], ",", "legendCoord"}], "]"}]}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"simDataPoints", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", 
             RowBox[{"dx", "/", "2"}]}], ",", 
            RowBox[{"PDF", "[", 
             RowBox[{"simDist", ",", 
              RowBox[{"x", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "min", ",", 
            RowBox[{"max", "-", 
             RowBox[{"dx", "/", "2"}]}], ",", "dx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"simPlot", "=", 
        RowBox[{"If", "[", 
         RowBox[{"legendPlotted", ",", "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", 
           RowBox[{"simDataPoints", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Purple", ",", "Thin", ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "6"}]}], "]"}]}]}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"legendPlotted", "=", "True"}], ";", 
           RowBox[{"ListPlot", "[", 
            RowBox[{"simDataPoints", ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotMarkers", "\[Rule]", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Purple", ",", "Thin", ",", 
                  RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "6"}]}], "]"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<Simulation\>\"", "}"}], ",", 
                "legendCoord"}], "]"}]}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"thePlot", ",", "simPlot", ",", "hist", ",", "color"}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "gStart", ",", "gEnd"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plotArray", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"plotArray", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "[", "newMin", "]"}], ",", 
         RowBox[{"Max", "[", "newMax", "]"}]}], "}"}], ",", "All"}], "}"}]}], 
    ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0.0", "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(f\), SubsuperscriptBox[\(Z\), \(1\), \
\((n)\)], \((\[Alpha])\)]\)(z)\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<z\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Automatic", ",", " ", "15", ",", " ", "Bold"}], "]"}]}]}], 
   "]"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Frame", " ", "labels", "\[IndentingNewLine]", "\t", "FrameLabel"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<f_{Z_{N}}^\\\\alpha(z)\>\"", ",", " ", "TeXForm"}], 
         "]"}], ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<z\>\"", ",", "None"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"histArray", "[", 
         RowBox[{"[", "All", "]"}], "]"}], ",", 
        RowBox[{"plotArray", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"plotArray", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "newMin", "]"}], ",", 
          RowBox[{"Max", "[", "newMax", "]"}]}], "}"}], ",", "All"}], "}"}]}],
      ",", 
     RowBox[{"ImageSize", "->", "Large"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7927204376706123`*^9, 3.7927205398846893`*^9}, {
   3.7927206855097404`*^9, 3.7927206883381643`*^9}, {3.7927208085695515`*^9, 
   3.79272082068042*^9}, {3.7927208646850953`*^9, 3.792720874967448*^9}, {
   3.7927240402077775`*^9, 3.792724313424281*^9}, {3.792724355913145*^9, 
   3.7927243933077583`*^9}, 3.7927256775398073`*^9, {3.792725756376341*^9, 
   3.7927257636741505`*^9}, 3.7927267361683*^9, 3.7927274103923893`*^9, 
   3.792727552157349*^9, {3.7927285785326376`*^9, 3.792728585330077*^9}, {
   3.7927554750428057`*^9, 3.7927554888098917`*^9}, {3.792755825329982*^9, 
   3.792755827080171*^9}, {3.792756296755311*^9, 3.792756728488816*^9}, 
   3.792756766539749*^9, {3.7927568207642736`*^9, 3.792756837078695*^9}, {
   3.792757063321395*^9, 3.7927570671655526`*^9}, {3.7927592476190653`*^9, 
   3.79275925710427*^9}, {3.7927596793055534`*^9, 3.7927596830090714`*^9}, {
   3.792759931738723*^9, 3.792759944443206*^9}, {3.792760108757646*^9, 
   3.792760126525332*^9}, {3.7927603346723795`*^9, 3.7927603624721622`*^9}, {
   3.7927604905172524`*^9, 3.7927605400379753`*^9}, {3.79314441175782*^9, 
   3.7931446041968813`*^9}, 3.7931446433417387`*^9, 3.793144970658036*^9, {
   3.793145130315708*^9, 3.793145167991605*^9}, {3.793145276206503*^9, 
   3.7931453183983383`*^9}, {3.7931453486360064`*^9, 3.793145413736843*^9}, {
   3.793145502808754*^9, 3.7931455042151055`*^9}, {3.7931612081881695`*^9, 
   3.793161220454987*^9}, {3.793161665891099*^9, 3.793161686640335*^9}, {
   3.7931617215144343`*^9, 3.793161738764099*^9}, {3.793167565559187*^9, 
   3.793167584520938*^9}, {3.7931676341132293`*^9, 3.7931676345297203`*^9}, {
   3.793167840852107*^9, 3.793167899155903*^9}, {3.7931680320958605`*^9, 
   3.793168280769622*^9}, {3.7931683515718727`*^9, 3.7931683573722763`*^9}, {
   3.793169159317032*^9, 3.7931692351934013`*^9}, {3.7931692690650687`*^9, 
   3.793169328615015*^9}, {3.7931693593147445`*^9, 3.7931693716082025`*^9}, 
   3.7931694588303027`*^9, 3.7931694910437765`*^9, {3.79316952692472*^9, 
   3.7931695560055113`*^9}, {3.793169589095931*^9, 3.7931696318150935`*^9}, 
   3.7931696668095007`*^9, {3.7931701351292353`*^9, 3.7931701474239483`*^9}, 
   3.793170209701665*^9, 3.793170341824746*^9, 3.7931704913851876`*^9, {
   3.7933140510106716`*^9, 3.7933141062195835`*^9}, {3.7933264239885707`*^9, 
   3.793326437349166*^9}, {3.7933265010591645`*^9, 3.793326514154114*^9}, {
   3.7937870022900605`*^9, 3.7937870243705435`*^9}, {3.7937870853302016`*^9, 
   3.7937871298972874`*^9}, {3.793787498764888*^9, 3.7937874990774727`*^9}, {
   3.793787608573717*^9, 3.793787648280904*^9}, {3.7937878241591473`*^9, 
   3.7937878325664406`*^9}, {3.7937879442502337`*^9, 3.793787954767009*^9}, {
   3.7937885543935237`*^9, 3.7937885546749754`*^9}, {3.793788607274229*^9, 
   3.793788669171426*^9}, {3.793788716817339*^9, 3.793788792559635*^9}, {
   3.7937888246724524`*^9, 3.793788848472065*^9}, {3.7937891461670666`*^9, 
   3.7937891553241644`*^9}, {3.7937893152943506`*^9, 
   3.7937893564395547`*^9}, {3.7937894319005957`*^9, 3.793789443823735*^9}, {
   3.793789561727194*^9, 3.7937895955432835`*^9}, {3.7937897052111454`*^9, 
   3.7937897277761927`*^9}, {3.7937900592335653`*^9, 
   3.7937901079575267`*^9}, {3.79379032246467*^9, 3.7937904031139283`*^9}, {
   3.793790880758834*^9, 3.7937909492036505`*^9}, {3.793791026837141*^9, 
   3.79379108742177*^9}, {3.793791177712473*^9, 3.79379119322996*^9}, {
   3.793791266268877*^9, 3.793791306242056*^9}, {3.7937914764475827`*^9, 
   3.793791481823351*^9}, {3.7937915230932455`*^9, 3.793791538469878*^9}, 
   3.7937922181051097`*^9, {3.793792384048901*^9, 3.7937923985971518`*^9}, {
   3.793792441305024*^9, 3.7937924606821127`*^9}, {3.7937949194538107`*^9, 
   3.7937950280591373`*^9}, {3.794283146399127*^9, 3.794283151555732*^9}, {
   3.7942832327831745`*^9, 3.7942832986654196`*^9}, {3.794283479887951*^9, 
   3.7942834801223545`*^9}, {3.794283665610945*^9, 3.7942836660641212`*^9}, {
   3.7943399565755253`*^9, 3.7943399569816575`*^9}, {3.8325739774057813`*^9, 
   3.8325739786112247`*^9}, {3.8339477244935045`*^9, 3.833947791756817*^9}, 
   3.833947857012262*^9, {3.833948019701522*^9, 3.8339480220023155`*^9}, {
   3.833966170683221*^9, 3.8339661960891523`*^9}, {3.8339663722749195`*^9, 
   3.8339663732921267`*^9}, {3.833966455765829*^9, 3.833966591897829*^9}, {
   3.8339666382385187`*^9, 3.833966661103859*^9}, {3.833966708530898*^9, 
   3.833966955606326*^9}, {3.8339669993215785`*^9, 3.833967019841997*^9}, 
   3.8366119309933367`*^9, {3.836612493517708*^9, 3.8366125834859066`*^9}, {
   3.8366170883441467`*^9, 3.83661709517598*^9}, 3.8366177619505405`*^9, {
   3.8366179412886105`*^9, 3.8366179963139305`*^9}, {3.8366181499074764`*^9, 
   3.836618153681779*^9}, 3.8366185458583784`*^9, {3.8366185810465603`*^9, 
   3.83661859445282*^9}, {3.8366186413177314`*^9, 3.836618714143691*^9}, {
   3.83661931244119*^9, 3.836619313242936*^9}, {3.836619374969616*^9, 
   3.836619375367776*^9}, {3.8366194576751857`*^9, 3.8366194965313053`*^9}, 
   3.8366195486873827`*^9, {3.8366197216074247`*^9, 3.836619729200165*^9}, {
   3.836619786591268*^9, 3.8366197873016043`*^9}, 3.8366215297793436`*^9, {
   3.8366215933107214`*^9, 3.836621593675832*^9}, {3.8366227324047675`*^9, 
   3.8366227333895006`*^9}, {3.83662278482071*^9, 3.8366227851888394`*^9}, {
   3.8366228298191566`*^9, 3.8366228576575713`*^9}, {3.836623190440995*^9, 
   3.8366231910954075`*^9}, {3.8366232317915335`*^9, 3.836623232076468*^9}, {
   3.836623288226863*^9, 3.836623301660161*^9}, {3.8366233481492715`*^9, 
   3.8366233497061386`*^9}, {3.836641054301589*^9, 3.836641058358615*^9}, {
   3.8366895950059967`*^9, 3.8366896847059917`*^9}, {3.8366897216113462`*^9, 
   3.8366897220282087`*^9}, {3.8366897658282433`*^9, 3.836689804868955*^9}, {
   3.8366898697144856`*^9, 3.8366898723358274`*^9}, {3.8366912407957163`*^9, 
   3.8366912662256575`*^9}, {3.8367039176826925`*^9, 
   3.8367039201594625`*^9}, {3.8367259886278563`*^9, 
   3.8367261286648264`*^9}, {3.8367263308161144`*^9, 3.83672637302579*^9}, {
   3.836726403098184*^9, 3.8367265706811213`*^9}, {3.836726684376392*^9, 
   3.8367266864956264`*^9}, {3.8367268325821733`*^9, 3.836726839044038*^9}, {
   3.8367269128968773`*^9, 3.8367269139125633`*^9}, {3.836727703702608*^9, 
   3.836727744081428*^9}, {3.8367277768435793`*^9, 3.836727778247483*^9}, 
   3.837030561828903*^9, 3.837040850432716*^9, {3.837047698948039*^9, 
   3.8370477060891848`*^9}, {3.8370484630749254`*^9, 3.837048465889655*^9}, {
   3.837048512570752*^9, 3.8370485153268795`*^9}, 3.837234491130329*^9, 
   3.83733143366105*^9, {3.837338689807974*^9, 3.837338693878583*^9}, {
   3.8373387276072035`*^9, 3.837338728425195*^9}, {3.83734518366053*^9, 
   3.83734520825657*^9}, {3.8373452386159344`*^9, 3.8373452537407866`*^9}, 
   3.8373853111674976`*^9, {3.8373854126281557`*^9, 3.837385414516038*^9}, {
   3.8375072889728746`*^9, 3.837507291361204*^9}, {3.8375074188568006`*^9, 
   3.8375075329066706`*^9}, {3.8375075908177032`*^9, 
   3.8375076519803424`*^9}, {3.837647099794963*^9, 3.8376471047449827`*^9}, {
   3.8376471407452064`*^9, 3.837647184207523*^9}, {3.8378538244194713`*^9, 
   3.8378538298263283`*^9}, {3.8378559710562572`*^9, 3.837855997893922*^9}, {
   3.837856044101979*^9, 3.8378560552885246`*^9}, {3.837856619914997*^9, 
   3.8378566228656163`*^9}, 3.8378566877632513`*^9, {3.83785874696056*^9, 
   3.837858772937662*^9}, 3.8378631679750323`*^9, {3.837863300489272*^9, 
   3.8378633053489833`*^9}, 3.8378636543235893`*^9, {3.8378637422235336`*^9, 
   3.8378637594441333`*^9}, {3.8378638259826083`*^9, 
   3.8378638540948153`*^9}, {3.8378638892548018`*^9, 
   3.8378638910051374`*^9}, {3.8379482501817584`*^9, 
   3.8379482926314335`*^9}, {3.8379484837945504`*^9, 
   3.8379485008235283`*^9}, {3.8379485335618753`*^9, 3.837948545515103*^9}, 
   3.8395829452227106`*^9, {3.839589440361516*^9, 3.839589440903958*^9}, {
   3.8396522955962987`*^9, 3.8396522963142977`*^9}, 3.839652366853562*^9, {
   3.8396526880835*^9, 3.839652688498743*^9}, {3.839666207789606*^9, 
   3.839666208541257*^9}, {3.8396664211808853`*^9, 3.8396664214757276`*^9}, {
   3.83966666170711*^9, 3.8396666887648897`*^9}, {3.839666733059254*^9, 
   3.8396667432263823`*^9}, {3.839667169873342*^9, 3.8396672652520638`*^9}, {
   3.8396673675386343`*^9, 3.8396673689149837`*^9}, {3.839667418583585*^9, 
   3.8396674195824137`*^9}, {3.840180624087139*^9, 3.8401806430357256`*^9}, {
   3.840180833755765*^9, 3.8401808342808113`*^9}, {3.8401818083555927`*^9, 
   3.8401818138777947`*^9}, {3.8401819119566107`*^9, 
   3.8401819426160126`*^9}, {3.8401832397922316`*^9, 
   3.8401832465158815`*^9}, {3.8401832855959916`*^9, 3.840183288716177*^9}, {
   3.8401833290649548`*^9, 3.840183372210699*^9}, {3.8401834273516245`*^9, 
   3.840183427664332*^9}, {3.840183512299428*^9, 3.8401835193076982`*^9}, {
   3.8401836224827538`*^9, 3.840183628288479*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], LineBox[CompressedData["
1:eJw12Xc81f3/BnAVlSYlSUMyGjff0t7XaadJoSht2lvLXVLJ3Q4NsrJX9t7Z
e+/tOI7jOMdBRqmU3+G8fv7pcR74eM/reZ2T4qmrB4xGiomJtY0SExv69/+/
6qT3jT/Wq8IY8P1WsveUFi4pBfVbev7/6xNQZ188KHlYhfHL7EK8ybtzcPn4
Zn7D+P///jV4+K/3+5ukzPhXJnBHk6kJ7Ls8Vp+5o0w/fxc+n/r0xi5WZtxr
U9UY638f3eMMgtitSvT75hAOQbrHVYmxvnH/a9srj2HapnRV3VCJnmeBSIYy
8/UMJUas5oSR//xniQn2Do6TKufR85/hAh799f0wj7E2POt24ucXyFbQMjfQ
nUd/7xX+Ni6Ll5edx4ie85SvHf0GfnXrLrZUKtLft8KnjndnIuwVGY5pc4Nv
nLOGVGqK49NjijQeG1Q7CpS1lRQZtT+H/yBWHlRcNLVtLo3vPdyNXHozguYy
Zi6uVx796AN6Bla0nr0zl8b7EYOhr82+YS7D4My6oSei6vdbreOSc2n8dtCT
t5xu4K3AsP80/IXzjBMC/w0KNB97ZNR8aggsn8OoLvhxsNnTAb8elZQdujqH
5ucIwymbOJ/HzWHMENebpB7qhDUPnXUees+m+TpDSlHuVce22YzDa4YfCJ/t
mvM4LbNo/i7QKllXfuy/WYw9q55vOtHiAvmAqy+0F82i9XDFhnru3qiCmYx2
7aEnuuLNxK3az01m0vq44YZuMS9p5kzGy0utv32/uUFnasT7Q2nytF7uOPll
Uvv2K/KMf/6TFU7BHUsGlYOfzZCn9fOAoYldsmzGDEau67bInj8e+HbcXpF/
cwatpydigxZ+G5w3g3FRuFpy4l547adzbX+pHK2vF0a6PfxTaiHHGFfpfm3D
OG+svhEs82yVHK23Nx58adhnzJ/O8BuarpQPrLfuPHneZTqtvw9qwnNmvdKb
ztg19DhZX5ToMi5nT5xO++GLK4Kmw7MyZBm8oeWe5Ye7W/wHHz6Upf3xA8Mj
275zjSxjaPWK5n3BmxWD/xr3TaP9+gKTEXMmMkOmMRYefZvSt8AfvxzvFB66
Oo32zx8PtPWOZKtPY2QLnya/OAAFgXePLxHI0H4GgH/FyuVZgAzjvLXgPlYE
4sK7tP78KzK0v4HI91x5aGCJDEM4OOGUg3BF4uXXyb1Tab+DcF/NRFM8eipD
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
SrDGQMHoblYzho+7WQlMVrhIctybIepDJfj2N+qp98NmiD4+KEFFiFxf3JFm
iPpRCTL0N9+et7qZ8rMEadPuLaqRaYZoe4W/vyluBesbi/K0BFuzoxLXFLKo
P5Ug1jGto9GfRflaCpZW+bfSFyzqU6WQYV7/LnOeRXlbik3WAepuO1jUr0px
Y+ScXFNVFuVvKZL0SsSdJVjUt0pxzHLX1PEtTZTHpTAuvqKRnNZE/asU2gf/
c/zq0UT5XIr2qGXvJZ42UR8rxT6p0wY2Rk2U16UIz9y9zGh7E/WzUjyMOm30
YH4T5XcpYHB4Tc3YJuprpTg+a8wvUx6T8rwU+3Nv9R7LY1J/K4W8Yu6dp4FM
yvcyHLi8o1xgxaQ+VwaB/oYTtjeZlPdlEMsbd+WRHpP6XRliG6X1vqxhUv6X
4dVgyHWZ2Uzqe2VQmLZpVrwYkzwowy4/SeMt2Y3U/8oQsePwoufWjeRDGTxV
rXfsNGikPliGk71vnzxUaiQvymC1rc5bXdBA/bAMS5WdHmlHNZAfZVid/6qp
7VED9cUyaDm0O/TtaSBPylAy996zm3IN1B/LUHHp2ONT7HrypRwBD9TOJQfX
U58sh1hD7sy3D+rJm3IILt14nLOrnvplORr221nckKsnf8qxYpJgoiWnjvpm
OfzL9kwUj6gjj8rR3RRhwn9SR/2zHOdmbFyz7mAd+VSO2wljD3bPq6M+Wo7X
+9cnTO6pJa/KkfKh/5ZNai3103Kop+8xu/e+lvwqx+hi9ZpUo1rqq+XwrLtk
dW1VLXlWjoziAD8zyVrqrxXQlDu2QlBbQ75VoPzaF8QF1lCfrYB1l2lt66Ma
8q4CE+acmH1Dt4b6bQW2/u/9LP2FNeRfBY6eEnQ7/KmmvlsBnycV8WtKqsnD
Ckw03/5Jw7ua+m8FbihF+z6+Xw3Rx5MV2NelOEXtQDX14QooT+voV1tQTV5W
YMHDbkuLv1XUjysQKHm+VaO8ivyswMfs1h3L/auoL1fAzES/6sWTKvJU+Pzm
vpzlR6qoP1fCPmitjsayKvK1Eqb8Zr+H46uoT1fidg97jAK7krytRL/+Sa9J
CZXUryuxrd0zde/HSvK3EvJFip9rr1ZS365EQsxx0yjNSvK4EhfWDtoxlSqp
f1dijWogQ+9vBflcCSvpeTHThfMQ9fFKWLRI71EOryCvK9H1YvG2f99WUD+v
BOuLYvfMixXkt3CcLx+4SeyooL5eidddSd6rlCrI8yqkqe3RDRksJ8+rsHHx
UbEbdeXkeRUkw8TF7sWUk+dVEHu4KCD9Yzl5XoU9sQ9OHTIpJ8+rEKVjcl/9
QDl5XoVDj7fq71hSTp5X4dyuxsMewnsl8rwKCxby67YI76HI8yqopSXuVBHe
W5HnVZgZcmTEzi9l5HkVru47f/nLizLyvArdAYv79glzROR5FbqsbEYu3VVG
nlfB+NaEETqLysjzKlwI9zUMH1dGnldjecio/w7wS8nzasTLrReo55WS59Ww
0OgfsT2glDwXvl53dLX9m1LyvBohjaMlFl0rJc+rsSdoQkOvdil5Xo2joT1r
fwldEHlejdUSQe/XyJaS59WY99TeKLS/hDyvxsGXtxeeqS0hz6vhFnnacF9i
CXleDd3UhofXXEvI82q0XouXyrEoIc+rUXpLxdrgXAl5Xo0Sc5snintKyPNq
mO/IujhnSQl5XoPbbqUFWjIl5HkNVCMllkX3F5PnNUhf0KWgU19Mntcg8czJ
OcopxeR5Db60noie711Mntcg2Omfe8deFZPnNWjYuUSQeb2Y3u/U4G7veLfT
h4phNex5DdaYWKpqbCim9z81kOx8M26JUjF5XoN5t1Y3HpcsJs9r4OkauTKp
s4g8r4HEDgMPrYoi8rwGXNU38VIJReR5DdTCS2XEPIrI81qoM79umfOyiDyv
xeruH8wLwp4p8rwWxuf/97RFv4g8r0UUVyHntbC3ijyvhba61a7TC4vI81oc
mrTDzUi6iDyvhcakmXULegrJ81pYvde1bUgtJM9rsTcxJYz/vpA8r0X426pr
+40LyfNaLDrVP1lydSF5XgsL3fNl08cVkue1KC89MOrfugLyvBbSqlHNGkEF
5HktDGdeSVz3uIA8r8XtJIUGW90C8rwOZQvwdtvCAvK8DoydEnO3/sknz+sw
pf4i06Y4nzyvg/mFBfM0vPLJ8zrc2+K9es6/+eR5Hew9Rt/T18onz+uQ1yC9
lqWST57XYbbV+rKo33nkeR3K251cq4vzyPM69Mu2/9nuk0ee1yHA4s72QbM8
8rwO22+p1ozQyyPP68A0uTZjn3oeeV4HS4G+cbN4Hnleh9uZV5WT63LJ8zrw
pqVGc8JzyfN6WJSwnx98nUue18PTs2lwtHEueV6PJfEbLMSQS57XQ82v6xHk
csnzepQZnDRK/ZZDntfj7oRTji9zc8jzeqEHah9tPXPI83ok7DdM5TzMIc/r
ceP1tw93DXLI83p8uLnp0Z4VOeR5Pb4f/fPzpFQOeV6PkuaFt6P52eR5PVhL
Z13en5lNntdD5eTtQ6ru2eR5PXKqlYLWP8wmzxtgVKDbaX0kmzxvQHj4w/cq
q7PJ8wY0FByc9UMmmzxvgE3iV4nR3VnkeQNuzGsr0i7MIs8bsHPjosFq/yzy
vAFN/pOmOr/IIs8bUDJLy8rpXBbihj1vwBnZ0t+V27Po/W4Dxua51+5RycLk
4QPdgGm93ZG/R2WR5w045T9Fls3KJM8bMPvszccSKZnkeQMYTS6Wx10zyfMG
fFdE4DfzTPK8ASefjLGMO5FJnjdidlq6QzwjkzxvRI6irlnv3EzyvBG77jsl
nBqRSZ43wvqRFW80K4M8b4QiS9WWmZJBnjci77WhXqd7BnneiLT+pfFLn2aQ
542YeN7D0M84gzxvRMruL0W6OzPI80ZY2az1X74ogzxvRIvc+mfbJ2SQ540Q
k37z50VHOnneiPi7Yl4jitPJ80YUfTgwyy8snTxvhM29JQNPPqaT50ysfbWE
9eZeOt13JnYpFF/MOZpOvjOxacztVSsZ6XT/mTi53phdrJRO3jNx/XH2FKcx
6ZQHTDyd7nXalp9G/gtfn2+4m1SYRvnAxJ2S//VND0+jPsCE5ZF/7jvZpVFe
CF9bbgjVepBG/YAJiTlu6zVOpVF+MJE1/mzyxh1p1BeYeL7ifOtdtTTKEyZm
nzig1yidRv2BCRc528jrP1IpX5hIcTcJWVyfSn2CiVU9HV1yqamUN0x0uBQo
qPumUr9gYk+Xc9vFt6mUP0xMKv/yq+xWKvUN5vA6njuaSnnExJFvp7yVt6RS
/2AiUOrQ53GLUimfmFiaM912hnQq9REmikJsN2r3p1BeMbH5i9n2kMYU6idM
BE9fcGJNZgrlFxO3x7puaAtMob7CxOQ7XtZJH1Moz5jY+dh98lezFOovwvEH
B11kG6dQvgnnv+K1wZL9KdRnmsDZ5G3ttiqF8q4Jl/ZLZa6dm0L9pgn/MzUP
6R+bQvnXhPDqg2PrviVT32nCOuazJ+yaZMrDJrgmJtZKpyVT/2mCb96ynNMB
yZSPTSjoSx1b8zGZ+pDweYtatU3Mkykvm5BdEXRi6YVk6kdNMDLI7pqqk0z5
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
nzdIdw0t8yLP2xBr9MV09Fcv8rwNAY2BJ018vcjzNnT8p6Ax8M6LPG/DNddX
qU5mXuR5Gx7dTes5fN6LPG9Delupo7qOF3nehlM8CfuZ8CLP2zBJujlj3iIv
8rwNc+ZqDG6e5kWetyHUqnvOfTEv8lw4nznGIwv4nuQ5Dyzd0ZarKz3Jcx6K
FJ5bxqV4kuc8FB9oZOoFepLnPLA3Lb8xzt6TPOfBfK9gesVTT/KcB61bvkEx
1z3Jcx7qeYzpEYae5DkPCzzT1LI0PclzHmT7HhR0r/Akz3koke+oWT7Pkzzn
YUpd/pI3kzzJcx4WzpwY9PeXB3nOg8zVkuWWrR7kOQ8b4k1dlcs8yHMedhTY
lVUneZDnPDzv7g3wDPCgz395uPLu1cRn9h70/z08RJVZl5r/50GfB/Nwb8lF
5lsTD/r/Hx5+yYTJRJz0IM950HmySrtrnwd5zkNt4M/bm9Z7kOc83HVSP+uz
0IM858Eua80oleke5DkPI79GqkWJe5DnPBhnXkk/1u1OnvMQ+MQwaCbTnTwX
rt+HoDxBvjt5zsO2TSmDZXHu5DkP66cr/VPs606e83Ds41sNlq07ec7HrPLe
vjGW7uQ5HwULrh7ZbOJOnvOxvEBzm/Upd/KcD1ebvx97tdzJcz44D1YsvwR3
8pyPn/fTxPrV3clzPmZPDGLaznInz/kYyVWJ3j3enTznQy/Y8uLUX27kOR/y
n480dnDdyHM+AjSO9NdXupHnfBhUnXVgZriR53xke74N+B7hRp7zUf13vMxc
TzfynI+NuzeFH33vRp7zke+VeNP/iRt5zsfOdxtWT77pRp7zwfNzbbU45Uae
82F+sP/sxANu5LlwPjfufvbZ5Eae83Ff4bGJnoYbec5H91HnfFlFN/Kcj45s
M+s2KTfynI9FBn+8CsTcyHPhfCbM6kvvciXP+XjsKn66kOlKnvNRpTO2ilfk
Sp7zseT953Vyya7kOR8yMedvHQpxJc/50ElRu+zj6kqe8zF3Uvm48Tau5Hk7
imVurXz42JU8b8ds5W1V4jddyfN2NMm7VzmcdiXP2/FAZcrcrTqu5Hk7PE3X
2v7Z6kqet6NKrk01a4Ured6OzRaTo91VXcnzdqg8TV1mNd2VPG9HA2fjk9dj
Xcnzdmitanzr8NOFPG9Hi6XKllieC3nejjELIy3bal3I83ZI3jq8dWG+C3ne
jsT/vhvdS3Qhz9txQMKpvDrIhTxvR3qt6YNdri7keTtqJZp25Nq4kOftuL9v
s8JRCxfyvB12Mss6Bm65kOftMJ18/nPAWRfyvB0fp8bNvqLvQp63o6Byrs7G
3S7keTuWxoWqz9ngQp63Y8ZL3w8TF7uQ5+2o0Dx2Z4KiC3nejoQ+zUT5qS7k
eTt8tCT0Vku4kOfC9d1vrZPT8Zk8b4fhmsq9m0s/k+fteFadfbUq6jN53o68
O+9tXjl+Js+F+xX7+c2xR5/JcwGq1lmv32f8mTwXwHj27ltHdn8mzwU48Jkv
bbnkM3kugHZkHj9/2mfyXAB59yd1S387k+cCpL9gJoQznclz4evJHecPZjiT
5wJ48btiJ/k7k+fC7z8/+5Jj7UyeC+DhJhlZc8eZPBdgbFXmNL6hM3kuQJd2
7tPpW53JcwFUjt5qOr7ImTwXIEX8uHialDN5Lhx/3OGcLT+cyHMBfLrOT26s
dyLPBXgWVRT0Ic2JPBdgovGIZ2e/OJHnAjiv8jLRsXEizwWo6XQ+cPSeE3ku
APeB2KDZCSfyXIBiF5lD8TucyHMBtF7pr5ZZ7ESeC6D35pG5pawTeS7A+Ygb
E6f+dSTPBXhwZ3tCTIsjeS7AR33NK6b5juS5cHx2v/7qRDiS5wKYFI7fp+nk
SJ4LwPA6sfbQU0fyXICftye5m112JM87MOX3kbNfdR3J8w48/Z5kPGOjI3ne
AVZzi/krVUfyvAOLXN0/yE12JM87sGD2qKcJPxzI8w48kNiw+F+mA3negW23
Yky0sx3I8w5oeUxeyQh1IM870P1RQmeHgwN53oFXBW+DjC0cyPMOmP0qWuh8
2YE870CZ7wwPgZ4Ded6BG39aB3UYDuS5cLwGrXPKFjqQ5x3wV+hiXZjqQJ53
YJfumP/N+GNPnnfA3ugYq4FjT553oK/wACuuyJ4870BWw2Wp4Fh78rwD0YZn
9sd52NP/93bAQEv2cf0be7CHPe+Ake+bl7L37MnzDtiMHLXf+LQ9ed6BIp3S
oLy99uS5cP1CnltrrrYnzzug8qu6sm6ePXneAUcnV2PLifbkuXD997cqbu//
RJ53QC61RjCz+RN53oGA82WBYwo+kecd2PqPrqZkzCfyvBMflUe7zfX4RJ53
Ivh0tNPet5/I804YeJ5RtDL9RJ53om/KP1O4Rp/I8060iB3U1dX+RJ53wjhg
V1Hl+k/keSfKB73OXV3wiTzvhM1OJfFZMp/I806sGOH6rH7QjjzvhObr+XVh
fDvyvBPPfjeznSvtyPNOXMpc8Nw51Y4878Qxh8tBoUF25HknVk7dv7HWwY48
7xS+f3ozS+6ZHXneiafe0hrnTezI806MtGKdKjhhR553wn794k879tqR550Y
e1szrmyNHXneCd4br+BbqnbkeSfuLWw8sWiqHXneiVt/AsO6B23Jc+F8nXut
CtptyfNOGG4JYSZU25LnnTB5NfZlUoYted6JJXsYdyvCbMnzTsTuS7IadLEl
z4XPnzclYd0bW/K8E9+YzJYX/9qS552Y3d/f037OljwXjrdnR9FJPVvyvAsX
dtadbttii/8DtM8flQ==
         "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], LineBox[CompressedData["
1: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
3HpXjjxvxp4GH9elc+TI82Z4x1otnlgmS543o0p2s5rdeVnyvBkHIge7TVOX
Jc+bYbFmmNTmXBnyvBlvn/nJt5yRIc9F96f29PqyyTLkeQsUNxqfUi2UJs9b
cGngs2WfnaTJ8xZkXr7sHTFLmjxvQfk3HP7KG02et0C3e2DUCbfR5HkLHn99
d1PfeDR53gLVETIqp7pHkectqGgtFefvG0Wet+CEs/aqpJKR5HkLLohHR/1e
NpI8b8GZCZUTnaNHkOctEHqMctwyawR53gKtkJvfDwdKkectiFoQFJegKkWe
t2D5ICcYeQ8nz1uwMGTTz/YJw8nzFmy8pO/8/tkw8lw0P1nHgEcqw8jzFpQ9
XLPw2ouh5HkL0r8tNLwwfSh53oLSx0kFpyKHkOct4AoaJ+8zHEKetyDR/sO9
pbmDyfMW+Ht1O4/YMZg8b4H9j4B7kQJJ8rwFyYY3zPWdJMnzFhwU1r29KydJ
nrdgi2yHzdugQeR5C/R/uVxxMxpEnrdAb3zXWL3qgeR5C6oj5NfePz2QPG9F
5b2Tp57IDSTPW+Fk97ZjZfgA8rwVxdFq033XDyDPW/Ei+HGma5cEed6KBe+r
Dis+kSDPW/FkzbG62YwEed4KoeL874WN4uR5K6QNR3j+ui1OnrdisZoT74mu
OHneihHG9rxwnhh53grnK615uCtGnreia/fxn3qLxMjzVkzbbrJ/etk/hvW8
Fa6nFnQHz//HsJ63YnzIrYgGz16G9bwVEwMGFqYO6GVYz1vRcyTr/Uq7vwzr
eSvsdPParCv+Y1jPReP9paMmbfwfw3reirdXU/UMPvYwrOetKPTeo1k/rYdh
PW9F26iT8j/9uhnW81ZYfrNcfVipm2E9b8WA75IGSx79YVjPWzHm/swTB2X/
MKznovlvkH5V5fqbYT1vhfu/9PBbcr8Z1vNW3PCsuHvM/RfDet6KkcfebLo2
8RfDet6K80UKJokvfjKs561QSapNHjv7J8N6Lpr/dj2TS5+6GNZzPtqGbTn5
e2UXw3rOx5QLfwcfq/7BsJ7zsXPtr9rmQz8Y1nM+es3f/1w94AfDes7H6rxS
G78n3xnWcz4K06KPVMz+zrCe85EVIGPZkfWNYT3nI7Pl5Jsi628M6zkfW579
arw26BvDes7HsQOfwsQDvjKs53woSLjX6C/7yrCe87FpntdyLf4XhvWcD3e7
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
//9D/x/Be2bf
         "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
       {GrayLevel[0], PointSize[0.008333333333333333], AbsoluteThickness[1.6],
         LineBox[CompressedData["
1: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
7W60z0TqdwnwI2r+yvETaV8vwRGXj6k97uLU81JYB3OaE0eLU89L8WZR8ZzJ
kmLU81LMcEv13TFnAvW8FAtyL2wYs2w89bwU35/LzuveNo56XorYzZ1CJadE
qeelaLDVvOj6UIR6XgrX430jkrKFqeel6P4y12XfKGHqeSnK11qEy60ZSz0v
hYV8QnrjhTHU81J0LfX3Op41mnpeih9lN9bfmTaael6KA9tlvJQthajnpVC1
N3AZ/3kU9bwUzz4cOjdGfhT1vAyRK4uWf3cfST0vw7es1kdhXYLU8zI0MG51
4nsEqedlMLfnGnzLGkE9L8POrfUOyzVGUM/LEJMo2/YmVoB6XoaSJ+836KwS
oJ6XwYVrdyfZ5h9LPC9Dnsl/OgFOAyzxvAz7z8mJ99/8yxLPy6D358rU2y/7
WeJ5GWboWZxWy+5jiedliF/1sv/xtz8s8bwMo/U4S4Nk/7DE8zIcODtfZ5LB
b5Z4Xgbjr7snR3n9Yonn5dj3IIRnmP+TJZ6XozD3wL3cqT9Z4nk5lunLuHSa
/WCJ5+Wwl1Q1vPj2O0s8L8eCi/OWHRv/nSWel4N3mu9qd/gbSzwvx9jtc/td
MnpZ8rxTjlWipZ4mKr3sjWHPyzHr+bUDX+99ZcnzTzmcRz5KHy/ylSWel0P/
S9kqL8celnhejj4vD9boezdLPC/HpPEBp7ROdLPE83Js0476ZVXfxRLPy5Ep
n/59elsnSzyvgLaG2ET93x0s8bwCFy8W7q4Q62CJ5xUQHctG2y/is8TzCvAd
ylP6ddtZ4nkFjhwJrlJ0bGOJ5xW4t8HzT2ZoK0s8r0CPwOqI17wWlnhegU3q
drJhci0s8bwCqjMaO69ZNLPE8wp4yf1ZIB/JY4nnFdgj7Ku/fgSPJZ4PXv9o
nkbyjiaWeF6BYy5S8rZhjSyJqwqIx320XDmhkSWeV0Aqujmv6kQDSzyvwP6Y
O0s1yutZ4nklDs5igrha9SzxvBJj11jvjoqpY4nnlZikN/W+4+I6lnheidSa
+5/OBNeyxPNKOL15Nv/CvFqWeD748zcdJwR0a1jieSVctIUu+e2pZonnlcjU
fS0fcryKJZ5XYryBWyDvUiVLPK+E4Kz5itNDKljieSUeZN1wligoZ4nnlXB8
46Z0d0Q5SzyvhO76Z4zd8jKWeF6JKXGZO11PlLLE80rM1Sm8dymyhCWeVyLF
98sTo9/FLPG8Clt0LxzLWF/MEs+r8H620b5Xd4pY4nkVNrf5KJZ1FrLE8yps
e8JPl9tUyBLPq+DRY3Le4mUBSzyvwvSlV2MdJQpY4nkV8qcLz4RjPks8r4Jl
kIG5Bz+PJZ4Pfv+v7fhy4zyWeF6Fm92X5iuU5rLE8yoUZPe4r9qeyxLPq2Au
e2bk/eAclnhehdf6guM9wr+wxPMqnK917vz7KZslnldh2dM/TGJxFks8r4bE
g0UGD75lssTzarjVxG3ZIZ3JEs+r0T32Y030ugyWeF6NgKC3FjdOp7PE82ro
mf8rfBmaxhLPqxEdetm7kv+ZJZ5XozBO9Ha3ymeWeF6NQ6PsFWLPprKxw55X
46j097HiGSksed6txg31ng3Js1JYseENXY2TGVnrQm2TWeJ5NcoFnj8ILEli
iefV0DK9O/+CehJL4rkaDkekv815msgSz6vh869igdHERJZ4Xo062xxp0QsJ
JK5EavCy8LTMxN/xLPG8BkJCzqEbT8WzxPMaCOzVNF3c8Iklntdg5kNz5dDm
jyzxvAZ3HvRdKOn9wBLPa7Bu4Ye/lmM+sMTzGki7TxJSl41jiec1KHJYHD9y
XSxLPK9B7XtroVtH37PE8xpk/zih8+b+O5Z4XgPZxzNClubFsMTzwfF2uEbV
j4thiec1uKXd4HZNJ5olw6uB+8DIIGGftyzxfHD8FuNFFRqiWOJ5LUZ/figQ
uyyKnvdaNI5jFe97vmGJ77Uo+DvvyKO21/T812KdzE7+g82vWeJ9LWaJdo+1
eh1J86AWJg861n2dFckS/2vxH3+i1r9rETQfajH+8bycUyMjWNIHamHp6PBq
kUM4zYtamFntsZnyNYwl/aAW5j6ajyt6Q2l+1EJcyt/+8N9XLOkLtQiqPX7d
dcIrmie1cAxcvuTrvJcs6Q+1SDnW4GqnGULzpRb5wlONGo6+YEmfqMXvqga1
P77Pad7UYlpBg9Ll7GCW9Ita6Gik/jAeE0zzpxZCWcrJW7SCWNI3ahE5d2CN
jOczmke1kOxpuvyqNJAl/aMWh/9azEidH0jzqRZn/8hkwekpS/pILT5pmn7o
rgigeVWL+3LzDMI5ASzpJ7Ww6NFabeDvT/OrFj5/JFZ+GufPkr5SC01/ce0k
+yc0z2ox/a6sK7r8WNJfhl5fKzXxkB/Nt8Hx3jhtpZT6mCV9pg6jVN9s35P6
iOZdHeasOa978stDlvSbOsSyGzNVqh/Q/KtD9tN5I/d8v8+SvlOHj/oWY99L
3qd5WAff/ugXEqvusaT/1CFisddRZXNfmo91EE5SPF1x5y5L+lAdrp+N8WjI
vUPzsg4OsUpfpcTvsKQf1WGXtaqzxg4fmp91YNfct1vt582SvlSH6NELLuV2
36Z5Wgfdzf5xpZq3WdKf6iAdtdpG0f8Wzdc6XBHevc9H8BbtU3UoNXph+ufQ
TZq3dThcdjhoUb4X7Vd1sB43zU5kjRfN38H7W2Cx+eibG7Rv1aHN9EC4stIN
msd1MBlR6Gm27TrtX3UI9uTbBm67RvO5DtAb7VRn6En7WB0WPfP9UWZxleZ1
HSabuUzWc7pC+1kd5Ax39Ux4fJnmdx3WurEmJcmXaF+rg1uZuIB1jwfN87rB
PBUXD5PzoP2tDo2rmmy373On+V6Pos9ib1UfXaR9rh569pGZUo1uNO/rMdDy
cXWeshvtd/XoTbb/vszZleZ/PVovm26fUnqB9r16JGcZim5ceoF6MPjzW4tm
P/V2of2vHqf07Sv6+5ypD/XwHEhLUzrkTPtgPfJb+v3HlzhRL+pRpTB129lN
TrQf1kPR6WToQ4/z1I96LOn8HJbrco72xXpcs5w6cqObIzsc/6froSyQPDnt
ugNLPg+qR2R5jKGovz1Lnhfr4Vg/UqE49ixLPh+qR2NuSTy/0o4lz4/1qHYa
s1JKyI4lnxfVI761y2TKUluWPE/WY/vRL1/iDp+hfbMeq1WdInMDT1OP6jHj
RFDd7BYb2j/r8dx7Sbytig31qR57OdrLQ85Z0z5aj5ur3J965J+iXtXjXW5g
acPCU7Sf1qP/6DFBr8snqV+D77dK8Ll55wnaV+thLOrit9LgBPWsHiILv/6r
S7ai/bUBuzzPTlFfYUV9a8CHg6XZnD3HaZ9tgEDhnPk5epbUuwb0nXZM4+ke
o/128PdbLPdi11HqXwPCdjpH+lj8R/tuAwICxtx/ef4I9bABl0P1GzQeHab9
twE+IhZrZiZbUB8bMM9xtuaInkO0DzfAMS5V563cIeplAzxHyJ8R2n+Q9uMG
TJrefeXdY3PqZwPepgX/fcQzo325AQlMZcGFJWbU0wacTP7st+KiKe3PDWi5
vtvmSrUJ9bUBKxp8i3Q5JrRPN0A4feurfY8PUG8b0PtSbr37mAO0XzdAkjOw
wt/amPrbgJRxR/MmZO+nfbsB+hWc7tnv91GPG2A86vlppfC9tH834OrfGLP2
0D3U5wbUbh0/IPV2N+3jDZBPXRpzKMWIet0AxeLL8x9V7qL9vAHzVe79su0z
pH434Pa5f5nvZAxpX2/AmPNpq+W2GlDPG+EXu+mD44Wd1PNG8NbbPPL8uIN6
3gjTXteOGQI7qOeN4L5ZbfVDazv1vBHV0ce8ed761PNGzFcStYht1aOeN8La
wc5l3Vo96nkjNo7fK6jvr0s9b8T+S7EO70brUs8bca317NdNVtuo542Q6zl5
+dOHrdTzRizY+svwzlMd6nkjnFcd2Jlzewv1fPD7bwKi065tpp43QrOcd0zp
xibqeSOMtsXmfbi3kXreiPECqvnur7Sp541YWC2koZm2gXo+OB+R16Wj27So
5404/jXH/N4kLep5I94Vi6yMXK9JPW+ETmaVd6Ljeup5I/4a5B32iltHPR+c
j2ITa96IddTzRiwzcmGubFlLPW9E+Rbn0Zsea1DPG3HH1DLu64811PPB9bpR
0bZt+xrqeSMqG0TClkVzqeeNmCR7PuTkbC71vBG5W8p/RkmDet6It5qT9S8O
MNTzJijl2ECwg0M9b4Laj6kapY3q1PMm6MQo2b1rWk09b0Jn4Br3XV2rqOdN
6ItYe95yxCrqeRM+bJuQFz59JfW8Ce9U7y6vYFZQz5sQLxT55MWh5dTzJoxo
1F9QfXcZ9bwJSYI2f5fnLaWeN+Gp7+HNtuJLqedNEG1I5BzauYR63gSu7qvS
DH816nkT3s5P//ffd1XqeROUi+0MpXRUqedNmGAQvObWSxXqeRM27P+e/Fpc
hXrehMvWYRKe3xZTz5sQaaV1dVX+Iup5E362dx+VeK9EPW/CwqLZ0+JDFlLP
myDvXpXb8WwB9bwJKlvqr2mHzKeeNyF9qmn/hRhF6nkTxv/03LntiwL1vAkH
+8OMzPjzqOdNkHD/p2orMY963gT/GqF9mlx56nkTXMwCAq/YyFHPm+B467ng
mMi51PMmhB4cfcPuuyz1nIevDx1sn0GWes7DmvDGJr0bMtRzHvbha/f65jnU
cx6KhM96bVg3h3rOg0ybxaxNOrOp5zw8+tLTpDd7FvWch3bPyu51fTOo5zzY
zzYSSKibTj3nQVnq8agj+dOo5zzcflQmyMuSpp7zkPz4R19V7lTqOQ+7bigX
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
IZ534tmTicF50f4c4nknxNX2OqqI+nGI553wSHfzWWZ5n0M870Td9GhesMkd
DvG8E6ckqisM6m5xiOeD43MtCUkpu8Ehnnei68/ifOOzVznE805UP3mQlNfv
ziGed+Ld7bNyu+e6cojnnZh68nK3eJkTh3jeif70daYfJztwiOeduKLZoein
f4ZDPO+EW9RTs1ebTnGI553ISJP+a5txnEP+3tsJxx8RGjaSRziNw5534mvb
uNzXG805xPNOLM69uMFzywEO8bwT65+v+3a1bzeHeN6JuE3xEYouOznE807Y
eS4I2jlCj0M874TCBocQs4DNHOL54PzeffH3ib8mh3jeiVjfmabLUtdwiOed
MLp25kpOjDqHeN6Je2vC+0ttlnGI5104tuBHU5W9Cod43oVi5efnmmfMJ9Mn
0YWrlWb2pd9lOcTzLrz+um77z90zOMTzLkQFRl7aMjCJQzzvwi/G37/vwwQO
8bwLY6QjV5xnR3OI5124p8VdxP/8T5143oUfs1bplJr+UCeed2GLx9iTQpJd
6sTzLtibrIiPXNakTjzvwpJDZ3zjLCvViedd2Gl4Y4lwaL468bwLBc/TdB6O
SFMnnnfB7LqP3zzpj+rE8y7URh0tUzCKVCeed8FQN+dpQnigOvG8C7Z3FpnM
+HBXnXg+OD5h4eybUlfUieddWFzmbSii5aBOPO+C2tRyTTX+f+rE8y5ApfSE
XPYudeJ5F+b/CK+u/rdenXjehdlNnj+T+lTUiedduKi9f4HOrCnqxPMu3Kod
eXJu2J/VxPMuzBV851jmXbqaeN6FBff1VzAG4auJ5124c1Sm7yrfbjUZXhd2
z7F75zxGZTXxvAsTxJZduxAftop43o3//z/0/wHnDFFf
         "]]}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.5, 0, 0.5], AbsolutePointSize[6], Thickness[Tiny], 
            CircleBox[{0, 0}]},
           ImageSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQBGJGIGYC4h1yra8Dd/TZH5sUr/PzqKID1/XFBbZcy+0v
ZjLPNbsg7mAMBpvtv2nE9B/6KuDwsEpknfvDXfYyL7Y0+klzOHiABQ7avwkE
mcToADZO7qj976MgA/9C9Z2wVwCLf7U/AwH2DGDwwT4I7IAL9uo/QRpe2tuB
HXDJ/jTYPY/sNUHaNa7Y+0AstgcRVSLX7KfMBIGbUHNu2LOB3X0d6o6bUP2X
7CHCt+F8oGFAE+/a/51jdiGT+aw92Lh19+13RXzqVt1/wv4s2HkP7MvAFh2x
PwxW/9D+Ithj++wh4fXI3lMaFAC7ofofw/lLQNYtfmL/Q9y7buOT5fZgZ858
CnXvTvt+sAOe2WtP+5N0Un+bPThYWp/b8wmCwEb7arC9L+wPgd27yb4QZFzB
S6j96+zTwOAVVP1Ce3DwxLyG2j8bGp5v7FPB/G57sPPc38LVg42zfQfnQ+L3
vf0DqHsBPMT+kQ==
         "]]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.5, 0, 0.5], AbsolutePointSize[6], Thickness[Tiny], 
            CircleBox[{0, 0}]},
           ImageSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQBGJGIGYC4h1yra8Dd/TZg0g5VkMHruuLC2y5ltvfvwsC
Cg7GYLDZfiVvyS2H5bwOD6tE1rk/3GWfngYC/+w9wAIH7Zv9pF9saXxnDzZO
7ihU/KH9N42Y/kNfT9hXlIPAdfszEGBvOO1P0kn9Y/ZBYAdcsNcG87fZ24Ed
cMn+INigdfaaIO0aV+wbQKZVTbEHUyLX7MvAjCX2DGBwA8qfYv8mEGTgTfsw
kHP8qu3B3rl+G84HGgY08S5UHwMD2Lh19+H8s2DnPYDzD4PVP4TzIeH1CE3/
Yzh/Cci6xU/g/Jlg8BTO7wc74BmcDw6u1udwfjXYHy/g/EKQcQUv4XxwsKe9
gvPBwRPzGs6HhOcbOB/sPPe3cD7YONt3cD4kft/D+QBzRb9+
         "]]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.5, 0, 0.5], AbsolutePointSize[6], Thickness[Tiny], 
            CircleBox[{0, 0}]},
           ImageSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQBGJGIGYC4h1yra8Dd/TZCwmCgIUD1/XFBbZcy+2b/aRf
bGmUcjAGg832m5+Ie9dt/GP/sEpknfvDXfZ/k07qT/vzyN4DLHDQ/kDEp27V
/SfswcbJHbWvBimrWmL/TSOm/9DXE/b+IOP8uu3PQACUX20fBHbABXsGKLAD
O+ASnK8J0q5xBc4HGytyDc6HgBtw/ptAkIE34Xywd67fhvOBhgFNvAvng41b
dx/OPwt23gM4/zBY/UM4HxJej9D0P4bzl4CsW/wEzp8JBk/h/H6wA57B+eDg
an0O50PC7QWcXwgyruAlnJ8GBq/gfHDwxLyG8yHh+QbOBzvP/S2cDzbO9h2c
D4nf93A+ABcCooM=
         "]]}, {}}, {}, {}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"n=2\"","\"n=5\"","\"n=10\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
              "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Simulation\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, ImageSize -> 6}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}]}, ImageSize -> 6], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.75, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*SubsuperscriptBox[\\(f\\), SubsuperscriptBox[\\(Z\\), \
\\(1\\), \\((n)\\)], \\((\[Alpha])\\)]\\)(z)\"", TraditionalForm], None}, {
      FormBox["\"z\"", TraditionalForm], None}},
   FrameStyle->Directive[Automatic, 15, Bold],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{0}, {0.}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJw12Xc81f3/BnAVlSYlSUMyGjff0t7XaadJoSht2lvLXVLJ3Q4NsrJX9t7Z
e+/tOI7jOMdBRqmU3+G8fv7pcR74eM/reZ2T4qmrB4xGiomJtY0SExv69/+/
6qT3jT/Wq8IY8P1WsveUFi4pBfVbev7/6xNQZ188KHlYhfHL7EK8ybtzcPn4
Zn7D+P///jV4+K/3+5ukzPhXJnBHk6kJ7Ls8Vp+5o0w/fxc+n/r0xi5WZtxr
U9UY638f3eMMgtitSvT75hAOQbrHVYmxvnH/a9srj2HapnRV3VCJnmeBSIYy
8/UMJUas5oSR//xniQn2Do6TKufR85/hAh799f0wj7E2POt24ucXyFbQMjfQ
nUd/7xX+Ni6Ll5edx4ie85SvHf0GfnXrLrZUKtLft8KnjndnIuwVGY5pc4Nv
nLOGVGqK49NjijQeG1Q7CpS1lRQZtT+H/yBWHlRcNLVtLo3vPdyNXHozguYy
Zi6uVx796AN6Bla0nr0zl8b7EYOhr82+YS7D4My6oSei6vdbreOSc2n8dtCT
t5xu4K3AsP80/IXzjBMC/w0KNB97ZNR8aggsn8OoLvhxsNnTAb8elZQdujqH
5ucIwymbOJ/HzWHMENebpB7qhDUPnXUees+m+TpDSlHuVce22YzDa4YfCJ/t
mvM4LbNo/i7QKllXfuy/WYw9q55vOtHiAvmAqy+0F82i9XDFhnru3qiCmYx2
7aEnuuLNxK3az01m0vq44YZuMS9p5kzGy0utv32/uUFnasT7Q2nytF7uOPll
Uvv2K/KMf/6TFU7BHUsGlYOfzZCn9fOAoYldsmzGDEau67bInj8e+HbcXpF/
cwatpydigxZ+G5w3g3FRuFpy4l547adzbX+pHK2vF0a6PfxTaiHHGFfpfm3D
OG+svhEs82yVHK23Nx58adhnzJ/O8BuarpQPrLfuPHneZTqtvw9qwnNmvdKb
ztg19DhZX5ToMi5nT5xO++GLK4Kmw7MyZBm8oeWe5Ye7W/wHHz6Upf3xA8Mj
275zjSxjaPWK5n3BmxWD/xr3TaP9+gKTEXMmMkOmMRYefZvSt8AfvxzvFB66
Oo32zx8PtPWOZKtPY2QLnya/OAAFgXePLxHI0H4GgH/FyuVZgAzjvLXgPlYE
4sK7tP78KzK0v4HI91x5aGCJDEM4OOGUg3BF4uXXyb1Tab+DcF/NRFM8eipD
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
SrDGQMHoblYzho+7WQlMVrhIctybIepDJfj2N+qp98NmiD4+KEFFiFxf3JFm
iPpRCTL0N9+et7qZ8rMEadPuLaqRaYZoe4W/vyluBesbi/K0BFuzoxLXFLKo
P5Ug1jGto9GfRflaCpZW+bfSFyzqU6WQYV7/LnOeRXlbik3WAepuO1jUr0px
Y+ScXFNVFuVvKZL0SsSdJVjUt0pxzHLX1PEtTZTHpTAuvqKRnNZE/asU2gf/
c/zq0UT5XIr2qGXvJZ42UR8rxT6p0wY2Rk2U16UIz9y9zGh7E/WzUjyMOm30
YH4T5XcpYHB4Tc3YJuprpTg+a8wvUx6T8rwU+3Nv9R7LY1J/K4W8Yu6dp4FM
yvcyHLi8o1xgxaQ+VwaB/oYTtjeZlPdlEMsbd+WRHpP6XRliG6X1vqxhUv6X
4dVgyHWZ2Uzqe2VQmLZpVrwYkzwowy4/SeMt2Y3U/8oQsePwoufWjeRDGTxV
rXfsNGikPliGk71vnzxUaiQvymC1rc5bXdBA/bAMS5WdHmlHNZAfZVid/6qp
7VED9cUyaDm0O/TtaSBPylAy996zm3IN1B/LUHHp2ONT7HrypRwBD9TOJQfX
U58sh1hD7sy3D+rJm3IILt14nLOrnvplORr221nckKsnf8qxYpJgoiWnjvpm
OfzL9kwUj6gjj8rR3RRhwn9SR/2zHOdmbFyz7mAd+VSO2wljD3bPq6M+Wo7X
+9cnTO6pJa/KkfKh/5ZNai3103Kop+8xu/e+lvwqx+hi9ZpUo1rqq+XwrLtk
dW1VLXlWjoziAD8zyVrqrxXQlDu2QlBbQ75VoPzaF8QF1lCfrYB1l2lt66Ma
8q4CE+acmH1Dt4b6bQW2/u/9LP2FNeRfBY6eEnQ7/KmmvlsBnycV8WtKqsnD
Ckw03/5Jw7ua+m8FbihF+z6+Xw3Rx5MV2NelOEXtQDX14QooT+voV1tQTV5W
YMHDbkuLv1XUjysQKHm+VaO8ivyswMfs1h3L/auoL1fAzES/6sWTKvJU+Pzm
vpzlR6qoP1fCPmitjsayKvK1Eqb8Zr+H46uoT1fidg97jAK7krytRL/+Sa9J
CZXUryuxrd0zde/HSvK3EvJFip9rr1ZS365EQsxx0yjNSvK4EhfWDtoxlSqp
f1dijWogQ+9vBflcCSvpeTHThfMQ9fFKWLRI71EOryCvK9H1YvG2f99WUD+v
BOuLYvfMixXkt3CcLx+4SeyooL5eidddSd6rlCrI8yqkqe3RDRksJ8+rsHHx
UbEbdeXkeRUkw8TF7sWUk+dVEHu4KCD9Yzl5XoU9sQ9OHTIpJ8+rEKVjcl/9
QDl5XoVDj7fq71hSTp5X4dyuxsMewnsl8rwKCxby67YI76HI8yqopSXuVBHe
W5HnVZgZcmTEzi9l5HkVru47f/nLizLyvArdAYv79glzROR5FbqsbEYu3VVG
nlfB+NaEETqLysjzKlwI9zUMH1dGnldjecio/w7wS8nzasTLrReo55WS59Ww
0OgfsT2glDwXvl53dLX9m1LyvBohjaMlFl0rJc+rsSdoQkOvdil5Xo2joT1r
fwldEHlejdUSQe/XyJaS59WY99TeKLS/hDyvxsGXtxeeqS0hz6vhFnnacF9i
CXleDd3UhofXXEvI82q0XouXyrEoIc+rUXpLxdrgXAl5Xo0Sc5snintKyPNq
mO/IujhnSQl5XoPbbqUFWjIl5HkNVCMllkX3F5PnNUhf0KWgU19Mntcg8czJ
OcopxeR5Db60noie711Mntcg2Omfe8deFZPnNWjYuUSQeb2Y3u/U4G7veLfT
h4phNex5DdaYWKpqbCim9z81kOx8M26JUjF5XoN5t1Y3HpcsJs9r4OkauTKp
s4g8r4HEDgMPrYoi8rwGXNU38VIJReR5DdTCS2XEPIrI81qoM79umfOyiDyv
xeruH8wLwp4p8rwWxuf/97RFv4g8r0UUVyHntbC3ijyvhba61a7TC4vI81oc
mrTDzUi6iDyvhcakmXULegrJ81pYvde1bUgtJM9rsTcxJYz/vpA8r0X426pr
+40LyfNaLDrVP1lydSF5XgsL3fNl08cVkue1KC89MOrfugLyvBbSqlHNGkEF
5HktDGdeSVz3uIA8r8XtJIUGW90C8rwOZQvwdtvCAvK8DoydEnO3/sknz+sw
pf4i06Y4nzyvg/mFBfM0vPLJ8zrc2+K9es6/+eR5Hew9Rt/T18onz+uQ1yC9
lqWST57XYbbV+rKo33nkeR3K251cq4vzyPM69Mu2/9nuk0ee1yHA4s72QbM8
8rwO22+p1ozQyyPP68A0uTZjn3oeeV4HS4G+cbN4Hnleh9uZV5WT63LJ8zrw
pqVGc8JzyfN6WJSwnx98nUue18PTs2lwtHEueV6PJfEbLMSQS57XQ82v6xHk
csnzepQZnDRK/ZZDntfj7oRTji9zc8jzeqEHah9tPXPI83ok7DdM5TzMIc/r
ceP1tw93DXLI83p8uLnp0Z4VOeR5Pb4f/fPzpFQOeV6PkuaFt6P52eR5PVhL
Z13en5lNntdD5eTtQ6ru2eR5PXKqlYLWP8wmzxtgVKDbaX0kmzxvQHj4w/cq
q7PJ8wY0FByc9UMmmzxvgE3iV4nR3VnkeQNuzGsr0i7MIs8bsHPjosFq/yzy
vAFN/pOmOr/IIs8bUDJLy8rpXBbihj1vwBnZ0t+V27Po/W4Dxua51+5RycLk
4QPdgGm93ZG/R2WR5w045T9Fls3KJM8bMPvszccSKZnkeQMYTS6Wx10zyfMG
fFdE4DfzTPK8ASefjLGMO5FJnjdidlq6QzwjkzxvRI6irlnv3EzyvBG77jsl
nBqRSZ43wvqRFW80K4M8b4QiS9WWmZJBnjci77WhXqd7BnneiLT+pfFLn2aQ
542YeN7D0M84gzxvRMruL0W6OzPI80ZY2az1X74ogzxvRIvc+mfbJ2SQ540Q
k37z50VHOnneiPi7Yl4jitPJ80YUfTgwyy8snTxvhM29JQNPPqaT50ysfbWE
9eZeOt13JnYpFF/MOZpOvjOxacztVSsZ6XT/mTi53phdrJRO3jNx/XH2FKcx
6ZQHTDyd7nXalp9G/gtfn2+4m1SYRvnAxJ2S//VND0+jPsCE5ZF/7jvZpVFe
CF9bbgjVepBG/YAJiTlu6zVOpVF+MJE1/mzyxh1p1BeYeL7ifOtdtTTKEyZm
nzig1yidRv2BCRc528jrP1IpX5hIcTcJWVyfSn2CiVU9HV1yqamUN0x0uBQo
qPumUr9gYk+Xc9vFt6mUP0xMKv/yq+xWKvUN5vA6njuaSnnExJFvp7yVt6RS
/2AiUOrQ53GLUimfmFiaM912hnQq9REmikJsN2r3p1BeMbH5i9n2kMYU6idM
BE9fcGJNZgrlFxO3x7puaAtMob7CxOQ7XtZJH1Moz5jY+dh98lezFOovwvEH
B11kG6dQvgnnv+K1wZL9KdRnmsDZ5G3ttiqF8q4Jl/ZLZa6dm0L9pgn/MzUP
6R+bQvnXhPDqg2PrviVT32nCOuazJ+yaZMrDJrgmJtZKpyVT/2mCb96ynNMB
yZSPTSjoSx1b8zGZ+pDweYtatU3Mkykvm5BdEXRi6YVk6kdNMDLI7pqqk0z5
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
nzdIdw0t8yLP2xBr9MV09Fcv8rwNAY2BJ018vcjzNnT8p6Ax8M6LPG/DNddX
qU5mXuR5Gx7dTes5fN6LPG9Delupo7qOF3nehlM8CfuZ8CLP2zBJujlj3iIv
8rwNc+ZqDG6e5kWetyHUqnvOfTEv8lw4nznGIwv4nuQ5Dyzd0ZarKz3Jcx6K
FJ5bxqV4kuc8FB9oZOoFepLnPLA3Lb8xzt6TPOfBfK9gesVTT/KcB61bvkEx
1z3Jcx7qeYzpEYae5DkPCzzT1LI0PclzHmT7HhR0r/Akz3koke+oWT7Pkzzn
YUpd/pI3kzzJcx4WzpwY9PeXB3nOg8zVkuWWrR7kOQ8b4k1dlcs8yHMedhTY
lVUneZDnPDzv7g3wDPCgz395uPLu1cRn9h70/z08RJVZl5r/50GfB/Nwb8lF
5lsTD/r/Hx5+yYTJRJz0IM950HmySrtrnwd5zkNt4M/bm9Z7kOc83HVSP+uz
0IM858Eua80oleke5DkPI79GqkWJe5DnPBhnXkk/1u1OnvMQ+MQwaCbTnTwX
rt+HoDxBvjt5zsO2TSmDZXHu5DkP66cr/VPs606e83Ds41sNlq07ec7HrPLe
vjGW7uQ5HwULrh7ZbOJOnvOxvEBzm/Upd/KcD1ebvx97tdzJcz44D1YsvwR3
8pyPn/fTxPrV3clzPmZPDGLaznInz/kYyVWJ3j3enTznQy/Y8uLUX27kOR/y
n480dnDdyHM+AjSO9NdXupHnfBhUnXVgZriR53xke74N+B7hRp7zUf13vMxc
TzfynI+NuzeFH33vRp7zke+VeNP/iRt5zsfOdxtWT77pRp7zwfNzbbU45Uae
82F+sP/sxANu5LlwPjfufvbZ5Eae83Ff4bGJnoYbec5H91HnfFlFN/Kcj45s
M+s2KTfynI9FBn+8CsTcyHPhfCbM6kvvciXP+XjsKn66kOlKnvNRpTO2ilfk
Sp7zseT953Vyya7kOR8yMedvHQpxJc/50ElRu+zj6kqe8zF3Uvm48Tau5Hk7
imVurXz42JU8b8ds5W1V4jddyfN2NMm7VzmcdiXP2/FAZcrcrTqu5Hk7PE3X
2v7Z6kqet6NKrk01a4Ured6OzRaTo91VXcnzdqg8TV1mNd2VPG9HA2fjk9dj
Xcnzdmitanzr8NOFPG9Hi6XKllieC3nejjELIy3bal3I83ZI3jq8dWG+C3ne
jsT/vhvdS3Qhz9txQMKpvDrIhTxvR3qt6YNdri7keTtqJZp25Nq4kOftuL9v
s8JRCxfyvB12Mss6Bm65kOftMJ18/nPAWRfyvB0fp8bNvqLvQp63o6Byrs7G
3S7keTuWxoWqz9ngQp63Y8ZL3w8TF7uQ5+2o0Dx2Z4KiC3nejoQ+zUT5qS7k
eTt8tCT0Vku4kOfC9d1vrZPT8Zk8b4fhmsq9m0s/k+fteFadfbUq6jN53o68
O+9tXjl+Js+F+xX7+c2xR5/JcwGq1lmv32f8mTwXwHj27ltHdn8mzwU48Jkv
bbnkM3kugHZkHj9/2mfyXAB59yd1S387k+cCpL9gJoQznclz4evJHecPZjiT
5wJ48btiJ/k7k+fC7z8/+5Jj7UyeC+DhJhlZc8eZPBdgbFXmNL6hM3kuQJd2
7tPpW53JcwFUjt5qOr7ImTwXIEX8uHialDN5Lhx/3OGcLT+cyHMBfLrOT26s
dyLPBXgWVRT0Ic2JPBdgovGIZ2e/OJHnAjiv8jLRsXEizwWo6XQ+cPSeE3ku
APeB2KDZCSfyXIBiF5lD8TucyHMBtF7pr5ZZ7ESeC6D35pG5pawTeS7A+Ygb
E6f+dSTPBXhwZ3tCTIsjeS7AR33NK6b5juS5cHx2v/7qRDiS5wKYFI7fp+nk
SJ4LwPA6sfbQU0fyXICftye5m112JM87MOX3kbNfdR3J8w48/Z5kPGOjI3ne
AVZzi/krVUfyvAOLXN0/yE12JM87sGD2qKcJPxzI8w48kNiw+F+mA3negW23
Yky0sx3I8w5oeUxeyQh1IM870P1RQmeHgwN53oFXBW+DjC0cyPMOmP0qWuh8
2YE870CZ7wwPgZ4Ded6BG39aB3UYDuS5cLwGrXPKFjqQ5x3wV+hiXZjqQJ53
YJfumP/N+GNPnnfA3ugYq4FjT553oK/wACuuyJ4870BWw2Wp4Fh78rwD0YZn
9sd52NP/93bAQEv2cf0be7CHPe+Ake+bl7L37MnzDtiMHLXf+LQ9ed6BIp3S
oLy99uS5cP1CnltrrrYnzzug8qu6sm6ePXneAUcnV2PLifbkuXD997cqbu//
RJ53QC61RjCz+RN53oGA82WBYwo+kecd2PqPrqZkzCfyvBMflUe7zfX4RJ53
Ivh0tNPet5/I804YeJ5RtDL9RJ53om/KP1O4Rp/I8060iB3U1dX+RJ53wjhg
V1Hl+k/keSfKB73OXV3wiTzvhM1OJfFZMp/I806sGOH6rH7QjjzvhObr+XVh
fDvyvBPPfjeznSvtyPNOXMpc8Nw51Y4878Qxh8tBoUF25HknVk7dv7HWwY48
7xS+f3ozS+6ZHXneiafe0hrnTezI806MtGKdKjhhR553wn794k879tqR550Y
e1szrmyNHXneCd4br+BbqnbkeSfuLWw8sWiqHXneiVt/AsO6B23Jc+F8nXut
CtptyfNOGG4JYSZU25LnnTB5NfZlUoYted6JJXsYdyvCbMnzTsTuS7IadLEl
z4XPnzclYd0bW/K8E9+YzJYX/9qS552Y3d/f037OljwXjrdnR9FJPVvyvAsX
dtadbttii/8DtM8flQ==
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          Line[CompressedData["
1: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
3HpXjjxvxp4GH9elc+TI82Z4x1otnlgmS543o0p2s5rdeVnyvBkHIge7TVOX
Jc+bYbFmmNTmXBnyvBlvn/nJt5yRIc9F96f29PqyyTLkeQsUNxqfUi2UJs9b
cGngs2WfnaTJ8xZkXr7sHTFLmjxvQfk3HP7KG02et0C3e2DUCbfR5HkLHn99
d1PfeDR53gLVETIqp7pHkectqGgtFefvG0Wet+CEs/aqpJKR5HkLLohHR/1e
NpI8b8GZCZUTnaNHkOctEHqMctwyawR53gKtkJvfDwdKkectiFoQFJegKkWe
t2D5ICcYeQ8nz1uwMGTTz/YJw8nzFmy8pO/8/tkw8lw0P1nHgEcqw8jzFpQ9
XLPw2ouh5HkL0r8tNLwwfSh53oLSx0kFpyKHkOct4AoaJ+8zHEKetyDR/sO9
pbmDyfMW+Ht1O4/YMZg8b4H9j4B7kQJJ8rwFyYY3zPWdJMnzFhwU1r29KydJ
nrdgi2yHzdugQeR5C/R/uVxxMxpEnrdAb3zXWL3qgeR5C6oj5NfePz2QPG9F
5b2Tp57IDSTPW+Fk97ZjZfgA8rwVxdFq033XDyDPW/Ei+HGma5cEed6KBe+r
Dis+kSDPW/FkzbG62YwEed4KoeL874WN4uR5K6QNR3j+ui1OnrdisZoT74mu
OHneihHG9rxwnhh53grnK615uCtGnreia/fxn3qLxMjzVkzbbrJ/etk/hvW8
Fa6nFnQHz//HsJ63YnzIrYgGz16G9bwVEwMGFqYO6GVYz1vRcyTr/Uq7vwzr
eSvsdPParCv+Y1jPReP9paMmbfwfw3reirdXU/UMPvYwrOetKPTeo1k/rYdh
PW9F26iT8j/9uhnW81ZYfrNcfVipm2E9b8WA75IGSx79YVjPWzHm/swTB2X/
MKznovlvkH5V5fqbYT1vhfu/9PBbcr8Z1vNW3PCsuHvM/RfDet6KkcfebLo2
8RfDet6K80UKJokvfjKs561QSapNHjv7J8N6Lpr/dj2TS5+6GNZzPtqGbTn5
e2UXw3rOx5QLfwcfq/7BsJ7zsXPtr9rmQz8Y1nM+es3f/1w94AfDes7H6rxS
G78n3xnWcz4K06KPVMz+zrCe85EVIGPZkfWNYT3nI7Pl5Jsi628M6zkfW579
arw26BvDes7HsQOfwsQDvjKs53woSLjX6C/7yrCe87FpntdyLf4XhvWcD3e7
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
//9D/x/Be2bf
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          Line[CompressedData["
1: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
7W60z0TqdwnwI2r+yvETaV8vwRGXj6k97uLU81JYB3OaE0eLU89L8WZR8ZzJ
kmLU81LMcEv13TFnAvW8FAtyL2wYs2w89bwU35/LzuveNo56XorYzZ1CJadE
qeelaLDVvOj6UIR6XgrX430jkrKFqeel6P4y12XfKGHqeSnK11qEy60ZSz0v
hYV8QnrjhTHU81J0LfX3Op41mnpeih9lN9bfmTaael6KA9tlvJQthajnpVC1
N3AZ/3kU9bwUzz4cOjdGfhT1vAyRK4uWf3cfST0vw7es1kdhXYLU8zI0MG51
4nsEqedlMLfnGnzLGkE9L8POrfUOyzVGUM/LEJMo2/YmVoB6XoaSJ+836KwS
oJ6XwYVrdyfZ5h9LPC9Dnsl/OgFOAyzxvAz7z8mJ99/8yxLPy6D358rU2y/7
WeJ5GWboWZxWy+5jiedliF/1sv/xtz8s8bwMo/U4S4Nk/7DE8zIcODtfZ5LB
b5Z4Xgbjr7snR3n9Yonn5dj3IIRnmP+TJZ6XozD3wL3cqT9Z4nk5lunLuHSa
/WCJ5+Wwl1Q1vPj2O0s8L8eCi/OWHRv/nSWel4N3mu9qd/gbSzwvx9jtc/td
MnpZ8rxTjlWipZ4mKr3sjWHPyzHr+bUDX+99ZcnzTzmcRz5KHy/ylSWel0P/
S9kqL8celnhejj4vD9boezdLPC/HpPEBp7ROdLPE83Js0476ZVXfxRLPy5Ep
n/59elsnSzyvgLaG2ET93x0s8bwCFy8W7q4Q62CJ5xUQHctG2y/is8TzCvAd
ylP6ddtZ4nkFjhwJrlJ0bGOJ5xW4t8HzT2ZoK0s8r0CPwOqI17wWlnhegU3q
drJhci0s8bwCqjMaO69ZNLPE8wp4yf1ZIB/JY4nnFdgj7Ku/fgSPJZ4PXv9o
nkbyjiaWeF6BYy5S8rZhjSyJqwqIx320XDmhkSWeV0Aqujmv6kQDSzyvwP6Y
O0s1yutZ4nklDs5igrha9SzxvBJj11jvjoqpY4nnlZikN/W+4+I6lnheidSa
+5/OBNeyxPNKOL15Nv/CvFqWeD748zcdJwR0a1jieSVctIUu+e2pZonnlcjU
fS0fcryKJZ5XYryBWyDvUiVLPK+E4Kz5itNDKljieSUeZN1wligoZ4nnlXB8
46Z0d0Q5SzyvhO76Z4zd8jKWeF6JKXGZO11PlLLE80rM1Sm8dymyhCWeVyLF
98sTo9/FLPG8Clt0LxzLWF/MEs+r8H620b5Xd4pY4nkVNrf5KJZ1FrLE8yps
e8JPl9tUyBLPq+DRY3Le4mUBSzyvwvSlV2MdJQpY4nkV8qcLz4RjPks8r4Jl
kIG5Bz+PJZ4Pfv+v7fhy4zyWeF6Fm92X5iuU5rLE8yoUZPe4r9qeyxLPq2Au
e2bk/eAclnhehdf6guM9wr+wxPMqnK917vz7KZslnldh2dM/TGJxFks8r4bE
g0UGD75lssTzarjVxG3ZIZ3JEs+r0T32Y030ugyWeF6NgKC3FjdOp7PE82ro
mf8rfBmaxhLPqxEdetm7kv+ZJZ5XozBO9Ha3ymeWeF6NQ6PsFWLPprKxw55X
46j097HiGSksed6txg31ng3Js1JYseENXY2TGVnrQm2TWeJ5NcoFnj8ILEli
iefV0DK9O/+CehJL4rkaDkekv815msgSz6vh869igdHERJZ4Xo062xxp0QsJ
JK5EavCy8LTMxN/xLPG8BkJCzqEbT8WzxPMaCOzVNF3c8Iklntdg5kNz5dDm
jyzxvAZ3HvRdKOn9wBLPa7Bu4Ye/lmM+sMTzGki7TxJSl41jiec1KHJYHD9y
XSxLPK9B7XtroVtH37PE8xpk/zih8+b+O5Z4XgPZxzNClubFsMTzwfF2uEbV
j4thiec1uKXd4HZNJ5olw6uB+8DIIGGftyzxfHD8FuNFFRqiWOJ5LUZ/figQ
uyyKnvdaNI5jFe97vmGJ77Uo+DvvyKO21/T812KdzE7+g82vWeJ9LWaJdo+1
eh1J86AWJg861n2dFckS/2vxH3+i1r9rETQfajH+8bycUyMjWNIHamHp6PBq
kUM4zYtamFntsZnyNYwl/aAW5j6ajyt6Q2l+1EJcyt/+8N9XLOkLtQiqPX7d
dcIrmie1cAxcvuTrvJcs6Q+1SDnW4GqnGULzpRb5wlONGo6+YEmfqMXvqga1
P77Pad7UYlpBg9Ll7GCW9Ita6Gik/jAeE0zzpxZCWcrJW7SCWNI3ahE5d2CN
jOczmke1kOxpuvyqNJAl/aMWh/9azEidH0jzqRZn/8hkwekpS/pILT5pmn7o
rgigeVWL+3LzDMI5ASzpJ7Ww6NFabeDvT/OrFj5/JFZ+GufPkr5SC01/ce0k
+yc0z2ox/a6sK7r8WNJfhl5fKzXxkB/Nt8Hx3jhtpZT6mCV9pg6jVN9s35P6
iOZdHeasOa978stDlvSbOsSyGzNVqh/Q/KtD9tN5I/d8v8+SvlOHj/oWY99L
3qd5WAff/ugXEqvusaT/1CFisddRZXNfmo91EE5SPF1x5y5L+lAdrp+N8WjI
vUPzsg4OsUpfpcTvsKQf1WGXtaqzxg4fmp91YNfct1vt582SvlSH6NELLuV2
36Z5Wgfdzf5xpZq3WdKf6iAdtdpG0f8Wzdc6XBHevc9H8BbtU3UoNXph+ufQ
TZq3dThcdjhoUb4X7Vd1sB43zU5kjRfN38H7W2Cx+eibG7Rv1aHN9EC4stIN
msd1MBlR6Gm27TrtX3UI9uTbBm67RvO5DtAb7VRn6En7WB0WPfP9UWZxleZ1
HSabuUzWc7pC+1kd5Ax39Ux4fJnmdx3WurEmJcmXaF+rg1uZuIB1jwfN87rB
PBUXD5PzoP2tDo2rmmy373On+V6Pos9ib1UfXaR9rh569pGZUo1uNO/rMdDy
cXWeshvtd/XoTbb/vszZleZ/PVovm26fUnqB9r16JGcZim5ceoF6MPjzW4tm
P/V2of2vHqf07Sv6+5ypD/XwHEhLUzrkTPtgPfJb+v3HlzhRL+pRpTB129lN
TrQf1kPR6WToQ4/z1I96LOn8HJbrco72xXpcs5w6cqObIzsc/6froSyQPDnt
ugNLPg+qR2R5jKGovz1Lnhfr4Vg/UqE49ixLPh+qR2NuSTy/0o4lz4/1qHYa
s1JKyI4lnxfVI761y2TKUluWPE/WY/vRL1/iDp+hfbMeq1WdInMDT1OP6jHj
RFDd7BYb2j/r8dx7Sbytig31qR57OdrLQ85Z0z5aj5ur3J965J+iXtXjXW5g
acPCU7Sf1qP/6DFBr8snqV+D77dK8Ll55wnaV+thLOrit9LgBPWsHiILv/6r
S7ai/bUBuzzPTlFfYUV9a8CHg6XZnD3HaZ9tgEDhnPk5epbUuwb0nXZM4+ke
o/128PdbLPdi11HqXwPCdjpH+lj8R/tuAwICxtx/ef4I9bABl0P1GzQeHab9
twE+IhZrZiZbUB8bMM9xtuaInkO0DzfAMS5V563cIeplAzxHyJ8R2n+Q9uMG
TJrefeXdY3PqZwPepgX/fcQzo325AQlMZcGFJWbU0wacTP7st+KiKe3PDWi5
vtvmSrUJ9bUBKxp8i3Q5JrRPN0A4feurfY8PUG8b0PtSbr37mAO0XzdAkjOw
wt/amPrbgJRxR/MmZO+nfbsB+hWc7tnv91GPG2A86vlppfC9tH834OrfGLP2
0D3U5wbUbh0/IPV2N+3jDZBPXRpzKMWIet0AxeLL8x9V7qL9vAHzVe79su0z
pH434Pa5f5nvZAxpX2/AmPNpq+W2GlDPG+EXu+mD44Wd1PNG8NbbPPL8uIN6
3gjTXteOGQI7qOeN4L5ZbfVDazv1vBHV0ce8ed761PNGzFcStYht1aOeN8La
wc5l3Vo96nkjNo7fK6jvr0s9b8T+S7EO70brUs8bca317NdNVtuo542Q6zl5
+dOHrdTzRizY+svwzlMd6nkjnFcd2Jlzewv1fPD7bwKi065tpp43QrOcd0zp
xibqeSOMtsXmfbi3kXreiPECqvnur7Sp541YWC2koZm2gXo+OB+R16Wj27So
5404/jXH/N4kLep5I94Vi6yMXK9JPW+ETmaVd6Ljeup5I/4a5B32iltHPR+c
j2ITa96IddTzRiwzcmGubFlLPW9E+Rbn0Zsea1DPG3HH1DLu64811PPB9bpR
0bZt+xrqeSMqG0TClkVzqeeNmCR7PuTkbC71vBG5W8p/RkmDet6It5qT9S8O
MNTzJijl2ECwg0M9b4Laj6kapY3q1PMm6MQo2b1rWk09b0Jn4Br3XV2rqOdN
6ItYe95yxCrqeRM+bJuQFz59JfW8Ce9U7y6vYFZQz5sQLxT55MWh5dTzJoxo
1F9QfXcZ9bwJSYI2f5fnLaWeN+Gp7+HNtuJLqedNEG1I5BzauYR63gSu7qvS
DH816nkT3s5P//ffd1XqeROUi+0MpXRUqedNmGAQvObWSxXqeRM27P+e/Fpc
hXrehMvWYRKe3xZTz5sQaaV1dVX+Iup5E362dx+VeK9EPW/CwqLZ0+JDFlLP
myDvXpXb8WwB9bwJKlvqr2mHzKeeNyF9qmn/hRhF6nkTxv/03LntiwL1vAkH
+8OMzPjzqOdNkHD/p2orMY963gT/GqF9mlx56nkTXMwCAq/YyFHPm+B467ng
mMi51PMmhB4cfcPuuyz1nIevDx1sn0GWes7DmvDGJr0bMtRzHvbha/f65jnU
cx6KhM96bVg3h3rOg0ybxaxNOrOp5zw8+tLTpDd7FvWch3bPyu51fTOo5zzY
zzYSSKibTj3nQVnq8agj+dOo5zzcflQmyMuSpp7zkPz4R19V7lTqOQ+7bigX
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
IZ534tmTicF50f4c4nknxNX2OqqI+nGI553wSHfzWWZ5n0M870Td9GhesMkd
DvG8E6ckqisM6m5xiOeD43MtCUkpu8Ehnnei68/ifOOzVznE805UP3mQlNfv
ziGed+Ld7bNyu+e6cojnnZh68nK3eJkTh3jeif70daYfJztwiOeduKLZoein
f4ZDPO+EW9RTs1ebTnGI553ISJP+a5txnEP+3tsJxx8RGjaSRziNw5534mvb
uNzXG805xPNOLM69uMFzywEO8bwT65+v+3a1bzeHeN6JuE3xEYouOznE807Y
eS4I2jlCj0M874TCBocQs4DNHOL54PzeffH3ib8mh3jeiVjfmabLUtdwiOed
MLp25kpOjDqHeN6Je2vC+0ttlnGI5104tuBHU5W9Cod43oVi5efnmmfMJ9Mn
0YWrlWb2pd9lOcTzLrz+um77z90zOMTzLkQFRl7aMjCJQzzvwi/G37/vwwQO
8bwLY6QjV5xnR3OI5124p8VdxP/8T5143oUfs1bplJr+UCeed2GLx9iTQpJd
6sTzLtibrIiPXNakTjzvwpJDZ3zjLCvViedd2Gl4Y4lwaL468bwLBc/TdB6O
SFMnnnfB7LqP3zzpj+rE8y7URh0tUzCKVCeed8FQN+dpQnigOvG8C7Z3FpnM
+HBXnXg+OD5h4eybUlfUieddWFzmbSii5aBOPO+C2tRyTTX+f+rE8y5ApfSE
XPYudeJ5F+b/CK+u/rdenXjehdlNnj+T+lTUiedduKi9f4HOrCnqxPMu3Kod
eXJu2J/VxPMuzBV851jmXbqaeN6FBff1VzAG4auJ5124c1Sm7yrfbjUZXhd2
z7F75zxGZTXxvAsTxJZduxAftop43o3//z/0/wHnDFFf
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Graphics[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               AbsolutePointSize[6]], 
              RGBColor[0.5, 0, 0.5], 
              Thickness[Tiny], 
              Circle[{0, 0}]}, ImageSize -> 6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQBGJGIGYC4h1yra8Dd/TZH5sUr/PzqKID1/XFBbZcy+0v
ZjLPNbsg7mAMBpvtv2nE9B/6KuDwsEpknfvDXfYyL7Y0+klzOHiABQ7avwkE
mcToADZO7qj976MgA/9C9Z2wVwCLf7U/AwH2DGDwwT4I7IAL9uo/QRpe2tuB
HXDJ/jTYPY/sNUHaNa7Y+0AstgcRVSLX7KfMBIGbUHNu2LOB3X0d6o6bUP2X
7CHCt+F8oGFAE+/a/51jdiGT+aw92Lh19+13RXzqVt1/wv4s2HkP7MvAFh2x
PwxW/9D+Ithj++wh4fXI3lMaFAC7ofofw/lLQNYtfmL/Q9y7buOT5fZgZ858
CnXvTvt+sAOe2WtP+5N0Un+bPThYWp/b8wmCwEb7arC9L+wPgd27yb4QZFzB
S6j96+zTwOAVVP1Ce3DwxLyG2j8bGp5v7FPB/G57sPPc38LVg42zfQfnQ+L3
vf0DqHsBPMT+kQ==
           "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Graphics[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               AbsolutePointSize[6]], 
              RGBColor[0.5, 0, 0.5], 
              Thickness[Tiny], 
              Circle[{0, 0}]}, ImageSize -> 6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQBGJGIGYC4h1yra8Dd/TZg0g5VkMHruuLC2y5ltvfvwsC
Cg7GYLDZfiVvyS2H5bwOD6tE1rk/3GWfngYC/+w9wAIH7Zv9pF9saXxnDzZO
7ihU/KH9N42Y/kNfT9hXlIPAdfszEGBvOO1P0kn9Y/ZBYAdcsNcG87fZ24Ed
cMn+INigdfaaIO0aV+wbQKZVTbEHUyLX7MvAjCX2DGBwA8qfYv8mEGTgTfsw
kHP8qu3B3rl+G84HGgY08S5UHwMD2Lh19+H8s2DnPYDzD4PVP4TzIeH1CE3/
Yzh/Cci6xU/g/Jlg8BTO7wc74BmcDw6u1udwfjXYHy/g/EKQcQUv4XxwsKe9
gvPBwRPzGs6HhOcbOB/sPPe3cD7YONt3cD4kft/D+QBzRb9+
           "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Graphics[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               AbsolutePointSize[6]], 
              RGBColor[0.5, 0, 0.5], 
              Thickness[Tiny], 
              Circle[{0, 0}]}, ImageSize -> 6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQBGJGIGYC4h1yra8Dd/TZCwmCgIUD1/XFBbZcy+2b/aRf
bGmUcjAGg832m5+Ie9dt/GP/sEpknfvDXfZ/k07qT/vzyN4DLHDQ/kDEp27V
/SfswcbJHbWvBimrWmL/TSOm/9DXE/b+IOP8uu3PQACUX20fBHbABXsGKLAD
O+ASnK8J0q5xBc4HGytyDc6HgBtw/ptAkIE34Xywd67fhvOBhgFNvAvng41b
dx/OPwt23gM4/zBY/UM4HxJej9D0P4bzl4CsW/wEzp8JBk/h/H6wA57B+eDg
an0O50PC7QWcXwgyruAlnJ8GBq/gfHDwxLyG8yHh+QbOBzvP/S2cDzbO9h2c
D4nf93A+ABcCooM=
           "]]}, {}}}, {}, {}, {{}, {}}}}, {
     PlotRange -> {{0, 1}, All}, PlotRangePadding -> {{0}, {0.}}, ImageSize -> 
      Large, Frame -> True, 
      FrameLabel -> {{
        "\!\(\*SubsuperscriptBox[\(f\), SubsuperscriptBox[\(Z\), \(1\), \((n)\
\)], \((\[Alpha])\)]\)(z)", None}, {"z", None}}, FrameStyle -> 
      Directive[Automatic, 15, Bold], DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 1.}, {0, 10.97728}}, PlotRangeClipping -> True, 
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 10.97728}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {"Simulation"}, LegendMarkers -> {{
           Graphics[{
             RGBColor[0.5, 0, 0.5], 
             Thickness[Tiny], 
             Circle[{0, 0}]}, ImageSize -> 6], Automatic}}, Joined -> {False},
         LabelStyle -> {}, LegendLayout -> "Column"]]], {0.75, 0.75}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8379482650722823`*^9, 3.837948293373068*^9}, {
   3.837948391736893*^9, 3.8379484454560585`*^9}, {3.8379484872341166`*^9, 
   3.837948546108755*^9}, {3.837948650892036*^9, 3.837948667790571*^9}, {
   3.8395829339737115`*^9, 3.8395829458744836`*^9}, 3.8395829952276583`*^9, 
   3.8395837519240255`*^9, {3.8395894324339523`*^9, 3.8395894416541443`*^9}, 
   3.8395916988735385`*^9, {3.839652287786399*^9, 3.839652297837726*^9}, 
   3.839652368007416*^9, {3.8396526822743807`*^9, 3.8396526898040934`*^9}, {
   3.839666202930049*^9, 3.839666209463173*^9}, 3.839666374804015*^9, {
   3.839666406148368*^9, 3.839666422311976*^9}, 3.8396665762625675`*^9, {
   3.839666621365868*^9, 3.839666705420499*^9}, {3.839666736770328*^9, 
   3.839666744002656*^9}, {3.8396671585769157`*^9, 3.839667266304861*^9}, 
   3.839667370386825*^9, 3.839667423805046*^9, 3.839667465788602*^9, 
   3.8401806466062946`*^9, 3.8401808354400415`*^9, {3.8401818015735435`*^9, 
   3.8401818150521317`*^9}, {3.840181868627251*^9, 3.840181892556179*^9}, {
   3.840181923327503*^9, 3.8401819440521154`*^9}, 3.8401826327112436`*^9, {
   3.8401826995396233`*^9, 3.840182709817458*^9}, 3.840183258222241*^9, 
   3.840183290324195*^9, {3.8401833333034096`*^9, 3.8401833734505806`*^9}, {
   3.840183407441673*^9, 3.8401834287270403`*^9}, {3.8401835208583884`*^9, 
   3.8401835424698524`*^9}, 3.8401835854587736`*^9, 3.8401836298766117`*^9, 
   3.840183671415454*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 99, 1, 86, "Section"],
Cell[682, 25, 24316, 377, 518, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25035, 407, 209, 3, 86, "Section"],
Cell[CellGroupData[{
Cell[25269, 414, 9710, 179, 494, "Input"],
Cell[CellGroupData[{
Cell[35004, 597, 1694, 26, 28, "Print"],
Cell[36701, 625, 1740, 29, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38502, 661, 110, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[38637, 666, 104810, 2691, 7421, "Input"],
Cell[143450, 3359, 3055, 45, 125, "Message"],
Cell[146508, 3406, 1908, 30, 100, "Message"],
Cell[148419, 3438, 3055, 45, 125, "Message"],
Cell[151477, 3485, 2261, 37, 139, "Message"],
Cell[153741, 3524, 369, 8, 29, "Message"],
Cell[154113, 3534, 2261, 37, 139, "Message"],
Cell[156377, 3573, 1906, 30, 100, "Message"],
Cell[158286, 3605, 369, 8, 29, "Message"],
Cell[158658, 3615, 2394, 36, 133, "Message"],
Cell[161055, 3653, 2396, 36, 133, "Message"],
Cell[163454, 3691, 2396, 36, 133, "Message"],
Cell[165853, 3729, 371, 8, 29, "Message"],
Cell[166227, 3739, 712, 13, 54, "Message"],
Cell[166942, 3754, 710, 13, 54, "Message"],
Cell[167655, 3769, 709, 13, 54, "Message"],
Cell[168367, 3784, 708, 13, 54, "Message"],
Cell[169078, 3799, 368, 8, 29, "Message"],
Cell[169449, 3809, 395, 8, 29, "Message"],
Cell[169847, 3819, 709, 13, 54, "Message"],
Cell[170559, 3834, 711, 13, 54, "Message"],
Cell[171273, 3849, 711, 13, 54, "Message"],
Cell[171987, 3864, 368, 8, 29, "Message"],
Cell[172358, 3874, 395, 8, 29, "Message"],
Cell[172756, 3884, 395, 8, 29, "Message"],
Cell[173154, 3894, 393, 8, 29, "Message"],
Cell[173550, 3904, 372, 8, 29, "Message"],
Cell[CellGroupData[{
Cell[173947, 3916, 410, 8, 28, "Print"],
Cell[174360, 3926, 466, 12, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174887, 3945, 98, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[175010, 3950, 3285, 80, 326, "Input"],
Cell[CellGroupData[{
Cell[178320, 4034, 2658, 36, 121, "Print"],
Cell[180981, 4072, 2658, 36, 121, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183700, 4115, 177, 2, 86, "Section"],
Cell[183880, 4119, 13179, 245, 921, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197096, 4369, 94, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[197215, 4374, 20089, 410, 1300, "Input"],
Cell[217307, 4786, 121039, 2116, 465, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

