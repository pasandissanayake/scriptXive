(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    189113,       3508]
NotebookOptionsPosition[    187707,       3452]
NotebookOutlinePosition[    188109,       3469]
CellTagsIndexPosition[    188066,       3466]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Parameters", "Section",
 CellChangeTimes->{{3.8339375666990633`*^9, 3.8339375777803793`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleSizeArray", "=", 
   RowBox[{"{", 
    RowBox[{"10000", ",", "10000", ",", "10000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nArray", "=", 
   RowBox[{"{", 
    RowBox[{"25", ",", "25", ",", "30"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaArray", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaArray", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"muArray", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorArray", "=", 
     RowBox[{"RandomColor", "[", "length", "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorArray", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Blue", ",", "Black"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "rootDir", "=", 
    "\"\<D:\\\\research\\\\eigenvectors\\\\simulations\\\\data\\\\asymptotic\>\
\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedDataFile", "=", "\"\<simulation_3.mx\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"analyticalDataFile", "=", "\"\<analytical_min_3.mx\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "sampleSizeArray", "]"}], ",", 
        RowBox[{"Length", "[", "nArray", "]"}], ",", 
        RowBox[{"Length", "[", "alphaArray", "]"}], ",", 
        RowBox[{"Length", "[", "thetaArray", "]"}], ",", 
        RowBox[{"Length", "[", "muArray", "]"}]}], "}"}], "]"}], "<", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "sampleSizeArray", "]"}], ",", 
        RowBox[{"Length", "[", "nArray", "]"}], ",", 
        RowBox[{"Length", "[", "alphaArray", "]"}], ",", 
        RowBox[{"Length", "[", "thetaArray", "]"}], ",", 
        RowBox[{"Length", "[", "muArray", "]"}]}], "}"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Missing parameters!!\>\"", "]"}], ";", 
     RowBox[{"length", "=", "0"}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"length", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "sampleSizeArray", "]"}], ",", 
         RowBox[{"Length", "[", "nArray", "]"}], ",", 
         RowBox[{"Length", "[", "alphaArray", "]"}], ",", 
         RowBox[{"Length", "[", "thetaArray", "]"}]}], "}"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedDataFile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"rootDir", ",", "simulatedDataFile"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analyticalDataFile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"rootDir", ",", "analyticalDataFile"}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7927166418073235`*^9, 3.79271669778209*^9}, {
   3.792716961044549*^9, 3.7927169612165937`*^9}, 3.792719767535927*^9, {
   3.7927199468206997`*^9, 3.7927199808400965`*^9}, {3.792720568981498*^9, 
   3.792720569387833*^9}, {3.792720699448744*^9, 3.792720719372717*^9}, {
   3.7927208890000043`*^9, 3.792720897501096*^9}, {3.792721997715086*^9, 
   3.792721998668316*^9}, 3.792723816544462*^9, {3.7927257000891337`*^9, 
   3.7927257004642825`*^9}, {3.7927258733733215`*^9, 
   3.7927259122055902`*^9}, {3.792726051314195*^9, 3.792726051657984*^9}, {
   3.792726102350894*^9, 3.7927261937981186`*^9}, 3.7927263429234*^9, 
   3.7927263740359964`*^9, 3.7927269821746883`*^9, 3.792727037211811*^9, {
   3.7927272275604053`*^9, 3.792727228419884*^9}, {3.79272744927137*^9, 
   3.7927274505529594`*^9}, 3.7927275357337246`*^9, 3.792727675201803*^9, {
   3.7927277645708284`*^9, 3.7927277992620306`*^9}, {3.792727958794668*^9, 
   3.7927279701552563`*^9}, 3.792728703639542*^9, 3.7927550479824653`*^9, {
   3.7927550804380302`*^9, 3.7927550913610954`*^9}, 3.792756020163459*^9, 
   3.7927561862749124`*^9, 3.7927596927288623`*^9, 3.792759895172324*^9, {
   3.792760153746978*^9, 3.7927601547626953`*^9}, {3.7927602234575224`*^9, 
   3.792760242037445*^9}, {3.7927951889009857`*^9, 3.7927951894479246`*^9}, {
   3.792795305069623*^9, 3.7927953058665953`*^9}, {3.7931442040325136`*^9, 
   3.7931442053607864`*^9}, {3.7931447343516445`*^9, 3.793144734820448*^9}, {
   3.793145186243561*^9, 3.7931451866813116`*^9}, {3.7931452434998693`*^9, 
   3.7931452441562057`*^9}, 3.79314576414919*^9, 3.7931651996750216`*^9, 
   3.79316524445498*^9, {3.7931654505984535`*^9, 3.79316545098392*^9}, {
   3.7931655104364457`*^9, 3.7931655391432495`*^9}, {3.7931660723868976`*^9, 
   3.7931660771587005`*^9}, {3.7931661925506516`*^9, 3.793166192904893*^9}, {
   3.7931674472206125`*^9, 3.793167447900176*^9}, {3.7931675314172697`*^9, 
   3.793167533304762*^9}, 3.7931677062758813`*^9, {3.793167988509886*^9, 
   3.7931679886945114`*^9}, 3.7931696897134995`*^9, 3.793169780409862*^9, {
   3.7931701759493*^9, 3.7931701761655493`*^9}, 3.793170252782732*^9, 
   3.793170427572447*^9, {3.793170671162902*^9, 3.7931707110186515`*^9}, {
   3.7931712523585796`*^9, 3.79317125275918*^9}, {3.793171285586815*^9, 
   3.7931713202072563`*^9}, {3.7931714568019137`*^9, 3.793171457535644*^9}, {
   3.793171512499815*^9, 3.793171513317505*^9}, {3.7931717023715677`*^9, 
   3.7931717140655828`*^9}, 3.793171808509059*^9, 3.79317184783235*^9, {
   3.7931826204717426`*^9, 3.7931826286178837`*^9}, {3.793182809447237*^9, 
   3.793182818747127*^9}, {3.793183338651309*^9, 3.793183340687931*^9}, {
   3.793183420473365*^9, 3.793183420888418*^9}, {3.793183537842511*^9, 
   3.7931835400438623`*^9}, {3.7931836233796034`*^9, 
   3.7931836237646303`*^9}, {3.7932406969566393`*^9, 3.793240701421771*^9}, {
   3.7933139182469287`*^9, 3.7933139186376057`*^9}, {3.7933141275813513`*^9, 
   3.7933141278781004`*^9}, 3.793317368086852*^9, {3.7933257178677225`*^9, 
   3.793325758387643*^9}, {3.7933258030016923`*^9, 3.793325829473228*^9}, {
   3.7933258643516893`*^9, 3.793325869320958*^9}, {3.793326010007606*^9, 
   3.793326010241965*^9}, {3.7933260438550367`*^9, 3.7933260856092253`*^9}, 
   3.7933263031476665`*^9, 3.7933264762909393`*^9, {3.7933279616228285`*^9, 
   3.7933279739676776`*^9}, 3.7933282070702686`*^9, {3.7933283878548117`*^9, 
   3.793328388511071*^9}, {3.7937867665302672`*^9, 3.793786767186581*^9}, 
   3.7937870615776625`*^9, {3.793787654812854*^9, 3.793787655109924*^9}, {
   3.7937879679245405`*^9, 3.7937879684091215`*^9}, {3.793788570692136*^9, 
   3.793788570864083*^9}, 3.793788646028378*^9, {3.7937886821884947`*^9, 
   3.793788695877613*^9}, 3.7937891032635183`*^9, {3.7937891908124833`*^9, 
   3.7937891915779934`*^9}, {3.7937892613354616`*^9, 
   3.7937892615699034`*^9}, {3.793789364815292*^9, 3.793789366346739*^9}, {
   3.793789456028363*^9, 3.7937894658104763`*^9}, 3.7937896426576996`*^9, {
   3.7937898052532597`*^9, 3.7937898060971055`*^9}, 3.7937899016229577`*^9, 
   3.7937901413203325`*^9, {3.7937908263780117`*^9, 3.7937908315192175`*^9}, 
   3.793790958954685*^9, {3.7937911129086685`*^9, 3.7937911136433253`*^9}, {
   3.7937912188733344`*^9, 3.7937912192169704`*^9}, {3.793791323603104*^9, 
   3.7937913238532143`*^9}, {3.7937914185195155`*^9, 
   3.7937914188791084`*^9}, {3.7937915038255653`*^9, 3.793791507013365*^9}, 
   3.7937916023518934`*^9, {3.7937924691986494`*^9, 3.793792469323635*^9}, {
   3.793795865816421*^9, 3.793795870035814*^9}, {3.7937964450772877`*^9, 
   3.793796456703481*^9}, {3.7938325472041197`*^9, 3.793832565559576*^9}, {
   3.7938347267960434`*^9, 3.793834752861532*^9}, {3.7938369716131353`*^9, 
   3.793836971941306*^9}, 3.793837003991618*^9, {3.7938381152982535`*^9, 
   3.7938381159387736`*^9}, 3.793838339329811*^9, {3.7938385347255507`*^9, 
   3.7938385350070143`*^9}, {3.793838858853998*^9, 3.793838859057343*^9}, {
   3.793838998962793*^9, 3.793839009448248*^9}, {3.7938390643603735`*^9, 
   3.793839064688609*^9}, 3.793839106364873*^9, {3.793839406881462*^9, 
   3.793839407428345*^9}, {3.7938399575655537`*^9, 3.7938399583156395`*^9}, {
   3.7938399903813796`*^9, 3.793839991756566*^9}, {3.793840235157576*^9, 
   3.793840267239135*^9}, {3.793840813535891*^9, 3.793840818083443*^9}, {
   3.793842138176005*^9, 3.7938421431920147`*^9}, 3.7938431482435246`*^9, {
   3.7938440611468563`*^9, 3.7938440657881584`*^9}, {3.7938449420153112`*^9, 
   3.7938449502660184`*^9}, {3.7938450521050887`*^9, 3.7938450597465067`*^9}, 
   3.793845368498294*^9, 3.7938456528257895`*^9, {3.7938460174057646`*^9, 
   3.793846033110586*^9}, {3.7938463923052287`*^9, 3.79384639291486*^9}, {
   3.7938468053861246`*^9, 3.793846825404084*^9}, {3.7938475900015593`*^9, 
   3.7938475902203298`*^9}, {3.7938482876856127`*^9, 
   3.7938482877166724`*^9}, {3.793849004855955*^9, 3.7938490135602016`*^9}, {
   3.7938498083171544`*^9, 3.793849809926515*^9}, {3.7938498476494837`*^9, 
   3.7938498533063493`*^9}, {3.793850573133377*^9, 3.793850573539699*^9}, 
   3.7938791879793158`*^9, {3.793879654701161*^9, 3.793879656060874*^9}, {
   3.7942809165039597`*^9, 3.794280919535534*^9}, {3.794281476235796*^9, 
   3.7942815174747524`*^9}, {3.7942816129068336`*^9, 
   3.7942816293927774`*^9}, {3.7942822276289015`*^9, 3.794282238442567*^9}, {
   3.794283829393915*^9, 3.7942838675855007`*^9}, {3.7942841998869057`*^9, 
   3.7942842018402386`*^9}, {3.7942842472669764`*^9, 
   3.7942842491264005`*^9}, {3.7942881808880177`*^9, 3.794288216970009*^9}, {
   3.7942891466632795`*^9, 3.794289150007221*^9}, {3.794289245001728*^9, 
   3.7942892707076063`*^9}, {3.794290496084821*^9, 3.794290499663167*^9}, {
   3.7942906184416656`*^9, 3.7942906213324027`*^9}, {3.794290853685605*^9, 
   3.7942909065191803`*^9}, {3.7942915227572184`*^9, 3.794291542243715*^9}, {
   3.7942916064536924`*^9, 3.7942917333108244`*^9}, {3.7942920545014915`*^9, 
   3.7942920574705625`*^9}, {3.7942944042943926`*^9, 3.794294407763505*^9}, {
   3.794294446158392*^9, 3.794294455768591*^9}, {3.7943018867517867`*^9, 
   3.7943018914241576`*^9}, {3.7943034606745324`*^9, 
   3.7943034633309126`*^9}, {3.794306973490382*^9, 3.794306973787486*^9}, {
   3.794307120037479*^9, 3.7943071244598637`*^9}, {3.7943073842999983`*^9, 
   3.794307400348772*^9}, {3.7943075515679364`*^9, 3.794307551802343*^9}, {
   3.7943076749563017`*^9, 3.7943076861762514`*^9}, {3.794307720992465*^9, 
   3.794307721164176*^9}, {3.7943082746930943`*^9, 3.7943082788810873`*^9}, 
   3.794308911375287*^9, {3.7943106026115775`*^9, 3.7943106094874516`*^9}, {
   3.79431233065594*^9, 3.7943123479391813`*^9}, {3.7943144431880627`*^9, 
   3.794314461408594*^9}, {3.794314569185921*^9, 3.7943145772961597`*^9}, {
   3.7943146188005967`*^9, 3.7943146684777966`*^9}, {3.79431472312428*^9, 
   3.794314733843967*^9}, 3.794314909456725*^9, {3.7943149857304974`*^9, 
   3.794314985918017*^9}, {3.794315653942541*^9, 3.794315731029045*^9}, {
   3.7943575423716035`*^9, 3.794357573015563*^9}, {3.7943586280036335`*^9, 
   3.7943586281755276`*^9}, {3.7943588748267965`*^9, 3.79435887518617*^9}, 
   3.7943622427163143`*^9, 3.7943623753399086`*^9, {3.7943624730066204`*^9, 
   3.7943624732253857`*^9}, {3.794362515167337*^9, 3.79436251535485*^9}, {
   3.7943625474833355`*^9, 3.7943625653291483`*^9}, {3.794362831232417*^9, 
   3.7943628354049215`*^9}, {3.794362914647641*^9, 3.7943629148196907`*^9}, {
   3.7944572239449806`*^9, 3.794457225554718*^9}, {3.7944572840295305`*^9, 
   3.7944572880926485`*^9}, {3.794457604628397*^9, 3.794457621833169*^9}, {
   3.794457780443898*^9, 3.7944578065248055`*^9}, 3.794457846466595*^9, 
   3.794457923178112*^9, 3.794458063255424*^9, {3.7944581268715997`*^9, 
   3.7944581270749483`*^9}, {3.794458268612809*^9, 3.79445832016502*^9}, {
   3.794459001269369*^9, 3.79445901222348*^9}, {3.7944592842684293`*^9, 
   3.7944592945038958`*^9}, 3.7944598427968054`*^9, {3.7944598766130786`*^9, 
   3.794459901443672*^9}, {3.794711650622012*^9, 3.79471175664898*^9}, {
   3.7947124817576704`*^9, 3.7947124820703363`*^9}, 3.7947125441707973`*^9, {
   3.794713270029746*^9, 3.794713270982769*^9}, 3.794713474192207*^9, {
   3.794713566155034*^9, 3.7947135730778084`*^9}, 3.794714549010217*^9, {
   3.794714582591936*^9, 3.7947147347646685`*^9}, 3.7947148270245447`*^9, {
   3.794714941193035*^9, 3.794714941396014*^9}, {3.794715058924177*^9, 
   3.7947150608150473`*^9}, {3.794715238443389*^9, 3.7947152549297285`*^9}, {
   3.794715492127002*^9, 3.794715533412668*^9}, {3.7947161606673107`*^9, 
   3.7947161738093452`*^9}, {3.794716234315628*^9, 3.7947162407694883`*^9}, {
   3.7947163138868465`*^9, 3.794716316387106*^9}, {3.7947187462635274`*^9, 
   3.7947187560770555`*^9}, {3.794718787330411*^9, 3.794718811536343*^9}, {
   3.7947235569584513`*^9, 3.7947235962752066`*^9}, {3.794733062122963*^9, 
   3.7947330688426456`*^9}, {3.794733294318068*^9, 3.794733311273156*^9}, {
   3.7947336783354197`*^9, 3.7947336835703397`*^9}, {3.7947358785089226`*^9, 
   3.79473587975887*^9}, {3.7947839132612095`*^9, 3.794783922981204*^9}, {
   3.7947849890208144`*^9, 3.7947849893960094`*^9}, {3.7947851401776514`*^9, 
   3.794785160554945*^9}, 3.794785376687262*^9, {3.79478544330396*^9, 
   3.79478544691372*^9}, 3.79478555001832*^9, {3.794786681099127*^9, 
   3.7947866827244473`*^9}, {3.7947867205566196`*^9, 
   3.7947867522631283`*^9}, {3.7947877591070223`*^9, 
   3.7947877624667606`*^9}, {3.794787828052108*^9, 3.794787828458198*^9}, {
   3.7947881287405467`*^9, 3.79478812919357*^9}, {3.794788272615324*^9, 
   3.7947882732714424`*^9}, {3.7947883129789915`*^9, 3.794788330793425*^9}, {
   3.794788507499693*^9, 3.7947885090936055`*^9}, {3.7947914674860163`*^9, 
   3.794791498098869*^9}, {3.794801944257491*^9, 3.7948019559774985`*^9}, {
   3.7948020653173246`*^9, 3.7948020748183117`*^9}, {3.7948021885334373`*^9, 
   3.79480219912832*^9}, {3.7948022683234034`*^9, 3.7948023344733477`*^9}, {
   3.7948028222985263`*^9, 3.7948028231578383`*^9}, {3.794802867459617*^9, 
   3.794802911651655*^9}, {3.7948071854797416`*^9, 3.7948071939179487`*^9}, {
   3.794807318587758*^9, 3.794807352446513*^9}, {3.7948074201100187`*^9, 
   3.7948074244540243`*^9}, {3.794807748379538*^9, 3.794807755067596*^9}, {
   3.7948080218195024`*^9, 3.7948080223038883`*^9}, {3.7948236430076632`*^9, 
   3.7948236497742133`*^9}, {3.7950526261245613`*^9, 
   3.7950526511741085`*^9}, {3.795052705101589*^9, 3.7950527710461693`*^9}, {
   3.795055301051541*^9, 3.7950553164748926`*^9}, {3.7950572095204997`*^9, 
   3.7950572138646965`*^9}, 3.7950572463211613`*^9, {3.7951357965296354`*^9, 
   3.7951358032491026`*^9}, {3.795140655405239*^9, 3.795140666125151*^9}, {
   3.7952989447953625`*^9, 3.795298956296749*^9}, {3.795299026491787*^9, 
   3.795299031882992*^9}, {3.7953013567577853`*^9, 3.7953013635085106`*^9}, {
   3.7953014542469244`*^9, 3.7953014647791567`*^9}, {3.7953019693252015`*^9, 
   3.7953019778574095`*^9}, {3.7953475513428593`*^9, 
   3.7953476437499433`*^9}, {3.795347868709776*^9, 3.7953478933380537`*^9}, {
   3.795347959404537*^9, 3.7953479629888716`*^9}, {3.797298688444705*^9, 
   3.7972986903977823`*^9}, {3.7979981572611666`*^9, 
   3.7979981775460453`*^9}, {3.812999752811386*^9, 3.8129997549834857`*^9}, {
   3.8130032659595547`*^9, 3.8130033028072824`*^9}, {3.813003879651862*^9, 
   3.813003906811182*^9}, {3.8130043213498507`*^9, 3.8130043331480117`*^9}, {
   3.8130053025816956`*^9, 3.813005307598011*^9}, {3.8130055929567604`*^9, 
   3.813005629601492*^9}, 3.813053853971745*^9, {3.8130539697967234`*^9, 
   3.8130539703905487`*^9}, {3.813054511820346*^9, 3.8130545168175764`*^9}, {
   3.813054634004527*^9, 3.8130546389970894`*^9}, {3.813055706500695*^9, 
   3.8130557350341153`*^9}, {3.813056062884313*^9, 3.8130560676909637`*^9}, {
   3.813056256245505*^9, 3.813056257776579*^9}, {3.81305654482572*^9, 
   3.8130565591473255`*^9}, {3.8130937221206656`*^9, 3.813093757030681*^9}, {
   3.81309996398129*^9, 3.813099966434679*^9}, {3.8131119796315527`*^9, 
   3.8131119860543165`*^9}, {3.8131147219847136`*^9, 3.813114743893482*^9}, {
   3.813115624144658*^9, 3.8131156435997276`*^9}, {3.81311820374244*^9, 
   3.813118222634939*^9}, {3.8131182565917463`*^9, 3.813118274656141*^9}, {
   3.8131267662723527`*^9, 3.8131267771955953`*^9}, {3.81312682374749*^9, 
   3.813126835748783*^9}, {3.813126908115814*^9, 3.813126908709778*^9}, {
   3.8131269508080587`*^9, 3.8131269558242316`*^9}, {3.8131272634667854`*^9, 
   3.81312727338972*^9}, {3.8131274736923804`*^9, 3.8131274818496995`*^9}, {
   3.813199092664771*^9, 3.8131991051699533`*^9}, {3.813199261970026*^9, 
   3.813199263667223*^9}, {3.8131993874934998`*^9, 3.813199394143332*^9}, {
   3.814078450460925*^9, 3.8140784541956854`*^9}, {3.8141147452667527`*^9, 
   3.814114753314471*^9}, {3.8321025632955675`*^9, 3.832102600535942*^9}, 
   3.832102742226442*^9, {3.8321040713297167`*^9, 3.832104071765482*^9}, {
   3.8321042108074217`*^9, 3.8321042398274884`*^9}, 3.8321043435325437`*^9, {
   3.8321045055974417`*^9, 3.8321045316106176`*^9}, {3.8321046099908495`*^9, 
   3.832104612597785*^9}, 3.8321047990258503`*^9, {3.8321081582451572`*^9, 
   3.8321081681952906`*^9}, {3.832108202895509*^9, 3.8321082095243187`*^9}, {
   3.8321146663934135`*^9, 3.832114669783328*^9}, {3.8321149252443542`*^9, 
   3.832114925594833*^9}, {3.8321150218406734`*^9, 3.8321150337316904`*^9}, {
   3.8321180337283187`*^9, 3.832118049256981*^9}, {3.832118342486386*^9, 
   3.832118365264599*^9}, {3.832142608206303*^9, 3.8321426108244534`*^9}, {
   3.8321431949529934`*^9, 3.832143195401187*^9}, {3.8321566517581625`*^9, 
   3.832156652238698*^9}, {3.832156741383711*^9, 3.8321567424296045`*^9}, {
   3.8321575073282204`*^9, 3.8321575077340574`*^9}, {3.8321596944050694`*^9, 
   3.8321596947188525`*^9}, {3.8321597374349213`*^9, 
   3.8321597460829134`*^9}, {3.832159781106851*^9, 3.832159792234915*^9}, {
   3.832159934494385*^9, 3.832159934942384*^9}, {3.8321599910517626`*^9, 
   3.832159997499833*^9}, {3.8321990844104376`*^9, 3.832199094052254*^9}, {
   3.832199128305629*^9, 3.8321991551054893`*^9}, {3.832199195618417*^9, 
   3.8321992031469507`*^9}, {3.832199262254833*^9, 3.8321992637259684`*^9}, {
   3.8321993434986196`*^9, 3.8321993736892414`*^9}, {3.832200780082291*^9, 
   3.832200803084885*^9}, {3.8322016057778296`*^9, 3.832201647360433*^9}, {
   3.832201680442008*^9, 3.8322017120703163`*^9}, {3.8322017580751123`*^9, 
   3.83220176238791*^9}, 3.8322020819746046`*^9, {3.832202117150141*^9, 
   3.8322021254480333`*^9}, {3.8322824974732246`*^9, 3.832282500853387*^9}, {
   3.832496341342374*^9, 3.8324963508747993`*^9}, {3.83249850458636*^9, 
   3.832498508758685*^9}, {3.832498561436067*^9, 3.832498568030681*^9}, {
   3.832498606316044*^9, 3.8324986128792467`*^9}, {3.8324994488282404`*^9, 
   3.8324994550945487`*^9}, {3.832499489301547*^9, 3.8324994928485956`*^9}, {
   3.832499529665256*^9, 3.8324995407443657`*^9}, {3.8325017704171987`*^9, 
   3.832501776761591*^9}, 3.832501818063091*^9, {3.8325480178860693`*^9, 
   3.8325480216950827`*^9}, 3.832548135438431*^9, {3.8325493230638*^9, 
   3.8325493264342327`*^9}, {3.832572350562205*^9, 3.8325723521040688`*^9}, {
   3.8325727098454037`*^9, 3.832572715020653*^9}, {3.832573235704981*^9, 
   3.8325732359133997`*^9}, {3.832573324701065*^9, 3.8325733352779074`*^9}, {
   3.832573745819086*^9, 3.832573765350751*^9}, {3.832573924339673*^9, 
   3.832573927469391*^9}, {3.832574065048169*^9, 3.832574085009177*^9}, {
   3.8325744462177334`*^9, 3.8325744854929667`*^9}, {3.8325748151993856`*^9, 
   3.8325748682233057`*^9}, {3.8325749018460703`*^9, 3.832574903473218*^9}, {
   3.8325756463715534`*^9, 3.832575649390253*^9}, {3.8338749861884265`*^9, 
   3.833875013330844*^9}, {3.8338750607969937`*^9, 3.8338751152228966`*^9}, {
   3.8338752682951145`*^9, 3.833875490054088*^9}, {3.833875586034213*^9, 
   3.8338756021538615`*^9}, {3.83387579041149*^9, 3.8338758679915285`*^9}, {
   3.8338759536038218`*^9, 3.833875956240565*^9}, {3.8339380260531845`*^9, 
   3.833938037992816*^9}, {3.8339380768129826`*^9, 3.8339381509721785`*^9}, {
   3.8339382139030323`*^9, 3.833938299525284*^9}, {3.833938345312997*^9, 
   3.8339384140511837`*^9}, {3.8339384499354734`*^9, 
   3.8339384557130823`*^9}, {3.8339384966494102`*^9, 3.833938511304098*^9}, {
   3.8339386877811074`*^9, 3.83393869766601*^9}, {3.833938786959593*^9, 
   3.833938796761405*^9}, {3.8339420687329392`*^9, 3.8339420732696185`*^9}, {
   3.8339422388563967`*^9, 3.833942241173514*^9}, {3.833942882599349*^9, 
   3.8339428843847575`*^9}, {3.8339462617194967`*^9, 3.833946263504059*^9}, {
   3.8339468230377398`*^9, 3.833946824570012*^9}, {3.833948315838616*^9, 
   3.833948318769046*^9}, {3.8339484392797585`*^9, 3.8339484411661267`*^9}, 
   3.83394857077455*^9, {3.8339488710065317`*^9, 3.833948873678048*^9}, {
   3.833949290124226*^9, 3.833949340182172*^9}, {3.8339649691224422`*^9, 
   3.8339650243939147`*^9}, {3.833965447794812*^9, 3.8339654513104043`*^9}, {
   3.8339656575425806`*^9, 3.8339656662141747`*^9}, {3.8339657854062977`*^9, 
   3.8339657888586335`*^9}, {3.833966079248127*^9, 3.833966117159259*^9}, {
   3.833966235642194*^9, 3.833966236679574*^9}, 3.833966298925937*^9, {
   3.833967444694915*^9, 3.8339675603499107`*^9}, {3.8339675940770483`*^9, 
   3.8339676063797255`*^9}, {3.8339711329950666`*^9, 3.833971208152872*^9}, {
   3.8365213363009233`*^9, 3.836521356107731*^9}, {3.8365222184769335`*^9, 
   3.8365222200268364`*^9}, {3.836522257917738*^9, 3.8365222691291747`*^9}, {
   3.836522762937751*^9, 3.836522768559491*^9}, {3.8365229813532887`*^9, 
   3.83652303257303*^9}, {3.8365234046320395`*^9, 3.836523433454945*^9}, {
   3.836523869083928*^9, 3.836523872181096*^9}, {3.836524343954322*^9, 
   3.8365243807494907`*^9}, {3.836524881930395*^9, 3.836524957363871*^9}, {
   3.836525023680046*^9, 3.8365250416844215`*^9}, {3.8365251264102283`*^9, 
   3.8365252207195573`*^9}, {3.836639726384743*^9, 3.836639770378607*^9}, {
   3.836639854971097*^9, 3.8366398855598974`*^9}, {3.8366409323963933`*^9, 
   3.836640971208429*^9}, {3.8366416222072954`*^9, 3.8366416610307226`*^9}, {
   3.8366823362861605`*^9, 3.836682398198414*^9}, {3.8366824576072073`*^9, 
   3.8366824687639723`*^9}, {3.836683760459751*^9, 3.836683814488267*^9}, {
   3.8366882228324747`*^9, 3.836688228343912*^9}, {3.8367278734420495`*^9, 
   3.8367278926638775`*^9}, {3.8367280056218853`*^9, 3.836728033935115*^9}, {
   3.836729225593646*^9, 3.836729236136361*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Samples generation", "Section",
 CellChangeTimes->{{3.833937491854286*^9, 3.833937495922968*^9}, {
  3.8339375876248446`*^9, 3.8339375909411464`*^9}, {3.8339465803883147`*^9, 
  3.8339465858130217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Time taken to generate samples: \>\"", ",", 
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"simDataArray", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n", "=", 
            RowBox[{"nArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"alpha", "=", 
            RowBox[{"alphaArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"theta", "=", 
            RowBox[{"thetaArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"sampleSize", "=", 
            RowBox[{"sampleSizeArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"m", "=", 
            RowBox[{"n", "+", "alpha"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"u", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"MultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ",", 
                    "n"}], "]"}], ".", 
                  RowBox[{"{", 
                   RowBox[{"1.", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"sigma", " ", "=", " ", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "n", "]"}], "+", 
              RowBox[{"theta", "*", 
               RowBox[{"Outer", "[", 
                RowBox[{"Times", ",", "u", ",", 
                 RowBox[{"Conjugate", "[", "u", "]"}]}], "]"}]}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"A", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"MultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", "n"}], "]"}], ",", 
                    RowBox[{"sigma", "/", "2"}]}], "]"}], ",", "1"}], "]"}], 
                   "+", 
                   RowBox[{"I", "*", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"MultinormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", "n"}], "]"}], ",", 
                    RowBox[{"sigma", "/", "2"}]}], "]"}], ",", "1"}], 
                    "]"}]}]}], "]"}], ",", "m"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"W", "=", 
               RowBox[{
                RowBox[{"ConjugateTranspose", "[", "A", "]"}], ".", "A"}]}], 
              ";", " ", "\[IndentingNewLine]", 
              RowBox[{"eigSys", "=", 
               RowBox[{"Eigensystem", "[", "W", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"eigSys", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"eigSys", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "u"}], "}"}]}], 
             "\[IndentingNewLine]", ",", "sampleSize"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< seconds\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"simDataArray", ",", 
    RowBox[{"{", 
     RowBox[{
     "sampleSizeArray", ",", "nArray", ",", "alphaArray", ",", "thetaArray", 
      ",", "muArray"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Exported to: \>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{"simulatedDataFile", ",", "simDataArray"}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7927166418073235`*^9, 3.79271669778209*^9}, {
   3.792716961044549*^9, 3.7927169612165937`*^9}, 3.792719767535927*^9, {
   3.7927199468206997`*^9, 3.7927199808400965`*^9}, {3.792720568981498*^9, 
   3.792720569387833*^9}, {3.792720699448744*^9, 3.792720719372717*^9}, {
   3.7927208890000043`*^9, 3.792720897501096*^9}, {3.792721997715086*^9, 
   3.792721998668316*^9}, 3.792723816544462*^9, {3.7927257000891337`*^9, 
   3.7927257004642825`*^9}, {3.7927258733733215`*^9, 
   3.7927259122055902`*^9}, {3.792726051314195*^9, 3.792726051657984*^9}, {
   3.792726102350894*^9, 3.7927261937981186`*^9}, 3.7927263429234*^9, 
   3.7927263740359964`*^9, 3.7927269821746883`*^9, 3.792727037211811*^9, {
   3.7927272275604053`*^9, 3.792727228419884*^9}, {3.79272744927137*^9, 
   3.7927274505529594`*^9}, 3.7927275357337246`*^9, 3.792727675201803*^9, {
   3.7927277645708284`*^9, 3.7927277992620306`*^9}, {3.792727958794668*^9, 
   3.7927279701552563`*^9}, 3.792728703639542*^9, 3.7927550479824653`*^9, {
   3.7927550804380302`*^9, 3.7927550913610954`*^9}, 3.792756020163459*^9, 
   3.7927561862749124`*^9, 3.7927596927288623`*^9, 3.792759895172324*^9, {
   3.792760153746978*^9, 3.7927601547626953`*^9}, {3.7927602234575224`*^9, 
   3.792760242037445*^9}, {3.7927951889009857`*^9, 3.7927951894479246`*^9}, {
   3.792795305069623*^9, 3.7927953058665953`*^9}, {3.7931442040325136`*^9, 
   3.7931442053607864`*^9}, {3.7931447343516445`*^9, 3.793144734820448*^9}, {
   3.793145186243561*^9, 3.7931451866813116`*^9}, {3.7931452434998693`*^9, 
   3.7931452441562057`*^9}, 3.79314576414919*^9, 3.7931651996750216`*^9, 
   3.79316524445498*^9, {3.7931654505984535`*^9, 3.79316545098392*^9}, {
   3.7931655104364457`*^9, 3.7931655391432495`*^9}, {3.7931660723868976`*^9, 
   3.7931660771587005`*^9}, {3.7931661925506516`*^9, 3.793166192904893*^9}, {
   3.7931674472206125`*^9, 3.793167447900176*^9}, {3.7931675314172697`*^9, 
   3.793167533304762*^9}, 3.7931677062758813`*^9, {3.793167988509886*^9, 
   3.7931679886945114`*^9}, 3.7931696897134995`*^9, 3.793169780409862*^9, {
   3.7931701759493*^9, 3.7931701761655493`*^9}, 3.793170252782732*^9, 
   3.793170427572447*^9, {3.793170671162902*^9, 3.793170706958985*^9}, {
   3.794281562448305*^9, 3.794281580778412*^9}, {3.7942818007236223`*^9, 
   3.794281955709173*^9}, {3.7942819946662607`*^9, 3.7942820286075892`*^9}, {
   3.7942820940520983`*^9, 3.7942821148511887`*^9}, 3.7942821451513066`*^9, {
   3.7942821804207125`*^9, 3.7942821811708*^9}, {3.7942822223002043`*^9, 
   3.794282245458931*^9}, {3.794302335456045*^9, 3.7943023431441903`*^9}, {
   3.794302455500003*^9, 3.794302541712348*^9}, {3.79431065705505*^9, 
   3.7943106611023564`*^9}, {3.79431319212331*^9, 3.794313203374344*^9}, {
   3.7947148043188496`*^9, 3.794714804912649*^9}, {3.794714899547778*^9, 
   3.7947149324732695`*^9}, {3.794714966429902*^9, 3.7947149790562534`*^9}, {
   3.794715039828378*^9, 3.794715045063321*^9}, {3.794715109492092*^9, 
   3.794715109867174*^9}, {3.8321030075840254`*^9, 3.832103019594943*^9}, {
   3.8321031072140675`*^9, 3.8321031487987647`*^9}, {3.8321032915203676`*^9, 
   3.8321033105801086`*^9}, {3.8321033414409647`*^9, 
   3.8321033438977137`*^9}, {3.832103388126809*^9, 3.8321034428468943`*^9}, {
   3.832106179015751*^9, 3.832106181143772*^9}, {3.832108254181673*^9, 
   3.8321082637757754`*^9}, {3.832108311196887*^9, 3.8321083189031024`*^9}, {
   3.8321436022262087`*^9, 3.832143610147993*^9}, {3.8322825115595546`*^9, 
   3.8322825130596285`*^9}, {3.833937671584134*^9, 3.83393767428566*^9}, {
   3.83393771486364*^9, 3.833937758013988*^9}, {3.833937938278578*^9, 
   3.8339379688273444`*^9}, {3.8339381764518924`*^9, 3.8339382019836893`*^9}, 
   3.833938312031491*^9, {3.833938524453573*^9, 3.8339385495819407`*^9}, {
   3.833939698455518*^9, 3.833939702771481*^9}, {3.8339397483327427`*^9, 
   3.8339397487499323`*^9}, {3.833939833765346*^9, 3.8339398364303255`*^9}, {
   3.8339422926738143`*^9, 3.8339423319938*^9}, {3.83394256080123*^9, 
   3.8339425641727157`*^9}, {3.8339427685447836`*^9, 3.83394287465924*^9}, {
   3.833942907753744*^9, 3.8339429303749285`*^9}, {3.8339429639269247`*^9, 
   3.833942968992301*^9}, {3.833943049599779*^9, 3.833943071743038*^9}, {
   3.833943121142901*^9, 3.8339431589948797`*^9}, {3.833943261008999*^9, 
   3.833943333466135*^9}, {3.833943487138183*^9, 3.8339435489190097`*^9}, {
   3.8339435795659757`*^9, 3.833943654817669*^9}, {3.833943767146801*^9, 
   3.8339438166950417`*^9}, {3.8339438877711535`*^9, 3.833943907137107*^9}, {
   3.8339439410753536`*^9, 3.8339440504183173`*^9}, {3.833944255427881*^9, 
   3.833944284387946*^9}, {3.833944325362117*^9, 3.8339443385131264`*^9}, {
   3.833944376019601*^9, 3.8339443871579456`*^9}, {3.8339448508955574`*^9, 
   3.8339448670408196`*^9}, {3.8339449978714933`*^9, 
   3.8339449990046597`*^9}, {3.8339453499785995`*^9, 
   3.8339454237767897`*^9}, {3.8365250438195624`*^9, 3.836525048871501*^9}, {
   3.836638998634808*^9, 3.8366390268809433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time taken to generate samples: \"\>", "\[InvisibleSpace]", 
   "599.896527843347`", "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm[
  "Time taken to generate samples: ", 599.896527843347, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8339437960653963`*^9, 3.8339438547169533`*^9, {3.8339438942916617`*^9, 
   3.8339439083153934`*^9}, {3.833943945411304*^9, 3.83394397748409*^9}, {
   3.8339442643160686`*^9, 3.8339442851883507`*^9}, 3.833944339012992*^9, {
   3.8339443815926228`*^9, 3.8339443878795795`*^9}, {3.833944852931445*^9, 
   3.833944867872486*^9}, 3.8339449996360607`*^9, 3.833945350848197*^9, {
   3.833945396897395*^9, 3.8339454246239614`*^9}, 3.833946266569167*^9, 
   3.8339483332429624`*^9, 3.833948445929493*^9, 3.8339485772159996`*^9, 
   3.8339488775263834`*^9, 3.833949371981529*^9, 3.8339654764833145`*^9, 
   3.83396571868902*^9, 3.833965813622073*^9, 3.8339661589923754`*^9, 
   3.8339663378884115`*^9, 3.833967538699132*^9, 3.8339675706068172`*^9, 
   3.8339676758416753`*^9, 3.8339714147651725`*^9, {3.836522356140297*^9, 
   3.836522385907396*^9}, 3.83652277408195*^9, 3.8365235562364407`*^9, 
   3.83652457202909*^9, 3.8365296307686834`*^9, 3.8366397833916616`*^9, 
   3.8366401242132215`*^9, 3.836641054486062*^9, 3.836641650508518*^9, 
   3.836641766366414*^9, 3.836682682977268*^9, 3.836684191813058*^9, 
   3.8367285448534193`*^9, 3.836729849076273*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Exported to: \"\>", 
   "\[InvisibleSpace]", \
"\<\"D:\\\\research\\\\eigenvectors\\\\simulations\\\\data\\\\asymptotic\\\\\
simulation_3.mx\"\>"}],
  SequenceForm[
  "Exported to: ", 
   "D:\\research\\eigenvectors\\simulations\\data\\asymptotic\\simulation_3.\
mx"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8339437960653963`*^9, 3.8339438547169533`*^9, {3.8339438942916617`*^9, 
   3.8339439083153934`*^9}, {3.833943945411304*^9, 3.83394397748409*^9}, {
   3.8339442643160686`*^9, 3.8339442851883507`*^9}, 3.833944339012992*^9, {
   3.8339443815926228`*^9, 3.8339443878795795`*^9}, {3.833944852931445*^9, 
   3.833944867872486*^9}, 3.8339449996360607`*^9, 3.833945350848197*^9, {
   3.833945396897395*^9, 3.8339454246239614`*^9}, 3.833946266569167*^9, 
   3.8339483332429624`*^9, 3.833948445929493*^9, 3.8339485772159996`*^9, 
   3.8339488775263834`*^9, 3.833949371981529*^9, 3.8339654764833145`*^9, 
   3.83396571868902*^9, 3.833965813622073*^9, 3.8339661589923754`*^9, 
   3.8339663378884115`*^9, 3.833967538699132*^9, 3.8339675706068172`*^9, 
   3.8339676758416753`*^9, 3.8339714147651725`*^9, {3.836522356140297*^9, 
   3.836522385907396*^9}, 3.83652277408195*^9, 3.8365235562364407`*^9, 
   3.83652457202909*^9, 3.8365296307686834`*^9, 3.8366397833916616`*^9, 
   3.8366401242132215`*^9, 3.836641054486062*^9, 3.836641650508518*^9, 
   3.836641766366414*^9, 3.836682682977268*^9, 3.836684191813058*^9, 
   3.8367285448534193`*^9, 3.836729857137309*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytical expression", "Section",
 CellChangeTimes->{{3.8339465526154547`*^9, 3.8339465590315742`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "pdf", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "generic", " ", "pdf", " ", "min", " ", "eigvec", " ", "asymptotic", " ", 
     "behaviour"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"anaMin", "=", "0"}], ";", " ", 
    RowBox[{"anaMax", "=", "5"}], ";", 
    RowBox[{"dv", "=", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "description", "=", 
     "\"\<generic pdf min eigvec asymptotic behaviour\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "[", 
      RowBox[{"v_", ",", "alpha_", ",", "mu_", ",", "theta_", ",", "beta_"}], 
      "]"}], ":=", 
     RowBox[{
      FractionBox["mu", 
       RowBox[{"(", 
        RowBox[{"1", "-", "beta"}], ")"}]], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"mu", "*", "v", " "}], 
         RowBox[{"1", "-", "beta"}]]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"anaDataArray", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"alpha", "=", 
         RowBox[{"alphaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"theta", "=", 
         RowBox[{"thetaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mu", "=", 
         RowBox[{"muArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"beta", "=", 
         FractionBox["theta", 
          RowBox[{"theta", "+", "1"}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"v", ",", 
          RowBox[{"pdf", "[", 
           RowBox[{"v", ",", "alpha", ",", "mu", ",", "theta", ",", "beta"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "anaMin", ",", "anaMax", ",", "dv"}], "}"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"anaDataArray", ",", 
      RowBox[{"{", 
       RowBox[{
       "description", ",", "alphaArray", ",", "thetaArray", ",", "muArray"}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Exported to: \>\"", ",", 
      RowBox[{"Export", "[", 
       RowBox[{"analyticalDataFile", ",", "anaDataArray"}], "]"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8339490039865713`*^9, 3.8339490072059717`*^9}, 
   3.8365243161360025`*^9, {3.83652505465504*^9, 3.8365250671030374`*^9}, {
   3.8366390710336995`*^9, 3.8366391303602505`*^9}, {3.8366392505571203`*^9, 
   3.836639255671545*^9}, {3.8366399158930554`*^9, 3.836639916511382*^9}, {
   3.836640763231741*^9, 3.836640766024026*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Exported to: \"\>", 
   "\[InvisibleSpace]", \
"\<\"D:\\\\research\\\\eigenvectors\\\\simulations\\\\data\\\\asymptotic\\\\\
analytical_min_3.mx\"\>"}],
  SequenceForm[
  "Exported to: ", 
   "D:\\research\\eigenvectors\\simulations\\data\\asymptotic\\analytical_min_\
3.mx"],
  Editable->False]], "Print",
 CellChangeTimes->{3.836640125679318*^9, 3.836640766973319*^9, 
  3.8366410553181825`*^9, 3.836641650608802*^9, 3.836641767190466*^9, 
  3.836682684398527*^9, 3.836684194517296*^9, 3.8367285515211215`*^9, 
  3.8367298572355814`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import data", "Section",
 CellChangeTimes->{3.8366391983937826`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simDataArray", "=", 
   RowBox[{"Import", "[", "simulatedDataFile", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"anaDataArray", "=", 
   RowBox[{"Import", "[", "analyticalDataFile", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulationInfo", "=", 
   RowBox[{"Last", "[", "simDataArray", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Simulation parameters: \\nsample size=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\nn=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Alpha]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Theta]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Mu]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analyticalInfo", "=", 
   RowBox[{"Last", "[", "anaDataArray", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Analytical expression paranmeters:\\nDescription:\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Alpha]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Theta]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\n\[Mu]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"analyticalInfo", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], "\[NotEqual]", 
     RowBox[{"simulationInfo", "[", 
      RowBox[{"[", 
       RowBox[{"3", ";;"}], "]"}], "]"}]}], ",", 
    RowBox[{
    "Print", "[", "\"\<Warning! Different parameter sets!!\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nArray", "=", 
   RowBox[{"simulationInfo", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaArray", "=", 
   RowBox[{"analyticalInfo", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaArray", "=", 
   RowBox[{"analyticalInfo", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muArray", "=", 
   RowBox[{"analyticalInfo", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", "=", 
   RowBox[{"Length", "[", "nArray", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836639286956175*^9, 3.836639289846203*^9}, {
  3.836639338444769*^9, 3.8366393438580685`*^9}, {3.836639376142026*^9, 
  3.836639432929511*^9}, {3.8366394641255183`*^9, 3.8366394990326233`*^9}, {
  3.836727847038291*^9, 3.8367278554000444`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation parameters: \\nsample size={10000, 10000, 10000}\
\\nn={25, 25, 30}\\n\[Alpha]={2, 2, 2}\\n\[Theta]={3, 6, 10}\\n\[Mu]={1, 1, \
1}\"\>"], "Print",
 CellChangeTimes->{3.8366397835639906`*^9, 3.836640125931828*^9, 
  3.836640773025009*^9, 3.8366410554558*^9, 3.8366416506461496`*^9, 
  3.836641767437377*^9, 3.8366826850301247`*^9, 3.836684195033042*^9, 
  3.8367279039106474`*^9, 3.83672855339188*^9, 3.8367298593084583`*^9}],

Cell[BoxData["\<\"Analytical expression paranmeters:\\nDescription:generic \
pdf min eigvec asymptotic behaviour\\n\[Alpha]={2, 2, 2}\\n\[Theta]={3, 6, \
10}\\n\[Mu]={1, 1, 1}\"\>"], "Print",
 CellChangeTimes->{3.8366397835639906`*^9, 3.836640125931828*^9, 
  3.836640773025009*^9, 3.8366410554558*^9, 3.8366416506461496`*^9, 
  3.836641767437377*^9, 3.8366826850301247`*^9, 3.836684195033042*^9, 
  3.8367279039106474`*^9, 3.83672855339188*^9, 3.8367298593084583`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Histogram", "Section"]], "Section",
 CellChangeTimes->{{3.833939149224225*^9, 3.8339391544066596`*^9}, 
   3.833942334295156*^9, 3.8339465717534995`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"binsArray", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0.04", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "length"}], "}"}]}], "]"}], ",", 
      "False"}], "}"}]}], ";", " ", 
   RowBox[{"(*", 
    StyleBox[
     RowBox[{
      RowBox[{"True", "\[Rule]", 
       RowBox[{"use", " ", "as", " ", 
        RowBox[{"no", ".", " ", "of"}], " ", "bins"}]}], ",", " ", 
      RowBox[{"False", "\[Rule]", 
       RowBox[{"use", " ", "as", " ", "dx"}]}]}], "Text"], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"simVectorArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"simData", "=", 
        RowBox[{"simDataArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simVector", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"eigVals", "=", 
            RowBox[{"simData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"eigVecs", "=", 
            RowBox[{"simData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"u", "=", 
            RowBox[{"simData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "squared", " ", "absolute", " ", "value", " ", "of", " ", 
             "minimum", " ", "eigenvector", " ", "inner", " ", "product", " ",
              "with", " ", "u", " ", "x", " ", 
             RowBox[{"n", " ", "/", " ", "mu"}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nArray", "[", 
             RowBox[{"[", "t", "]"}], "]"}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Last", "[", "eigVecs", "]"}], ".", "u"}], "]"}], 
               ")"}], "2"], "/", 
             RowBox[{"muArray", "[", 
              RowBox[{"[", "t", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "simData", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"histArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"simVector", "=", 
        RowBox[{"simVectorArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hist", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"simVector", ",", "Automatic", ",", "PDF", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"colorArray", "[", 
            RowBox[{"[", "t", "]"}], "]"}]}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simDistArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"hist", "=", 
        RowBox[{"histArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bins", "=", 
        RowBox[{"binsArray", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"useBins", "=", 
        RowBox[{"binsArray", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simVector", "=", 
        RowBox[{"simVectorArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"min", "=", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Options", "[", 
            RowBox[{"hist", ",", "PlotRange"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Options", "[", 
            RowBox[{"hist", ",", "PlotRange"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{"If", "[", 
         RowBox[{"useBins", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"max", "-", "min"}], ")"}], "/", "bins"}], ",", "bins"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simDist", "=", 
        RowBox[{"HistogramDistribution", "[", 
         RowBox[{"simVector", ",", 
          RowBox[{"{", "dx", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max", ",", "dx", ",", "simDist"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "length"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.792716921993657*^9, 3.7927169258689137`*^9}, {
   3.79271964846093*^9, 3.7927196492421103`*^9}, {3.792720140278805*^9, 
   3.7927201448261633`*^9}, {3.7927202650396404`*^9, 
   3.7927203171547546`*^9}, {3.792723011209526*^9, 3.79272301138142*^9}, {
   3.7927254902229185`*^9, 3.792725507928113*^9}, {3.7927267230108337`*^9, 
   3.7927267244953785`*^9}, {3.7927267558579426`*^9, 
   3.7927267626867957`*^9}, {3.7927267941901045`*^9, 3.792726834694456*^9}, {
   3.7927276110387917`*^9, 3.792727638057331*^9}, {3.792727730145089*^9, 
   3.792727730926611*^9}, {3.7927278372033825`*^9, 3.792727904194947*^9}, {
   3.7927279405583463`*^9, 3.792727941933345*^9}, {3.7927283463358107`*^9, 
   3.792728434720228*^9}, {3.7927284748497047`*^9, 3.7927284756935477`*^9}, {
   3.79272852826145*^9, 3.792728568109459*^9}, {3.7927285987846365`*^9, 
   3.792728600784999*^9}, 3.792728689216117*^9, {3.7927553583583007`*^9, 
   3.792755447289663*^9}, {3.7927558326903462`*^9, 3.7927558414256554`*^9}, {
   3.7927558717880573`*^9, 3.792755896228352*^9}, {3.792755934841838*^9, 
   3.792755995363763*^9}, {3.792756066230689*^9, 3.7927560932336063`*^9}, {
   3.792756154771411*^9, 3.792756165788169*^9}, {3.7927561967914743`*^9, 
   3.7927562158872614`*^9}, {3.7927562634705114`*^9, 3.792756263782989*^9}, {
   3.7927569869694953`*^9, 3.792757009347055*^9}, {3.7927591001188655`*^9, 
   3.7927591004627595`*^9}, 3.7927598356349134`*^9, {3.792760201767528*^9, 
   3.792760212425111*^9}, {3.792760264415036*^9, 3.792760310623086*^9}, {
   3.7927603998826065`*^9, 3.7927604180251675`*^9}, {3.7927605430227227`*^9, 
   3.7927605451012278`*^9}, {3.7927605799955654`*^9, 3.792760616936859*^9}, {
   3.7931443755821257`*^9, 3.793144395115435*^9}, {3.7931448252363367`*^9, 
   3.7931448382219396`*^9}, {3.7931448765385914`*^9, 3.793144878820221*^9}, {
   3.7931457216448317`*^9, 3.7931457236919274`*^9}, {3.793159940323795*^9, 
   3.7931599777028217`*^9}, 3.7931601440017214`*^9, {3.7931603716038933`*^9, 
   3.7931603725414567`*^9}, {3.793160907001582*^9, 3.793160925175233*^9}, {
   3.7931609577879086`*^9, 3.7931609831187487`*^9}, {3.7931610558290277`*^9, 
   3.793161122414057*^9}, {3.793161166590192*^9, 3.793161177888384*^9}, {
   3.7931612461294518`*^9, 3.793161246410915*^9}, {3.7931654802841215`*^9, 
   3.7931655060442085`*^9}, {3.79316558583147*^9, 3.793165586094903*^9}, {
   3.793167504941453*^9, 3.793167512844742*^9}, {3.793167615642462*^9, 
   3.7931676192345734`*^9}, {3.793167653233672*^9, 3.7931676884493704`*^9}, {
   3.7931677593186607`*^9, 3.7931677606215796`*^9}, {3.793167889452487*^9, 
   3.7931679666359425`*^9}, {3.793170180991927*^9, 3.7931701814460936`*^9}, 
   3.7931706510510387`*^9, {3.793182637416662*^9, 3.793182645919332*^9}, {
   3.793841019854845*^9, 3.7938410206363697`*^9}, {3.7942821917344227`*^9, 
   3.7942822012354493`*^9}, {3.794282271414836*^9, 3.7942823342651415`*^9}, {
   3.7942823762854247`*^9, 3.794282377129279*^9}, {3.794292012122114*^9, 
   3.7942920346712513`*^9}, {3.7947130357857647`*^9, 
   3.7947130775089426`*^9}, {3.794713138437331*^9, 3.794713148047737*^9}, {
   3.794713210945096*^9, 3.794713214867587*^9}, {3.794714775862669*^9, 
   3.794714789848494*^9}, {3.7948072131543894`*^9, 3.7948072203426647`*^9}, {
   3.795052590276772*^9, 3.795052604450192*^9}, {3.7953476257491293`*^9, 
   3.7953476346493893`*^9}, {3.8130053525245466`*^9, 
   3.8130053604941807`*^9}, {3.813055047420185*^9, 3.813055057195303*^9}, {
   3.8131991159025235`*^9, 3.8131991228296804`*^9}, {3.814113070382267*^9, 
   3.8141130822106094`*^9}, {3.832102778950861*^9, 3.8321028188349676`*^9}, {
   3.832103455839182*^9, 3.83210347081199*^9}, {3.832103503104595*^9, 
   3.832103531436801*^9}, {3.8321036766623816`*^9, 3.8321037240542045`*^9}, {
   3.8321043552311153`*^9, 3.8321043558112907`*^9}, 3.8321048280672626`*^9, 
   3.8339392140337486`*^9, {3.833939292120079*^9, 3.833939398099626*^9}, {
   3.8339394491782417`*^9, 3.8339394618811812`*^9}, {3.833939509697234*^9, 
   3.8339395928767247`*^9}, {3.833939851560525*^9, 3.8339398736679535`*^9}, 
   3.833942104599371*^9, 3.833942144682706*^9, {3.8339422558721447`*^9, 
   3.833942282168523*^9}, {3.833942328168377*^9, 3.8339423644808626`*^9}, {
   3.8339425796000924`*^9, 3.833942700634673*^9}, {3.8339454382532387`*^9, 
   3.8339455113687735`*^9}, {3.833945551445715*^9, 3.8339455581146917`*^9}, {
   3.8339456235187635`*^9, 3.833945644183926*^9}, {3.833945678845346*^9, 
   3.833945804480352*^9}, {3.8339458360550065`*^9, 3.833945859929469*^9}, {
   3.8339459365396786`*^9, 3.83394607980399*^9}, {3.8339461256656885`*^9, 
   3.833946180585399*^9}, {3.8339462842436705`*^9, 3.8339464241354823`*^9}, {
   3.8339464676206007`*^9, 3.833946472207058*^9}, 3.833947846627905*^9, {
   3.833948266012673*^9, 3.8339482663971567`*^9}, {3.833948751930589*^9, 
   3.833948783757655*^9}, {3.8339488357549934`*^9, 3.8339488497797384`*^9}, {
   3.8339662486453557`*^9, 3.833966268619525*^9}, {3.8339663042272425`*^9, 
   3.8339663097777476`*^9}, {3.8339676154570503`*^9, 
   3.8339676172098317`*^9}, {3.8339712165571613`*^9, 
   3.8339712192214017`*^9}, {3.836523207733431*^9, 3.8365232167866735`*^9}, {
   3.8365232952230186`*^9, 3.836523336811228*^9}, {3.836523503688696*^9, 
   3.8365235047876186`*^9}, {3.836524600150215*^9, 3.836524611572586*^9}, {
   3.8365248166214056`*^9, 3.836524851454818*^9}, {3.8365300300203295`*^9, 
   3.8365300400932517`*^9}, {3.8366395150674553`*^9, 
   3.8366395346598787`*^9}, {3.8366395721920404`*^9, 
   3.8366395758325644`*^9}, {3.8366396152324657`*^9, 
   3.8366396254956408`*^9}, {3.836640813892335*^9, 3.836640815481835*^9}, {
   3.8366414979765234`*^9, 3.8366414989322906`*^9}, 3.8366885002270775`*^9, {
   3.836688541868786*^9, 3.8366885441064973`*^9}, 3.8366886293619184`*^9, {
   3.8367285999207077`*^9, 3.8367286430934315`*^9}, {3.836729244263754*^9, 
   3.8367292446644816`*^9}, {3.8367298855484805`*^9, 3.8367299074283686`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.83394770273746*^9, 3.8339477064530706`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gStart", "=", "1"}], ";", " ", 
  RowBox[{"gEnd", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newMin", "=", "0"}], ";", " ", 
  RowBox[{"newMax", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"legendCoord", "=", 
    RowBox[{"{", 
     RowBox[{"0.85", ",", "0.75"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stringArray", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<\[Theta]=\>\"", "<>", 
       RowBox[{"ToString", " ", "[", 
        RowBox[{"thetaArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"\"\<\[Mu]=\>\"", "<>", 
        RowBox[{"ToString", " ", "[", 
         RowBox[{"muArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}], "<>", "\"\<, \[Theta]=\>\"", 
        "<>", 
        RowBox[{"ToString", " ", "[", 
         RowBox[{"thetaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}], "<>", "\"\<, \[Alpha]=\>\"", 
        "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"alphaArray", "[", 
          RowBox[{"[", "t", "]"}], "]"}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "gStart", ",", "gEnd"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gStart", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"gStart", ",", "1"}], "]"}]}], ";", " ", 
  RowBox[{"gEnd", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"gEnd", ",", "length"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"legendPlotted", "=", "False"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oldMin", "=", 
   RowBox[{"simDistArray", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"oldMax", "=", 
   RowBox[{"simDistArray", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"newMin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"newMin", ",", "length"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newMax", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"newMax", ",", "length"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotArray", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"min", "=", 
        RowBox[{"newMin", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{"newMax", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{"simDistArray", "[", 
         RowBox[{"[", 
          RowBox[{"t", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"simDist", "=", 
        RowBox[{"simDistArray", "[", 
         RowBox[{"[", 
          RowBox[{"t", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hist", "=", 
        RowBox[{"histArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"color", "=", 
        RowBox[{"colorArray", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"thePlot", "=", 
        RowBox[{"If", "[", 
         RowBox[{"legendPlotted", ",", "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"anaDataArray", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", 
                RowBox[{
                 RowBox[{"Length", "[", "anaDataArray", "]"}], "-", "1"}]}], 
               ",", "t"}], "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"anaDataArray", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", 
                RowBox[{
                 RowBox[{"Length", "[", "anaDataArray", "]"}], "-", "1"}]}], 
               ",", "t"}], "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{"colorArray", ",", "stringArray"}], "]"}], ",", 
               "legendCoord"}], "]"}]}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"simDataPoints", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", 
             RowBox[{"dx", "/", "2"}]}], ",", 
            RowBox[{"PDF", "[", 
             RowBox[{"simDist", ",", 
              RowBox[{"x", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "min", ",", 
            RowBox[{"max", "-", 
             RowBox[{"dx", "/", "2"}]}], ",", "dx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"simPlot", "=", 
        RowBox[{"If", "[", 
         RowBox[{"legendPlotted", ",", "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", 
           RowBox[{"simDataPoints", ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Purple", ",", "Thin", ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "6"}]}], "]"}]}]}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"legendPlotted", "=", "True"}], ";", 
           RowBox[{"ListPlot", "[", 
            RowBox[{"simDataPoints", ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotMarkers", "\[Rule]", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Purple", ",", "Thin", ",", 
                  RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "6"}]}], "]"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<Simulation\>\"", "}"}], ",", 
                "legendCoord"}], "]"}]}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"thePlot", ",", "simPlot", ",", "hist", ",", "color"}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "gStart", ",", "gEnd"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plotArray", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"plotArray", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "[", "newMin", "]"}], ",", 
         RowBox[{"Max", "[", "newMax", "]"}]}], "}"}], ",", "All"}], "}"}]}], 
    ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0.0", "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(f\), SubscriptBox[\(V\), \(1\)], \((\
\[Alpha])\)]\)(v)\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<v\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Automatic", ",", " ", "15", ",", " ", "Bold"}], "]"}]}]}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"histArray", "[", 
         RowBox[{"[", "All", "]"}], "]"}], ",", 
        RowBox[{"plotArray", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"plotArray", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "newMin", "]"}], ",", 
          RowBox[{"Max", "[", "newMax", "]"}]}], "}"}], ",", "All"}], "}"}]}],
      ",", 
     RowBox[{"ImageSize", "->", "Large"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7927204376706123`*^9, 3.7927205398846893`*^9}, {
   3.7927206855097404`*^9, 3.7927206883381643`*^9}, {3.7927208085695515`*^9, 
   3.79272082068042*^9}, {3.7927208646850953`*^9, 3.792720874967448*^9}, {
   3.7927240402077775`*^9, 3.792724313424281*^9}, {3.792724355913145*^9, 
   3.7927243933077583`*^9}, 3.7927256775398073`*^9, {3.792725756376341*^9, 
   3.7927257636741505`*^9}, 3.7927267361683*^9, 3.7927274103923893`*^9, 
   3.792727552157349*^9, {3.7927285785326376`*^9, 3.792728585330077*^9}, {
   3.7927554750428057`*^9, 3.7927554888098917`*^9}, {3.792755825329982*^9, 
   3.792755827080171*^9}, {3.792756296755311*^9, 3.792756728488816*^9}, 
   3.792756766539749*^9, {3.7927568207642736`*^9, 3.792756837078695*^9}, {
   3.792757063321395*^9, 3.7927570671655526`*^9}, {3.7927592476190653`*^9, 
   3.79275925710427*^9}, {3.7927596793055534`*^9, 3.7927596830090714`*^9}, {
   3.792759931738723*^9, 3.792759944443206*^9}, {3.792760108757646*^9, 
   3.792760126525332*^9}, {3.7927603346723795`*^9, 3.7927603624721622`*^9}, {
   3.7927604905172524`*^9, 3.7927605400379753`*^9}, {3.79314441175782*^9, 
   3.7931446041968813`*^9}, 3.7931446433417387`*^9, 3.793144970658036*^9, {
   3.793145130315708*^9, 3.793145167991605*^9}, {3.793145276206503*^9, 
   3.7931453183983383`*^9}, {3.7931453486360064`*^9, 3.793145413736843*^9}, {
   3.793145502808754*^9, 3.7931455042151055`*^9}, {3.7931612081881695`*^9, 
   3.793161220454987*^9}, {3.793161665891099*^9, 3.793161686640335*^9}, {
   3.7931617215144343`*^9, 3.793161738764099*^9}, {3.793167565559187*^9, 
   3.793167584520938*^9}, {3.7931676341132293`*^9, 3.7931676345297203`*^9}, {
   3.793167840852107*^9, 3.793167899155903*^9}, {3.7931680320958605`*^9, 
   3.793168280769622*^9}, {3.7931683515718727`*^9, 3.7931683573722763`*^9}, {
   3.793169159317032*^9, 3.7931692351934013`*^9}, {3.7931692690650687`*^9, 
   3.793169328615015*^9}, {3.7931693593147445`*^9, 3.7931693716082025`*^9}, 
   3.7931694588303027`*^9, 3.7931694910437765`*^9, {3.79316952692472*^9, 
   3.7931695560055113`*^9}, {3.793169589095931*^9, 3.7931696318150935`*^9}, 
   3.7931696668095007`*^9, {3.7931701351292353`*^9, 3.7931701474239483`*^9}, 
   3.793170209701665*^9, 3.793170341824746*^9, 3.7931704913851876`*^9, {
   3.7933140510106716`*^9, 3.7933141062195835`*^9}, {3.7933264239885707`*^9, 
   3.793326437349166*^9}, {3.7933265010591645`*^9, 3.793326514154114*^9}, {
   3.7937870022900605`*^9, 3.7937870243705435`*^9}, {3.7937870853302016`*^9, 
   3.7937871298972874`*^9}, {3.793787498764888*^9, 3.7937874990774727`*^9}, {
   3.793787608573717*^9, 3.793787648280904*^9}, {3.7937878241591473`*^9, 
   3.7937878325664406`*^9}, {3.7937879442502337`*^9, 3.793787954767009*^9}, {
   3.7937885543935237`*^9, 3.7937885546749754`*^9}, {3.793788607274229*^9, 
   3.793788669171426*^9}, {3.793788716817339*^9, 3.793788792559635*^9}, {
   3.7937888246724524`*^9, 3.793788848472065*^9}, {3.7937891461670666`*^9, 
   3.7937891553241644`*^9}, {3.7937893152943506`*^9, 
   3.7937893564395547`*^9}, {3.7937894319005957`*^9, 3.793789443823735*^9}, {
   3.793789561727194*^9, 3.7937895955432835`*^9}, {3.7937897052111454`*^9, 
   3.7937897277761927`*^9}, {3.7937900592335653`*^9, 
   3.7937901079575267`*^9}, {3.79379032246467*^9, 3.7937904031139283`*^9}, {
   3.793790880758834*^9, 3.7937909492036505`*^9}, {3.793791026837141*^9, 
   3.79379108742177*^9}, {3.793791177712473*^9, 3.79379119322996*^9}, {
   3.793791266268877*^9, 3.793791306242056*^9}, {3.7937914764475827`*^9, 
   3.793791481823351*^9}, {3.7937915230932455`*^9, 3.793791538469878*^9}, 
   3.7937922181051097`*^9, {3.793792384048901*^9, 3.7937923985971518`*^9}, {
   3.793792441305024*^9, 3.7937924606821127`*^9}, {3.7937949194538107`*^9, 
   3.7937950280591373`*^9}, {3.794283146399127*^9, 3.794283151555732*^9}, {
   3.7942832327831745`*^9, 3.7942832986654196`*^9}, {3.794283479887951*^9, 
   3.7942834801223545`*^9}, {3.794283665610945*^9, 3.7942836660641212`*^9}, {
   3.7943399565755253`*^9, 3.7943399569816575`*^9}, {3.8325739774057813`*^9, 
   3.8325739786112247`*^9}, {3.8339477244935045`*^9, 3.833947791756817*^9}, 
   3.833947857012262*^9, {3.833948019701522*^9, 3.8339480220023155`*^9}, {
   3.833966170683221*^9, 3.8339661960891523`*^9}, {3.8339663722749195`*^9, 
   3.8339663732921267`*^9}, {3.833966455765829*^9, 3.833966591897829*^9}, {
   3.8339666382385187`*^9, 3.833966661103859*^9}, {3.833966708530898*^9, 
   3.833966955606326*^9}, {3.8339669993215785`*^9, 3.833967019841997*^9}, {
   3.8365237013773365`*^9, 3.836523737333765*^9}, {3.836523769275172*^9, 
   3.836523769650664*^9}, {3.836523895614987*^9, 3.836523896216544*^9}, {
   3.8365240706433616`*^9, 3.836524084381627*^9}, 3.836524333980982*^9, {
   3.836524724557563*^9, 3.8365248054752884`*^9}, {3.8365250695049477`*^9, 
   3.836525080953438*^9}, {3.836530145555211*^9, 3.83653028391574*^9}, {
   3.836530319554166*^9, 3.836530335748864*^9}, {3.83653042852517*^9, 
   3.836530463802006*^9}, {3.8365305025868716`*^9, 3.8365305598809366`*^9}, 
   3.8366396104213233`*^9, {3.8366396432353516`*^9, 3.8366396981227736`*^9}, {
   3.8366398426139174`*^9, 3.836639845200807*^9}, {3.8366406478589935`*^9, 
   3.8366407345718036`*^9}, 3.836640805021759*^9, {3.8366408531530685`*^9, 
   3.836640903525467*^9}, {3.8366414735523825`*^9, 3.8366414889415274`*^9}, {
   3.836641571660539*^9, 3.836641572077185*^9}, 3.8366417952894325`*^9, {
   3.836641887460048*^9, 3.836641926982744*^9}, 3.83668374020531*^9, 
   3.836688170468704*^9, {3.8366882595414553`*^9, 3.8366883724830194`*^9}, 
   3.836728572892299*^9, {3.8367303166732874`*^9, 3.8367303681965075`*^9}, 
   3.836730399750534*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], LineBox[CompressedData["
1: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
TNh3xt9NjLYV+5gHtucGTXySNVn/ByM1Vh4=
         "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], LineBox[CompressedData["
1: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
br8m1YckfHktfvRqTZ/m/wFfdESY
         "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
       {GrayLevel[0], PointSize[0.008333333333333333], AbsoluteThickness[1.6],
         LineBox[CompressedData["
1:eJxV2nc8lf/7wPFjc6wzRCTSoFKitHDO+0oikkJJpbITiQoNShqUikLLp2GU
RMkMTSU0URQqsvfe2+98u69/fuefHj45932/r+f18uk8SsXew8KJn0ajtQjQ
aP/79f+/VMFXJsmo5rgXUXVreBb5fS5+fZYs17c6YZUxB7KUzrWZZ4WQsTY+
G6uHs/H3I4hz6QeNjw9VIPLWvxep8n/J35IxC7//Lrk5dG2kP1oZ2s3/91+i
SXsh5+rN7pn4/vvko1WQkruVItDLYj059IfEps+wVfu7Al7vEVHN7+fk2svD
ApvQdwPzH5Ovtq+PjwlPx+snkU3h0pziV7Jwn/fusthkMhHadFE/cBreL4Vs
zLVm2+2RgWX/XmnkpUPkPqP1bLx/OpnZqbB7JrAgd2A+7w4ZRPg03ULWkInP
k0kq9v6+5bmdARbUDUnogG9hS68UPl82cQs08mkzkYSa4/+74HOSfDHz9Z1s
cXzel0S68k3hRw4dDv7v8TxfEflZtR7GP0Xx+V+TJI/1C4VPiwDlkEP05rLc
h4kwnieHHIlXf6cqLQTr/93gLXm+gi35oFMAz/eWqH/vLwmv5If/3Y13S9JZ
HBqm/JsPz5tLUmv2yJ5qpMG/45TlEm+jaQVdE1OEOv97EuS8zOCh0SRR/t/j
KOURyT4l1ZL4cULNI480mfyUXzprjOx1/t8rn2g2u02GPx4h1HwKiHX+oZFy
02Hyv6vJJBWQgyrCN7unBgk1rw/kfcWbsfL3A2Twf5cb+EBcBEZZdyP7CTW/
j+R5S85v61N9hPvvgp9I4LS6ZA3vXkLN8xM5/SIiavPRHvLv8c59JjIOc76M
nu8m1Hy/EOUVvlFNpl3k65d/L+Llnuo6PaqDUPP+SvY8vVqkS28n0/49YCER
HdU4IBfcSqj5F5Jb9ZeyApRayL/L2RSRyttKknb5TYTyKCayftF/Ek414nmK
Sfqq2N/2pg2E8ikm5/JkSOT8ejwf7/tPWgh4yNQRyusbebydxRGXrsXzfiPb
LiQfvi9XQyi/b4SltkPQd3E1nv870R5YNSPtXhWhPL+TqJTPefPH/+A8vhOZ
cFlplsdvQvmWkKGGMjvdoQqcTwlZcyv6bkB4OaG8S0h/nLXON/0ynFcpqfie
5zJP8Cf6l5LF+8Msgn6W4vxKCf2mjJVkdgnuww8SKbbN4lfCd5znDxI/WjSm
mPgN9+MHmZOpryOdXYzz/UkMNt9WantYhPvyk8gLO9A5g19x3j8JU++Jyfud
X3B/ykj+3wPt+mWfcP5lRKXlMO3S3o+4T2VEVs0w9bT4B/QoJ/sDLrnJv8tH
j3Ki+3GVgHlwHnqUk2XWtUMrHd6jRznpdEpPb9mQix4VRHTRnurLa9+hRwU5
nnY6Y5vxW/SoIHG+TMdzNjno8Yv4cWwHXw+/Jlf+efwi7y11n3lufoUev8gn
TfddZa9foMdv0nBxS/kL/efo8ZsM+9Kyh35locdv8ll9lqVXYCZ6/CEfxlTr
Fxg8Q48/JO/PRL4SOwM9/pDRmNhU59409KgkhkGqArNrUtGjkjQz90mcqEpB
j0oSSBb5PG1JRo8qEvj3b9QYXzJ6VJFLnQHzbDYmoUcV6S6Ir1id9Bg9/pIF
cvcLzeYlosdf8sp+eYJryiP0+EuaW5/udDePR49qUubwU89Q8CGep5qsD3/E
7fvwAH2qiZ/uWZVTd+/j+arJxRMtmUJnY9GrmpxSPbzs0dEYPG81aV261fc/
32j0qyblpO/i9EtReP4a4rlJ7vVXi3voWUOidgtlPXlwB+dRQ0j9y3tnpW+j
L+9rZ5kKudBInE8NmUgdvcOZcwu9a8iXA0Vyfz7dwHnVEqFL7HPNZ6+jfy1Z
Gf7B1XnzNZxfLXn8pKrYeVEE9llLhAflL4hMD8d51pIHj//6H2KF4X7UEv//
HGQrFa7ifOvIvRUZ54I0r+C+1JFfhU4RRx+E4LzriGJd9eJ7fJdxf+qIFcso
muN1EedfR2ZI7FGeNX4B96mOLDGsNJ9z8zx61JPMhqxjy4yC0KOe7DKIuLVB
NBA96knjvfBEr19n0aOe/NkpVPv+5Rn0qCeRd416dyedRo96osW/Z9/BpAD0
qCcGYdliK16eQo8GolAODrVP/NGjgQTMfBdeO3YCPRoI/YrvUUU7P/RoIJO7
vGvN/xxHjwbi8/D9o637j6FHAym3WfeezjiKHo1kcXuRi0O+D3o0khmZhGsb
4o0ejWTDofhr0nu90KOR3Fit8vTSpsPo0UiebY0QnTI8hB6NxNeL/uyW6UH0
aCI73breRe7xRI8m8kUlceW1yQPo0UTyIgNpQ1vd0aOJuPmuHma+d0OPJmK+
+XRxkpErejSRhxp9dXF/XdCjmai5PzOvC96LHs3kkVzwPJv1zujRTIQ/mlyU
k3NCj2bieMlDcsGgA3o0k7PV1ZXJ9fbo0UxCx2/P/11jhx7NJF8q1uNvuy16
tJDynXFdU4K26NFC9JpUFFiWu9GjhcSSD1ej02zQo4UcvTrt+P6FO9GjhWjH
eBD9Z9vRo4Vkv/obyW9ljR6tpNc+P/W26Db0aCXeMqeNpL5uRY9Wcv2GU5t9
zBb8edlKHiTZr0sLskSPVjIZ93PXXD8L9GglnLaO/saT5ujRRkxWz6hdEboZ
PdrInLWmw+nWm9CjjSRznrEMEjeiRxsRevv7QKGMKXq0Efvk9cvlI0zQo42U
+3/dO6pmjB7tJNj48ei2IiP0aCeGKrNGVS8Yokc7SXS79sJ1yzr0aCdbJPvk
tTUN0KOdtJbbvIyasRY92kn767/Ov6bpo0c70evx3yKrtAY9Okiwx/zIiGWA
Hh2E81BwLknkokcHkT8QcEdWhIMeHeTbvuZFrsd00aODmOdMfBDi00GPDmIs
F1Kfd3sVenSSMwM3L13fsBI9OompyNWwQxIr0KOTPEqXeGdfpY0enWShpYnK
iZxl6NFJ/kb36danLEWPTjKoHnEkP0ULPbrIizTOwV1vNNGji5zPzS74lbYE
PbpIj33I4gt8GujRRZJrZsd7Oy9Cjy7y3uH8F7uahejRRdYEsHRmHVyAHt1k
oUZDcrjMfDxPN3n4mbY86ZMq+nSTal0VjmfYPDxfNzk9+rW9yXUuenWTrS18
2zUt55B/x3XuJjNSKn56msxGv25ydvcbyz+bVPDnQzcZ17n6LNl+Fnp2k/yE
q2H7BZVxHt0ELu/cenLnTPTtJmkdG0I3fpyB8+kmn1V8MmNMFdC7mwQX1Hdb
1U/HefUQIb9lqpahcujfQ7g37bRCTWVxfj3E8MwKaeaMabgPPSRL4dbM9hE2
zrOHFGgZOEIzC/ejh3xZYNK0uoGJ8+0h6utq+BndDNyXHvIwYKRIUJSB8+4h
8cuMZn+0lsL96SH7fZLM6NkSOP8esnz5dsWLS8Rxn3qI1gPD1wovxNCjl0TW
qmfe3CGKHr1E9vzESJ+ECHr0kt8JB2QXfhNCj14y3/mtp2GcIHr0kg9NG8/a
XRTA/eslOSsXa0b586NHL2GW+kkuO82HHr2k6X5m4dYwGnr0kuS0TZvu7J7i
Uh69xLVw6Pjv5Aku5dFLesyVOPIK41zKo5dctxg5PePWKJfy6CUcK03ZrEUj
1OPR+4hfa2VGackQl/LoI8KfO3SdLw9yKY8+IrpGo9DDeoBLefSRkx5eCvza
/VzKo49El+ve0VHu41IefeTQaa1effleLuXRRy6XztbYrNLDpTz6yIngojUx
K7q5lEcfcRg2/iSc0smlPPpI/ESVTKhEB5fy6COStxek3jjZxqU8+ohSQPXu
dqFWLuXRTw4tqLLaF93MpTz6ybrUWYdHNzVxKY9+kvqjxjKS0cilDtxPQvao
XDevredSHv3kr7GQzIr3dVzKo5/MZfgucc2o5VIe/eT268uqihk1XMqjn+zN
bfM8966aS3n0E35zjmlp9l/06CdfF4+VaYpUoUc/GflQUlHk9gc9+smRrh8J
hxp/oUc/yZ48n9LmXYEeA6St0OzoTPly9Bgga5UNi0cKf6LHALkL/LSA6z/Q
Y4BsrPaeyDlQih4DZHrgkdRSqxL0GCDCwWYb6jZ+R48B8orxJkTZ8ht6DJDi
PhYpcCpGjwEi0bZeZB29CD0GeJ9/29OF7b6ixwDpZpXODi78jB4DZHLK5vIN
80/oMUgGK6f+irR8QI9Bsjr+TXFueAF6DBL9ByUiuZvz0WOQOMxvsBBXzkOP
QTLdT7/u6UQuegySvFLP68Vt79BjkJitCl1/q/ktegyS1koBzTV9OegxSBa9
6V9DF89Bj0HinDOPG7D7NXoMkttXLzG8Xr9Ej0ESEHgnI0H7BXoMktOHGlX7
32SjxxDREXqdvGRPFnoMkXkGsSxTZiZ6DJGShIhEwx8Z6DFElow/T1mYkI4e
Q2T81hcvRmgaegyR7/7XExTPpKLHEEmqVc7zP5eCHkPkaGW9ufe1ZPQYIjSz
bbmBjk/RY4hoVI13H372BD2GyI3H6XQn5cfoMUQciyzfKd1NQI9hYmts9shH
6xF6DJNs2cvGFuUP0WOYDCrHmsRdjUOPYTLnVmaMt80D9Bgmb5zOfS9eeR89
hkn/4zL1H7Nj0WOY/O3sU3msGMOl/v85TKoi9sUGz41Gj2Hisy7fL3l1FHoM
k5Z1rkFFz+6ixzDhM1SPEGXdQY9hsiN9tVb+mf/QY5hY/VhWU0KPRI8RciZ6
KF4y7iZ6jJD/po4s3rPlBnqMEHfPx5XvZK6jxwgxsxlQW9MYgR4jhMuyft5V
EI4eI+Rk+8SX7qww9BghgcKuPoeyrqLHCAk6UC2alHcFPUbIqY98PYVvQtFj
hCz5qxteIRGCHiPEqOm1pPrBS+gxQoZFLp042xaMHqPEOtmSkXX8AnqMkjfH
ExXiZ55Hj1HyqSNfx7AkED1GyZ4MkaCwyHPoMUreyecWRB46ix6j5Ktq7Itj
O86gxygxWspytjI/jR6j5MsStb0OVgHoMUpO3L9iU+VyCj1GSeek0HUlhj96
jJJANzflK84n0GOU6PjzpRWU+KLHKHHqc7C4bHUcPcaIOdMjJbvjKHqMERvj
M+bLbx5BjzFi5y78aGiLD3qMkel/jlsJz/FGjzEyr+Hybi8+L/QYI4kLgrzs
ug6hxxi5+iXYdKTtIHqMkdgKtaFDg57oMUbSg9LWMaQ80WOMTJ3pcddxPIAe
Y6TiTXhZVe5+9BgjUiym4efVbugxTozlfY8Vvt+HHuNEpeJNUIGDC3qMk+3S
f8fvT9uLHuPkm4e8iGOFE3qMk+AM7yTpJEf0GCcuejS5nDAH9Bgno+pLv94K
tEePcfKTOTDj63k79BgnumvfuF27aYse42Tiw80tB133oMc4kTUY9pJ8uQs9
xol9V2FZylwb9BgnK1PP9c2O3YEeE+Sal4XKihXb0WOCiPxXm1H8Zxt6TJCC
V86qTdes0GOCdNKsVvvZbkWPCcI4v14/SncLekwQbRlzF09VS/SYII18hoPT
ZlmgxwThBB1Mz1MzR48JctVh/oY3epvRY4KsmRm589ZLM/SYIIWCN2eckduI
HhOkL98oYeD8BvSYJCtN525+KW2CHpPE4LHg79SE9egxSew+5L94b22EHpPk
xj1ZzfbphugxSW67Pz6i1WqAHpPk3VlHmYTPa9Fjknwit2WOvtRHj0kSs9Vo
78cXa9BjklTsXbW67AOgxyRROsV59imPoMckEao9s+cMi4sek2SgUcYgyEcP
PXjf/6rc4Ea3DnpMkXyNu1bn/FejxxSR8J57c9nsVegxRci6BK/wshXoMUV2
XrX6fv/ucvSYIodjyzd4+2ijxxQZbn7gpbx7GXpMkYd8BmqftixFjylCd55W
+XC7FnpMkT+2qtKDbproMUUSJSa5I9OWoMcUOdZKv6awfzF6TJGkIgEQrlBH
Dxq8kcgSPrtzIZ6HBkJiu5z2985HHxoYvo6Lf3hbDc9Hg2DVWdMWb1dFLxqI
fpyhwK82D89Lg59X7oSuFpqLfjTwvf5wsrd3Np6fBk+u7Ozb3qWCnjQI4rpa
PxiZhfOgwTdL89+yzFlc6vMMDfj8q1L69ynhfGggsXog1uSjInrTIM699ms7
dwbOiwb9yZrPHn2Uxz8/0CBZfqeerct0nB8NtPaVZ03Ky+E+0OCSzewFpyun
4TxpsK9fZu9AigzuBw16TeluntfZOF8aCHQp35QLZuG+0IDYK7BmXGLivGnw
WNdB8dl/DNwfGtg3GAvs8pTG+dPgQbWiSPxbSdwnGtSvuXN/aoEEevDB35CX
svPj6ejBB6Zje08O6oihBx+83SAytqlGBD34INB4T9H8SGH04ANZCY2wM45C
6MEHDO/qfZ5EED34IPL7BwuJhQLowQdPXxt6nJrDjx58oCZsbcenzocefLDm
CfNJIaFhb3ygLCtl5PhukkN58O7Hty1xUnGCQ3nwQXv36ZmqIWMcyoMPHE9U
JT6QGeVQHnxw8OSSDuunwxzKgw+YU9pK6ruGOJQHH9xcarhBduYgh/Lgnc/G
9dzszn4O5cEHSadMZzsV9XEoDz4QkPcRpuX0cigPPqgXMBiZ9aaHQ3nwgfte
Bj/fl24O5cEHDd9Ubxd87uJQHrx5JghzNKZ3cigPPojwFT5R79vOoTz4gai1
0hIHWjmUBz/UK0SctTzbwqE8+KFVtK77jWozh/LgB0lduZM1vxs5lAc/b97s
2syYBg7lwQ8PT1Vc2Hy8nkN58IN8d1Rlnl0dh/LghyNbBUK51rUcyoMfNjk8
7G63qeFQHvygpt9tJeVRzaE8+KHBwJn/x4y/6MEPqroT0+IOVqIHP+xJoH9a
V/UbPfhht1Nggq/tL/TghyCv/jHloXL04Icqd4ufCtFl6MEPSlJGpg67fqIH
P1jMar8zufAHevBDak64z5RoKXrww76gXu1zg9/Rgx++ac/ivOj9hh6855ve
bFk+Xowe/CAd3cKvJFOMHvyg8mIWPdmjED34wYVb651Z+AU9BCBuJWyUNviM
HgKgv31Z5bnCj+ghAMzg7MKR/R/QQwD4Kp4ZblcqQA8BuPOrlBldk4ceAtCq
8vL374z36CEAKzdJHFSJzEUPAcgI8Be/fvkdegiA6K8nD/eFvkUPAXiu1eFQ
djcHPQRgyYGoImOfN+ghAPx37zxcW/AKPQTgVemmg2ZLXqKHAHzgU12k8eQ5
egiAgtjznEySjR4CQITmyhc3ZKKHAOR6pK1zu/sMPQSAttXxyUWXDPQQgJ/f
PIzXrE1HDwG4nbqnLX5xGnoIwGONaZfbVFPRQwASDuokcDRS0EMABLrvxFTp
J6OHACz9Pmqs+SEJPQQAxCPX+s5+gh6CwLFWuLgtPBE9BHk9hPaHyieghyDE
bIn5O5UWjx6C0HSndUuY3UP0EISfU7ZL1qjEoYcgqI5YmMv03kcPQZBr06qf
VRKLHoKw6HJizPncGPQQhOcHTi469i4aPQTh28JzDupFUejBez7V/pi8b/fQ
QxBuZA6p/5p5Fz0EocXufZZ+wG30EIT9eztT3oxGoocgFM60i5x94RZ6CIL/
Bca8jeo30UMQdNq1t2lWX0cPQeg64fjsc9w19BAE7RfNAYtORqCHIPA7Zwzu
dwpHD0Fwu+pxJ21nGHoIArtyNHqp7VX0EIQMZ7q22qEr6CEIW2sPV6eohKIH
7/lee8UsPXIZPYRg9+t15oF1F9FDCOjK4xwvp2D0EOL52XqXjp1HDyHYkZ/0
K+RBEHoIgb9LtFmkXSB6CIGGAqN2TOMcegjBzZdh7HyJs+ghBDkHzstNHz2N
HkKQeWBowczBAPQQgtgjr1vEaQHoIQTc3hsv58mdQg8heGTa7rPf+yR6CIGz
wqWN80r90EMI1shtf7/U2Bc9eF/rPO20LzmGHkJwfUCQRBw8ih5CsK4jOi59
9hH0EILjO6ze5jR4o4cQFDwJkcjN9kIPIcj4qrag5M5h9BCCbzGeatOuHkIP
IZA69/VPVthB9BCCE9eO6Y9Ee6IHb56rv2ev9PNADyFo93hiVf3FHT2E4UGN
LPeu9n70EAZactey5amu6CEMd78dbj5msA89hMEg0Y5h3roXPYRBrf7ChaQY
Z/QQhhUnZl6M2O+EHsLQaSxfwzJyRA9hqDm7YqmhlgN6CEOdbfGmbQvt0UMY
DixZEXpcyw49hOH+ZLN61zpb9BCGo+MRjhNfd6OHMChMhNUPq+1CD2F4q87p
u3BzJ3oIg94N+4W+SjvQQxiSDwelPsyyRg9h2B0nbTvqtA09hCG6/tKf/fOs
0IP3foXg38KDW9BDGKaerthR+dMSPYRha6ZNC7PAAj2EwWZEhu97njl6CEOx
V9ouq++b0UMYQrp+f3pftgk9eOe9ErwoaI4ZeohA3R7/oehAU/QQAaeHbOsf
UyboIQI5zZo3ey8bo4cIHDb/qf17yXr0EIEhv4W0U/WG6CECrvfcN1UnrEMP
EfBxWKAtdtoAPUQg6bhgjsy+teghAm1K8RYL9uijhwgcCVncc9RhDXqIwIre
K3HgDeghArQFNhWhagQ9RGBadaxOjh8HPUSgNLf+R0GzLnqIwDJHw7furjro
IQKdlz59u0BbjR4icI9TnyGQsBI9REA0YKvid6cV6CECjwcSG0eWLkcPEZhe
8tL5MkMbPUSg/f2FuMSJpeghAr0jU9n+I1roIQLWh+kKIKCFHiLwrOiIqIaC
JnqIwCpz7+EFvhroIQoFs+aqR1QsQg9ROPRy57JtZuroIQpbzxa3QvkC9BAF
3SV7Ly/xmY8eojBN7205Q00NPUSh3fLLypqWeeghCjpSySMJr+aihyiUWJ8M
Pxc9Bz1EYb4cuz0iYjZ6iEKj140U0esq6CEKfn/mZs14MAs9RGHXvGnvVE8r
o4coRFn6y5z8PhM9RCEwcbZ412pFDvX5UxTEjYw0OJkK6CEKtVdyBvSM5dFD
FHYvaKn+3imHHqLgbCf2X2+cLHqIwqLFJ9Xvek5DD1F4HDql2WAigx6iwJ11
QK1em40eomDgeiMzdzELPUR5f/5zYWRpM9FDFEJSpIxpxgz0EIUdJswbn0uk
0EMMfmQfDjmyWBI9xGB5rILVqzvi6CEGOhXnNu6dQ0cPMVgxX8x58ytR9BCD
ZJUvxMFVBD3EICOvy+LWAmH0EIM5d5bNHR0RRA8xcHnrdzbylwB6iEFS1qNf
/33iRw8xKJRQPaL+kQ89eNeXzOoO+EFDDzFY90hGJq9ySo/yEIO8/F7u8gWT
epSHGOQauKzmvzSuR3mIQaD8+b42wTE9ykMMTi5fcjI3bESP8hADi9xds1y1
h/UoDzGImK58rLh5UI/yEAMZky1PBpIG9CgPMbh/5XVU47l+PcpDDJ44Pl39
an+fHuUhBgz3L0n37Hv1KA8x6F+5q+qNc48e5cH7famopB1Hu/UoDzHo3rul
48DiLj3Kgw5h7FdVZqc79CgPOhz1lbOmd7bpUR502LY3TNvFo1WP8qCDxtvd
TBBq0aM86GBuPsPlWFKTHuVBh8aECxl010Y9/IAJi4brEodXNOhRHnRotdb2
3CpTr0d50CFYVK6W8NXpUR50GLhh3VE7XqNHedDhgFpLvZdwjR7lQYe9+fcb
V8ysRg86rOnuCmk+VYUedMhM+i0l+PcPevDu99cn0s/yN3rQQdYz95tyZQV6
0OE2k/788/Fy9KDDQ3u9Snf1MvSgw+d1Nt78nT/Qgw5vc9bGhr8tRQ86pAZp
Ja96UIIedNB7FLh92s3v6EGH8zkLVLff+oYedBgNEM/jxhejB2/+iveaZc8X
oYc47N9sWKNY/hU9xKH3RGw5kC/oIQ7HTuyYYfjyE3qIQ1Pw52aa2Uf0EIeO
Q3XBW/sK0EMcFBOsj69MzEcPcXjJTgyJ98pDD3G4uXPd6iyz9+ghDoV2ap9P
r8pFD3FIdrrwXlPrHXqIw0bLrsWDK9+ihzh8bFg4yjTNQQ9x6D5+vyay4jV6
iMN8jQNrhpa+Qg9xmDtVk9YT8wI9xIF9ft7uLfOfo4c4BOSbj468zUIPcdCf
tb7/y4FM9ODNI+RpWP7iZ+ghDhecD6t3TqSjhzgoTVd1sK5KQw9xUM9K9VEt
TEUPcQiWKw459yUFPcQhMPepYlJ5MnqIg8av0pP5dU/RQwI2Djo41GskoYcE
BDY/Pelw9TF6SIDJyLGzAvRE9JCAsrwg02s3HqGHBFw2Lm4aWRWPHhLg2Lv6
nUpHHHpIwKEbnGLxtAfoIQG6tp8L3l+4jx4S4GZb5uDsGYsevPf3jKXIOseg
hwT03nu4T8Q1Gj0kYFOzpam3bxR6SIDe0FXFTcvuoYcEFP/sDakKuoMeEnDx
qWT5xr7/0EMCBB0lbzp4RaKHBDgcMdIeEruFHhJgEejX05V6Az0kYIg4Khgc
uI4eEjBx4I/WsM419JCA6EczNJWmR6CHBNBfb/5UKhiOHhKQLj3rvSEtDD0k
IDjjiEmC2FX04F3PRWcbzLqCHpJwZucVnfjAEPSQBO7C+mGv+kvoIQlX1laM
xFhfRA9JqOKmx07VXEAPSaj0l8tz8T+PHpJgLKyb/nlJEHpIgm+G+vG5vefQ
QxKer3cXO5F3Fj0kwWnI3r89/gx6SILkwjaP6/+dRg9JGDwbo5NwOwA9JGFI
yGSffeIp9JCEaay4xaIh/ughCQk+y1+9rDyBHpIwK+ljXLiBH3pIwhvmtrFN
b4+jhyRcEs95m2dxDD0kIe70MamKoSPoIQlJQXfVTjz1QQ9JeNv0IT3tqDd6
SIKWu+ToRQsv9JCEy4vOzJytdxg9JOHW4Tyfu9qH0EMSwqOamrR1D6IH7/0n
t5O5mzzRQwpytp0xcPt7AD2k4Pmm9Ikjq9zRQwrcL7yTUIt3Qw8pKHI6YKO/
2BU9pOBM4kWP+/ku6CEFcc8TT6w8vBc9pODn0t7/+rWc0UMKpOzce2r5nNBD
CnpStwzK1jqghxRsrrvxKuWbPXpIgWKI1vrqIjv0kIKl+zJrfv22RQ8pcGRZ
in9s2YMeUvArlxkZob0bPaSge1FQQd51G/SQgnnBcuKK0jvRQwouOTgLuNze
jh5SQLPadjGYY40eUhBuEPP7cI8VekjB7EdmWbMzt6KHFLwfPPQo9vIW9JCC
W8l3uAwvS/SQgo+qVjYh+yzQQwqOhS0M3+Rujh5SUJf+wf/Kyc3oIQ1iOiZ7
NVdvQg9pqEg+ssHj8kb0kAbzZUNbw4Y3oIc0bLhb37bnmAl6SENi0FOdp1LG
6CENRfs0LfZmGqGHNCyIFt9w8pAhekiD/JPso8PcdeghDY2q1+KaZhighzQE
eG7b4yq6Fj2kwUTDm5sooI8e0uBmUGJSLbEGPaShzGzLDpM5gB7SMPE1eMzl
Ehc9pGGNgEdLY4seekiDXUqK+adduughDY9WF9lWN65GD2kwdsxOEj67Si/7
n4c00Evqdy3UXoke0hCuaWtoNLgcPaShQ3Pzor0ftdFDGiw3aPNFP16GHrz3
e9oumX5vKXrwnrdeuWvsnhZ6SINT5/j9wCRN9GCAgaDt1dHwJdR5hBiwudo/
flfdYvRhgGNknneT8SI9alwMePPZtXBH/kL0YoDF3o+nLm5bQJ1XngH7d5a6
7RpXQz8G3PvEF5ubpkqdfw4DfjiN33njNw89GTAt+PhhW6u51Dw0GLDUNUbp
HZmDvgwoeu5aKLFqNrWvqxhQKunB9eKqoDcDdts/m77SYhY1L30GuKbVvtFr
UEJ/3vWUjuaOcGZS8zPl3S+izXbXkxm4DwzQ1Lu8XmupAjXPbQxw1q3J2/R5
Ou4HA3wYyn9ijshR87VjwNbHlQfmrJDVo/5+hgE0/3U+5ULTqHm7MWD6jYXc
nw1s3B8GzHQ/9pTzg0XN35sBxa0usbolTNwnBoSXtRHRvwzK4xQD1nbkZX/p
ksb9YsBI5ZK6dTpSlEcwA8bGlWQW3JagPEIZoCQfGrRcRpzyiOB9XTMYoxst
hvvHm5e9oriivijlcZcBAZv98/IHhHEfGRAa99hJ54UQ5RHPu9/J8nVnrgri
fjIg9u6cT8+PCFAeaQx4EDL6RNidH39+MKCxWmDnTU8+yuMVA4IfKxg/DqDh
/jLg6u3UrywypfvPo4ABGUtPyvCFT+hS+8zbl1qB72UTY7r/PL4xQM1+neau
k6O61H4zwPvb27ku7BFd6p/LM0D8yp7gvy+GdKl9Z0DVyjijbJ9BXeqfA/P2
UTLq1Ij+gC61/wz4uyq3JEW5X/efRzcDwpI3RNMk+nSpHnjny/exYYj06v7z
GOXtJ02+UZbRo0v1wQT6NKnuLardulQfTDh3if19YVinLtUHEwZSn1Rv72rX
pfpgAt+ERkyvfZsu1QcTHFJB7F1biy7VBxOiUuSPPDjfrEv1wYRhP7tfF1Y1
6VJ98K5vovzLdbRBl+qDCdvpDAmLr/W6VB9MSFlcsNwquU6X6oMJS62Fb0bG
1OpSfTCBK5qz1iy2RpfqgwnMfDiamFKtS/XBe/8ov0znrb+UhxETDqZYx041
V1Iepkw4/6hgnd6mP5SHORMW++ZGOH/+RXlsY0LzKEvVwqaC8rBhgozozNha
WjnlYcf76GX6qJ2e9VOX+nnKhEUWriZfTv2gPNyY4HPy6YPlO0opD08mSNHj
Cu3XllAe3kw4tPfmZ1/d75THcSboK8Zqpa/5RnmcYkKy/65Ak63FlMc5Jhx1
G7KUbiukPIJ5841pC/Nb+5XyCGVC1/FLyRGpnymPCCZMVSbNVln5ifK4xYTG
Wr+JsaIPlMddJiSu/yQt7VdAecQyIXrshrilTj7lEc8E0yzl54VieZRHEhOe
FH/Uud6SS3mkMUE39Ijpp/J3lEcWE1yeRETd+PmW8njFhCPt+1auqM2hPN7x
5iHtGPxt4A32wfOY6OEOk9fYBxMWmsY7Xo5+iX0wYfqY1Ogm+RfYBxMs5Z3U
GXHZ2AcTNHrX700yzMI+mKBjO+yvMPqM8mhkwo/XfuUWbzKwDyboLVS+43At
Hftgwt1jwcLOvmnYBxOyn4o+9PdMxT6YsNLe/G3N4RTsgwU/JZ3jP5xNxj5Y
wLpO2zxo8BT7YEHv4KrW8JtPsA8W7I5xMFUSeIx9sOCl4C6nnWcSsA/e9fQe
9apMf4R9sOB1xNJI65yH2AcLPh3awRg4Hod9sGBRd5rxmOED7IMFMWYfMv3m
3Mc+WHB9mtmVG9Kx2AcLlqSsVfKhx2AfLDij6Kxoxo7GPliwc9eZ6bYLorAP
Fqxr3P2648Zd7IMFK198q/rafxv74J2X/1TbDJf/sA8WbBFYfud+9y3sg3c+
e3uldZdvYh8s+PGmfEGr3g3sgwWX74YsD528hn2wIGN/cTznWwT2wQIPM85M
ifRw7IMFfe/HH82MC8M+WNChGL0qOu4q9sGCpzOX1hWnX8E+eM8nmpdRey8U
+2BBjlzfk5jOy9gHC7aa0uTCtlzCPlgwMRxidrg4GPtgwZWFH1Lk7S5gHywo
u+WX7iJ0HvtggUXrC0HLl4HYBwukj658XnH2HPbBgkszi66I7z6LfbBAn//p
YkGjM9gHC6Qeux9o457GPlhQZxH9tt8gAPvgzf+D6/nd1qewDxYcdh6k1XWf
xD5YUNEJ+2nGJ7AP3v5El459yfTFPlhwSpXWxtQ7jn3w5iV7QfZR6VHsgwUy
4T+m+506gn2woHSB0aEzXB/sgwVRErNe5Ul6Yx8sCDu4pd2q4zD2wYIv51Mj
tv05hH2wwHFnCemvOIh9sCHqotkHxwZP7IMNvfMdT5SNeWAfbMirv/gkcd0B
7IMNc6dvye6N2499sGFHSJ69m5Ib9sGG651/bjck7MM+2JB1SThqzQYX7IMN
2rna4h6TztgHG3Tm1zP25zphH2wQ1nJ9anDLEftgQ8CNvj6mvwP2wQZTuSij
kcP22AcbzPo089WP2GEfbFBXLLjTEGSLfbChM25f5y+TPdgHG8ajfn1Ru7sL
+2DDT1vDPCdRG+yDDRl11hd3nN+BfbBhyfMr9/8obsc+2HBN8XvA9/fbsA82
3Plo9kDL3wr7YIPAa/nSCZOt2Acb5lXmW6xX24J9sMFbz3/RErYl9sEGzS+j
Z/5IWmAfbFhdVNZxTtYc+2CDcVFRiduizdgHG9ZqR+ek3DHDPtigEi9Rrz9q
in2wIf5ByWJD9w3YBxvOh5Qrnh8wxj7YQD/26n7D1fXYBxuu7DpkumGNEfbB
BrWiEut0fkPsgw21g+n8C38YYB9s8HLMynyXuRb7YIPFPQen6Ef62Acb/rOq
+dr/aA32wYbi4I6GwUzAPnj7sv6PT/kDgn3wrm98+oNhPwf7YMOPsXstzdv1
sA/e/qmOjZ36oYN9sOGZg8zcWqfV2Acb3qsrRnWJrcI+2MC4bNv2X84K7IMN
mfHnO5rOL8c+2OAP49q1dtrYB28+ZlW6cSbLsA82nM0Ry9ypvxT7kIHN3KDO
5eu1dP8PcQM2XQ==
         "]]}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.5, 0, 0.5], AbsolutePointSize[6], Thickness[Tiny], 
            CircleBox[{0, 0}]},
           ImageSize->6], {0., 0.}], CompressedData["
1:eJw9UTssg1EU/tVj6NCJtdJIhEEMJCx83SoxiNqkE8GoFpJadaihJSwVS1MS
gzShg9bgUYOESorIL0XSVvoIQlVbYsB/v//GSW7Ovfec73HPtYxN2ydqFUVp
1VaNtgzamm8M2dKuVdgjZvfzsMnKFAmh3eGLVdqM1jW/iChGWGiwakVtcwyj
GnT2LRqszMZTeLVuh+9H4uLo7RLxjQ2tqgYTyBNXQTfvr2EirowTAYvdwCJk
zUXp4xZh+igg4xIGk8gy5zAj6JwPSAq4mobCSGGO70hhIM1GbNnE5g5L9JVB
mD7uQVn1EYfUvUQzdbMYnxRxhSnmHH5FuZJAiDx5dND3Oaq8L8BD3jP0cwBP
GKXvI7j1AaGeQnu4iIt4QQ/79tFEwlcMyjPH5XhDgbAd+f4iOqkXlnpFtLBx
G/p/vOOA/jelfgl1BAagP78k+QLSz4fkC8r/KWOFPH7pr4xdztsr51v5r+t+
q5JvGVH2VTFEnnXp/xOznP+C/I8viffgD2raKvY=
         "]]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.5, 0, 0.5], AbsolutePointSize[6], Thickness[Tiny], 
            CircleBox[{0, 0}]},
           ImageSize->6], {0., 0.}], CompressedData["
1:eJxFUT1IQlEUfuVm0RA2tBgtYUsNtdb3aDHadAyHiH6gJVsaDKohg5Z+qKW2
0CnoQU26lUIhGEkRT4IiDUtKSk2tJeiecy+3A4f3zvnOz3e+2z057592GIbR
I7xJeLPwJZflzYX20GJHgkNjnWbMHX73xSz46Wen3TzYJ4ujlXBnmylAAZyj
7glsJeoO08n5S3Da94teSnvSuOCCBqICtSMZHIktLquCwQGyW/RxXQlJrrtD
IURE8nKvL4uJGbJH5Dl/jxXmmcUCjQs+4DpNloHB9oQRGu9NYZS/OdwQLTuJ
7QQtyGOc556B6drPKDLhE3TRue4C5njuMWZ57wtWVWwx71f0M+8IGnx3UfUf
YpgFeMO60jEsBcIu67aBK+ZZwinruowOHviBFMebYBkCn7pe3l/GIs9bU/vK
ul++R0XhU2p/VelgGPL8qsYlny+Ny/epaVzyq2lc6lvXuOTb0HicefzHkv+3
jqX96P4/aCQWEg==
         "]]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.5, 0, 0.5], AbsolutePointSize[6], Thickness[Tiny], 
            CircleBox[{0, 0}]},
           ImageSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQA2JGIGYC4mqRde4Pq6bYc11fXGDbpeSwQ671deCOdfby
ICpO3GHWTBDYaV9sC1LB4wAUBao4aF8A5jM6gPVxHbfvP/RVI6b/h71mDIh1
xt73YRXQ5Pf2S8AKL9i/AOt7aG9iDAKX7X9rgBTesT8M0nboqn0X2ODT9kFg
B9ywtwIbfMj+EciYh7fs50HdUQi29679e7B5G+0ZwOCBfRnUHx5gex9C7Vto
PwHsrkf2J8H+qrMHO/f6Y/vJYPM6If6Ue2q/CSzfZ5+eBgLPoOYyMIBMFVn3
HGp+iv03sLtfQPkl9nZgd76Cq2+FBBCcf/YMCLyB80XBBr6zb4OaBw6umPdw
eYj/P8D5EPsQfEh8fITzIfZ/gvMh3v+E5p7PcD4kfr6guQ/Bh4TvVzT3foPz
d4LDCcGHuP87nA8BP+B8AJvt6MI=
         "]]}, {}}, {}, {}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"\[Theta]=3\"","\"\[Theta]=6\"","\"\[Theta]=10\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                  "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
              "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Simulation\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, ImageSize -> 6}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}]}, ImageSize -> 6], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.85, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*SubsuperscriptBox[\\(f\\), SubscriptBox[\\(V\\), \\(1\\)], \
\\((\[Alpha])\\)]\\)(v)\"", TraditionalForm], None}, {
      FormBox["\"v\"", TraditionalForm], None}},
   FrameStyle->Directive[Automatic, 15, Bold],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1.5}, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{0}, {0.}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
TNh3xt9NjLYV+5gHtucGTXySNVn/ByM1Vh4=
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          Line[CompressedData["
1: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
br8m1YckfHktfvRqTZ/m/wFfdESY
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          Line[CompressedData["
1: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
5eu1dP8PcQM2XQ==
           "]]}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Graphics[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               AbsolutePointSize[6]], 
              RGBColor[0.5, 0, 0.5], 
              Thickness[Tiny], 
              Circle[{0, 0}]}, ImageSize -> 6], {0., 0.}], CompressedData["
1:eJw9UTssg1EU/tVj6NCJtdJIhEEMJCx83SoxiNqkE8GoFpJadaihJSwVS1MS
gzShg9bgUYOESorIL0XSVvoIQlVbYsB/v//GSW7Ovfec73HPtYxN2ydqFUVp
1VaNtgzamm8M2dKuVdgjZvfzsMnKFAmh3eGLVdqM1jW/iChGWGiwakVtcwyj
GnT2LRqszMZTeLVuh+9H4uLo7RLxjQ2tqgYTyBNXQTfvr2EirowTAYvdwCJk
zUXp4xZh+igg4xIGk8gy5zAj6JwPSAq4mobCSGGO70hhIM1GbNnE5g5L9JVB
mD7uQVn1EYfUvUQzdbMYnxRxhSnmHH5FuZJAiDx5dND3Oaq8L8BD3jP0cwBP
GKXvI7j1AaGeQnu4iIt4QQ/79tFEwlcMyjPH5XhDgbAd+f4iOqkXlnpFtLBx
G/p/vOOA/jelfgl1BAagP78k+QLSz4fkC8r/KWOFPH7pr4xdztsr51v5r+t+
q5JvGVH2VTFEnnXp/xOznP+C/I8viffgD2raKvY=
           "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Graphics[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               AbsolutePointSize[6]], 
              RGBColor[0.5, 0, 0.5], 
              Thickness[Tiny], 
              Circle[{0, 0}]}, ImageSize -> 6], {0., 0.}], CompressedData["
1:eJxFUT1IQlEUfuVm0RA2tBgtYUsNtdb3aDHadAyHiH6gJVsaDKohg5Z+qKW2
0CnoQU26lUIhGEkRT4IiDUtKSk2tJeiecy+3A4f3zvnOz3e+2z057592GIbR
I7xJeLPwJZflzYX20GJHgkNjnWbMHX73xSz46Wen3TzYJ4ujlXBnmylAAZyj
7glsJeoO08n5S3Da94teSnvSuOCCBqICtSMZHIktLquCwQGyW/RxXQlJrrtD
IURE8nKvL4uJGbJH5Dl/jxXmmcUCjQs+4DpNloHB9oQRGu9NYZS/OdwQLTuJ
7QQtyGOc556B6drPKDLhE3TRue4C5njuMWZ57wtWVWwx71f0M+8IGnx3UfUf
YpgFeMO60jEsBcIu67aBK+ZZwinruowOHviBFMebYBkCn7pe3l/GIs9bU/vK
ul++R0XhU2p/VelgGPL8qsYlny+Ny/epaVzyq2lc6lvXuOTb0HicefzHkv+3
jqX96P4/aCQWEg==
           "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Graphics[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               AbsolutePointSize[6]], 
              RGBColor[0.5, 0, 0.5], 
              Thickness[Tiny], 
              Circle[{0, 0}]}, ImageSize -> 6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBQA2JGIGYC4mqRde4Pq6bYc11fXGDbpeSwQ671deCOdfby
ICpO3GHWTBDYaV9sC1LB4wAUBao4aF8A5jM6gPVxHbfvP/RVI6b/h71mDIh1
xt73YRXQ5Pf2S8AKL9i/AOt7aG9iDAKX7X9rgBTesT8M0nboqn0X2ODT9kFg
B9ywtwIbfMj+EciYh7fs50HdUQi29679e7B5G+0ZwOCBfRnUHx5gex9C7Vto
PwHsrkf2J8H+qrMHO/f6Y/vJYPM6If6Ue2q/CSzfZ5+eBgLPoOYyMIBMFVn3
HGp+iv03sLtfQPkl9nZgd76Cq2+FBBCcf/YMCLyB80XBBr6zb4OaBw6umPdw
eYj/P8D5EPsQfEh8fITzIfZ/gvMh3v+E5p7PcD4kfr6guQ/Bh4TvVzT3foPz
d4LDCcGHuP87nA8BP+B8AJvt6MI=
           "]]}, {}}}, {}, {}, {{}, {}}}}, {
     PlotRange -> {{0, 1.5}, All}, PlotRangePadding -> {{0}, {0.}}, ImageSize -> 
      Large, Frame -> True, 
      FrameLabel -> {{
        "\!\(\*SubsuperscriptBox[\(f\), SubscriptBox[\(V\), \(1\)], \((\
\[Alpha])\)]\)(v)", None}, {"v", None}}, FrameStyle -> 
      Directive[Automatic, 15, Bold], DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 5.}, {0, 4.}}, PlotRangeClipping -> True, 
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 5.}, {0, 4.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {"Simulation"}, LegendMarkers -> {{
           Graphics[{
             RGBColor[0.5, 0, 0.5], 
             Thickness[Tiny], 
             Circle[{0, 0}]}, ImageSize -> 6], Automatic}}, Joined -> {False},
         LabelStyle -> {}, LegendLayout -> "Column"]]], {0.85, 0.75}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.8367304022349324`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 99, 1, 86, "Section"],
Cell[682, 25, 22788, 353, 542, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23507, 383, 209, 3, 86, "Section"],
Cell[CellGroupData[{
Cell[23741, 390, 9727, 179, 494, "Input"],
Cell[CellGroupData[{
Cell[33493, 573, 1466, 23, 28, "Print"],
Cell[34962, 598, 1522, 27, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36545, 632, 110, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[36680, 637, 3175, 80, 638, "Input"],
Cell[39858, 719, 588, 14, 28, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40495, 739, 74, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[40594, 744, 3427, 85, 350, "Input"],
Cell[CellGroupData[{
Cell[44046, 833, 453, 6, 144, "Print"],
Cell[44502, 841, 469, 6, 121, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45032, 854, 177, 2, 86, "Section"],
Cell[45212, 858, 11561, 224, 851, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56810, 1087, 94, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[56929, 1092, 15381, 327, 1197, "Input"],
Cell[72313, 1421, 115366, 2027, 479, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

